"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/3d-force-graph-vr@2.2.5_three@0.167.1";
exports.ids = ["vendor-chunks/3d-force-graph-vr@2.2.5_three@0.167.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/3d-force-graph-vr@2.2.5_three@0.167.1/node_modules/3d-force-graph-vr/dist/3d-force-graph-vr.mjs":
/*!****************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/3d-force-graph-vr@2.2.5_three@0.167.1/node_modules/3d-force-graph-vr/dist/3d-force-graph-vr.mjs ***!
  \****************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _3dForceGraphVr)\n/* harmony export */ });\n/* harmony import */ var aframe__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aframe */ \"(ssr)/./node_modules/.pnpm/aframe@1.6.0/node_modules/aframe/dist/aframe-master.js\");\n/* harmony import */ var aframe_extras__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! aframe-extras */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/index.js\");\n/* harmony import */ var aframe_forcegraph_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! aframe-forcegraph-component */ \"(ssr)/./node_modules/.pnpm/aframe-forcegraph-component@3.0.8_three@0.167.1/node_modules/aframe-forcegraph-component/index.js\");\n/* harmony import */ var kapsule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! kapsule */ \"(ssr)/./node_modules/.pnpm/kapsule@1.14.5/node_modules/kapsule/dist/kapsule.mjs\");\n/* harmony import */ var accessor_fn__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! accessor-fn */ \"(ssr)/./node_modules/.pnpm/accessor-fn@1.5.1/node_modules/accessor-fn/dist/accessor-fn.mjs\");\n/* harmony import */ var polished__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! polished */ \"(ssr)/./node_modules/.pnpm/polished@4.3.1/node_modules/polished/dist/polished.esm.js\");\n\n\n\n\n\n\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".graph-nav-info {\\n  position: absolute;\\n  bottom: 5px;\\n  width: 100%;\\n  text-align: center;\\n  color: slategrey;\\n  opacity: 0.7;\\n  font-size: 10px;\\n  font-family: Sans-serif;\\n  z-index: 1000;\\n}\";\nstyleInject(css_248z);\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof Symbol && r[Symbol.iterator] || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t.return && (u = t.return(), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : String(i);\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n//\n\nvar _3dForceGraphVr = (0,kapsule__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\n  props: {\n    width: {\n      \"default\": window.innerWidth,\n      triggerUpdate: false,\n      onChange: function onChange(width, state) {\n        if (state.container) state.container.style.width = \"\".concat(width, \"px\");\n      }\n    },\n    height: {\n      \"default\": window.innerHeight,\n      triggerUpdate: false,\n      onChange: function onChange(height, state) {\n        if (state.container) state.container.style.height = \"\".concat(height, \"px\");\n      }\n    },\n    jsonUrl: {},\n    graphData: {\n      \"default\": {\n        nodes: [],\n        links: []\n      }\n    },\n    numDimensions: {\n      \"default\": 3\n    },\n    dagMode: {},\n    dagLevelDistance: {},\n    dagNodeFilter: {\n      \"default\": function _default() {\n        return true;\n      }\n    },\n    onDagError: {\n      \"default\": undefined\n    },\n    backgroundColor: {\n      \"default\": '#002'\n    },\n    showNavInfo: {\n      \"default\": true\n    },\n    nodeRelSize: {\n      \"default\": 4\n    },\n    // volume per val unit\n    nodeId: {\n      \"default\": 'id'\n    },\n    nodeLabel: {\n      \"default\": 'name'\n    },\n    nodeDesc: {\n      \"default\": 'desc'\n    },\n    onNodeHover: {},\n    onNodeClick: {},\n    nodeVal: {\n      \"default\": 'val'\n    },\n    nodeResolution: {\n      \"default\": 8\n    },\n    // how many slice segments in the sphere's circumference\n    nodeVisibility: {\n      \"default\": true\n    },\n    nodeColor: {\n      \"default\": 'color'\n    },\n    nodeAutoColorBy: {},\n    nodeOpacity: {\n      \"default\": 0.75\n    },\n    nodeThreeObject: {},\n    nodeThreeObjectExtend: {\n      \"default\": false\n    },\n    linkSource: {\n      \"default\": 'source'\n    },\n    linkTarget: {\n      \"default\": 'target'\n    },\n    linkLabel: {\n      \"default\": 'name'\n    },\n    linkDesc: {\n      \"default\": 'desc'\n    },\n    onLinkHover: {},\n    onLinkClick: {},\n    linkVisibility: {\n      \"default\": true\n    },\n    linkColor: {\n      \"default\": 'color'\n    },\n    linkAutoColorBy: {},\n    linkOpacity: {\n      \"default\": 0.2\n    },\n    linkWidth: {\n      \"default\": 0\n    },\n    linkResolution: {\n      \"default\": 6\n    },\n    // how many radial segments in each line cylinder's geometry\n    linkCurvature: {\n      \"default\": 0\n    },\n    linkCurveRotation: {\n      \"default\": 0\n    },\n    linkMaterial: {},\n    linkThreeObject: {},\n    linkThreeObjectExtend: {\n      \"default\": false\n    },\n    linkPositionUpdate: {},\n    linkDirectionalArrowLength: {\n      \"default\": 0\n    },\n    linkDirectionalArrowColor: {},\n    linkDirectionalArrowRelPos: {\n      \"default\": 0.5\n    },\n    // value between 0<>1 indicating the relative pos along the (exposed) line\n    linkDirectionalArrowResolution: {\n      \"default\": 8\n    },\n    // how many slice segments in the arrow's conic circumference\n    linkDirectionalParticles: {\n      \"default\": 0\n    },\n    // animate photons travelling in the link direction\n    linkDirectionalParticleSpeed: {\n      \"default\": 0.01\n    },\n    // in link length ratio per frame\n    linkDirectionalParticleWidth: {\n      \"default\": 0.5\n    },\n    linkDirectionalParticleColor: {},\n    linkDirectionalParticleResolution: {\n      \"default\": 4\n    },\n    // how many slice segments in the particle sphere's circumference\n    forceEngine: {\n      \"default\": 'd3'\n    },\n    // d3 or ngraph\n    d3AlphaMin: {\n      \"default\": 0\n    },\n    d3AlphaDecay: {\n      \"default\": 0.0228\n    },\n    d3VelocityDecay: {\n      \"default\": 0.4\n    },\n    ngraphPhysics: {},\n    warmupTicks: {\n      \"default\": 0\n    },\n    // how many times to tick the force engine at init before starting to render\n    cooldownTicks: {},\n    cooldownTime: {\n      \"default\": 15000\n    },\n    // ms\n    onEngineTick: {},\n    onEngineStop: {}\n  },\n  methods: _objectSpread2(_objectSpread2({}, Object.assign.apply(Object, [{}].concat(_toConsumableArray(['getGraphBbox', 'emitParticle', 'd3Force', 'd3ReheatSimulation', 'refresh'].map(function (method) {\n    return _defineProperty({}, method, function (state) {\n      var aframeComp = state.forcegraph.components.forcegraph;\n      for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n      var returnVal = aframeComp[method].apply(aframeComp, args);\n      return returnVal === aframeComp ? this // chain based on this object, not the inner aframe component\n      : returnVal;\n    });\n  }))))), {}, {\n    _destructor: function _destructor() {\n      this.graphData({\n        nodes: [],\n        links: []\n      });\n    }\n  }),\n  init: function init(domNode, state) {\n    // Wipe DOM\n    domNode.innerHTML = '';\n    state.container = document.createElement('div');\n    domNode.appendChild(state.container);\n    state.container.style.position = 'relative';\n    state.container.style.width = \"\".concat(state.width, \"px\");\n    state.container.style.height = \"\".concat(state.height, \"px\");\n\n    // Add nav info section\n    state.container.appendChild(state.navInfo = document.createElement('div'));\n    state.navInfo.className = 'graph-nav-info';\n    state.navInfo.textContent = 'Mouse drag: look, gamepad/arrow/wasd keys: move';\n\n    // Create scene\n    var scene = document.createElement('a-scene');\n    scene.setAttribute('embedded', '');\n    //scene.setAttribute('stats', null);\n\n    scene.appendChild(state.sky = document.createElement('a-sky'));\n    state.sky.setAttribute('radius', 3000);\n\n    // Add camera\n    var cameraG;\n    scene.appendChild(cameraG = document.createElement('a-entity'));\n    cameraG.setAttribute('position', '0 0 300');\n    cameraG.setAttribute('movement-controls', 'controls: gamepad, touch; fly: true; speed: 7');\n    var camera;\n    cameraG.appendChild(camera = document.createElement('a-entity'));\n    camera.setAttribute('camera', '');\n    camera.setAttribute('position', '0 0 0');\n    camera.setAttribute('look-controls', 'pointerLockEnabled: false');\n    camera.setAttribute('wasd-controls', 'fly: true; acceleration: 700');\n\n    // display cursor in middle of screen\n    // let cursor;\n    // camera.appendChild(cursor = document.createElement('a-cursor'));\n    // cursor.setAttribute('color', 'lavender');\n    // cursor.setAttribute('opacity', 0.5);\n    // cursor.setAttribute('raycaster', 'objects: ----none----'); // disable cursor raycaster\n\n    // Setup tooltip\n    var tooltipEl;\n    camera.appendChild(tooltipEl = document.createElement('a-text'));\n    tooltipEl.setAttribute('position', '0 -0.3 -1');\n    tooltipEl.setAttribute('width', 2);\n    tooltipEl.setAttribute('align', 'center');\n    tooltipEl.setAttribute('color', 'lavender');\n    tooltipEl.setAttribute('value', '');\n\n    // Setup sub-tooltip\n    var subTooltipEl;\n    camera.appendChild(subTooltipEl = document.createElement('a-text'));\n    subTooltipEl.setAttribute('position', '0 -0.4 -1');\n    subTooltipEl.setAttribute('width', 1.3);\n    subTooltipEl.setAttribute('align', 'center');\n    subTooltipEl.setAttribute('color', 'lavender');\n    subTooltipEl.setAttribute('value', '');\n\n    // Setup mouse cursor and laser raycasting controls\n    state.raycasterEls = [];\n    var mouseCursor;\n    scene.appendChild(mouseCursor = document.createElement('a-entity'));\n    mouseCursor.setAttribute('cursor', 'rayOrigin: mouse; mouseCursorStylesEnabled: true');\n    mouseCursor.setAttribute('raycaster', 'objects: [forcegraph]; interval: 100');\n    state.raycasterEls.push(mouseCursor);\n    ['left', 'right'].forEach(function (hand) {\n      var laser;\n      cameraG.appendChild(laser = document.createElement('a-entity'));\n      laser.setAttribute('laser-controls', \"hand: \".concat(hand, \"; model: false;\")); // Oculus touch offsets are slightly off\n      laser.setAttribute('raycaster', 'objects: [forcegraph]; interval: 100; lineColor: steelblue; lineOpacity: 0.85');\n      state.raycasterEls.push(laser);\n    });\n\n    // Add forcegraph entity\n    scene.appendChild(state.forcegraph = document.createElement('a-entity'));\n    state.forcegraph.setAttribute('forcegraph', null);\n\n    // attach scene\n    state.container.appendChild(scene);\n\n    // update tooltips\n    state.forcegraph.setAttribute('forcegraph', Object.assign.apply(Object, _toConsumableArray(['node', 'link'].map(function (t) {\n      var cct = {\n        node: 'Node',\n        link: 'Link'\n      }[t]; // camel-case version\n      return _defineProperty({}, \"on\".concat(cct, \"Hover\"), function onHover(obj, prevObj) {\n        var label = obj ? (0,accessor_fn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state[\"\".concat(t, \"Label\")])(obj) || '' : '';\n        var subLabel = obj ? (0,accessor_fn__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(state[\"\".concat(t, \"Desc\")])(obj) || '' : '';\n        tooltipEl.setAttribute('value', label);\n        subTooltipEl.setAttribute('value', subLabel);\n        state[\"on\".concat(cct, \"Hover\")] && state[\"on\".concat(cct, \"Hover\")](obj, prevObj);\n      });\n    }))));\n  },\n  update: function update(state, changedProps) {\n    if (changedProps.hasOwnProperty('backgroundColor')) {\n      var alpha = (0,polished__WEBPACK_IMPORTED_MODULE_5__.parseToRgb)(state.backgroundColor).alpha;\n      if (alpha === undefined) alpha = 1;\n      state.sky.setAttribute('color', (0,polished__WEBPACK_IMPORTED_MODULE_5__.opacify)(1, state.backgroundColor));\n      state.sky.setAttribute('opacity', alpha);\n    }\n    changedProps.hasOwnProperty('showNavInfo') && (state.navInfo.style.display = state.showNavInfo ? null : 'none');\n\n    // deactivate raycasting against the forcegraph if no interaction props are set\n    var isInteractive = ['onNodeHover', 'onLinkHover', 'onNodeClick', 'onLinkClick'].some(function (p) {\n      return state[p];\n    }) || ['nodeLabel', 'linkLabel'].some(function (p) {\n      return state[p] !== 'name';\n    }) || ['nodeDesc', 'linkDesc'].some(function (p) {\n      return state[p] !== 'desc';\n    });\n    state.raycasterEls.forEach(function (el) {\n      return el.setAttribute('raycaster', isInteractive ? 'objects: [forcegraph]; interval: 100' : 'objects: __none__');\n    });\n    var passThroughProps = ['jsonUrl', 'numDimensions', 'dagMode', 'dagLevelDistance', 'dagNodeFilter', 'onDagError', 'nodeRelSize', 'nodeId', 'onNodeClick', 'nodeVal', 'nodeResolution', 'nodeVisibility', 'nodeColor', 'nodeAutoColorBy', 'nodeOpacity', 'nodeThreeObject', 'nodeThreeObjectExtend', 'linkSource', 'linkTarget', 'onLinkClick', 'linkVisibility', 'linkColor', 'linkAutoColorBy', 'linkOpacity', 'linkWidth', 'linkResolution', 'linkCurvature', 'linkCurveRotation', 'linkMaterial', 'linkThreeObject', 'linkThreeObjectExtend', 'linkPositionUpdate', 'linkDirectionalArrowLength', 'linkDirectionalArrowColor', 'linkDirectionalArrowRelPos', 'linkDirectionalArrowResolution', 'linkDirectionalParticles', 'linkDirectionalParticleSpeed', 'linkDirectionalParticleWidth', 'linkDirectionalParticleColor', 'linkDirectionalParticleResolution', 'forceEngine', 'd3AlphaMin', 'd3AlphaDecay', 'd3VelocityDecay', 'ngraphPhysics', 'warmupTicks', 'cooldownTicks', 'cooldownTime', 'onEngineTick', 'onEngineStop'];\n    var newProps = Object.assign.apply(Object, [{}].concat(_toConsumableArray(Object.entries(state).filter(function (_ref3) {\n      var _ref4 = _slicedToArray(_ref3, 2),\n        prop = _ref4[0],\n        val = _ref4[1];\n      return changedProps.hasOwnProperty(prop) && passThroughProps.indexOf(prop) !== -1 && val !== undefined && val !== null;\n    }).map(function (_ref5) {\n      var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        val = _ref6[1];\n      return _defineProperty({}, key, val);\n    })), _toConsumableArray(Object.entries(state.graphData).map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n        key = _ref9[0],\n        val = _ref9[1];\n      return _defineProperty({}, key, val);\n    }))));\n    state.forcegraph.setAttribute('forcegraph', newProps);\n  }\n});\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vM2QtZm9yY2UtZ3JhcGgtdnJAMi4yLjVfdGhyZWVAMC4xNjcuMS9ub2RlX21vZHVsZXMvM2QtZm9yY2UtZ3JhcGgtdnIvZGlzdC8zZC1mb3JjZS1ncmFwaC12ci5tanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7OztBQUFnQjtBQUNPO0FBQ2M7QUFDUDtBQUNPO0FBQ1U7O0FBRS9DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE1BQU07QUFDTjtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTs7QUFFQSxpQ0FBaUMsdUJBQXVCLGdCQUFnQixnQkFBZ0IsdUJBQXVCLHFCQUFxQixpQkFBaUIsb0JBQW9CLDRCQUE0QixrQkFBa0IsR0FBRztBQUMxTjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUSxZQUFZLGtFQUFrRTtBQUN0RixNQUFNO0FBQ047QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0Isc0JBQXNCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNB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QUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMERBQTBEO0FBQzFELGtFQUFrRTtBQUNsRTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG9FQUFvRSxhQUFhLEtBQUs7QUFDdEYsOERBQThELGVBQWUsc0JBQXNCO0FBQ25HO0FBQ0EsS0FBSzs7QUFFTDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsT0FBTyxLQUFLO0FBQ1osK0JBQStCO0FBQy9CLDBCQUEwQix1REFBVTtBQUNwQyw2QkFBNkIsdURBQVU7QUFDdkM7QUFDQTtBQUNBO0FBQ0EsT0FBTztBQUNQLEtBQUs7QUFDTCxHQUFHO0FBQ0g7QUFDQTtBQUNBLGtCQUFrQixvREFBVTtBQUM1QjtBQUNBLHNDQUFzQyxpREFBTztBQUM3QztBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0EsS0FBSztBQUNMO0FBQ0Esa0ZBQWtGO0FBQ2xGLEtBQUs7QUFDTDtBQUNBLGtEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSwrQkFBK0I7QUFDL0IsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBLCtCQUErQjtBQUMvQixLQUFLO0FBQ0w7QUFDQTtBQUNBLENBQUM7O0FBRXFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hX3Bvc3Rfc2NhcmNpdHkvLi9ub2RlX21vZHVsZXMvLnBucG0vM2QtZm9yY2UtZ3JhcGgtdnJAMi4yLjVfdGhyZWVAMC4xNjcuMS9ub2RlX21vZHVsZXMvM2QtZm9yY2UtZ3JhcGgtdnIvZGlzdC8zZC1mb3JjZS1ncmFwaC12ci5tanM/NzgyYSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgJ2FmcmFtZSc7XG5pbXBvcnQgJ2FmcmFtZS1leHRyYXMnO1xuaW1wb3J0ICdhZnJhbWUtZm9yY2VncmFwaC1jb21wb25lbnQnO1xuaW1wb3J0IEthcHN1bGUgZnJvbSAna2Fwc3VsZSc7XG5pbXBvcnQgYWNjZXNzb3JGbiBmcm9tICdhY2Nlc3Nvci1mbic7XG5pbXBvcnQgeyBwYXJzZVRvUmdiLCBvcGFjaWZ5IH0gZnJvbSAncG9saXNoZWQnO1xuXG5mdW5jdGlvbiBzdHlsZUluamVjdChjc3MsIHJlZikge1xuICBpZiAocmVmID09PSB2b2lkIDApIHJlZiA9IHt9O1xuICB2YXIgaW5zZXJ0QXQgPSByZWYuaW5zZXJ0QXQ7XG4gIGlmICghY3NzIHx8IHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICByZXR1cm47XG4gIH1cbiAgdmFyIGhlYWQgPSBkb2N1bWVudC5oZWFkIHx8IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCdoZWFkJylbMF07XG4gIHZhciBzdHlsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3N0eWxlJyk7XG4gIHN0eWxlLnR5cGUgPSAndGV4dC9jc3MnO1xuICBpZiAoaW5zZXJ0QXQgPT09ICd0b3AnKSB7XG4gICAgaWYgKGhlYWQuZmlyc3RDaGlsZCkge1xuICAgICAgaGVhZC5pbnNlcnRCZWZvcmUoc3R5bGUsIGhlYWQuZmlyc3RDaGlsZCk7XG4gICAgfSBlbHNlIHtcbiAgICAgIGhlYWQuYXBwZW5kQ2hpbGQoc3R5bGUpO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICBoZWFkLmFwcGVuZENoaWxkKHN0eWxlKTtcbiAgfVxuICBpZiAoc3R5bGUuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlLnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICBzdHlsZS5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxuXG52YXIgY3NzXzI0OHogPSBcIi5ncmFwaC1uYXYtaW5mbyB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBib3R0b206IDVweDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgY29sb3I6IHNsYXRlZ3JleTtcXG4gIG9wYWNpdHk6IDAuNztcXG4gIGZvbnQtc2l6ZTogMTBweDtcXG4gIGZvbnQtZmFtaWx5OiBTYW5zLXNlcmlmO1xcbiAgei1pbmRleDogMTAwMDtcXG59XCI7XG5zdHlsZUluamVjdChjc3NfMjQ4eik7XG5cbmZ1bmN0aW9uIF9pdGVyYWJsZVRvQXJyYXlMaW1pdChyLCBsKSB7XG4gIHZhciB0ID0gbnVsbCA9PSByID8gbnVsbCA6IFwidW5kZWZpbmVkXCIgIT0gdHlwZW9mIFN5bWJvbCAmJiByW1N5bWJvbC5pdGVyYXRvcl0gfHwgcltcIkBAaXRlcmF0b3JcIl07XG4gIGlmIChudWxsICE9IHQpIHtcbiAgICB2YXIgZSxcbiAgICAgIG4sXG4gICAgICBpLFxuICAgICAgdSxcbiAgICAgIGEgPSBbXSxcbiAgICAgIGYgPSAhMCxcbiAgICAgIG8gPSAhMTtcbiAgICB0cnkge1xuICAgICAgaWYgKGkgPSAodCA9IHQuY2FsbChyKSkubmV4dCwgMCA9PT0gbCkge1xuICAgICAgICBpZiAoT2JqZWN0KHQpICE9PSB0KSByZXR1cm47XG4gICAgICAgIGYgPSAhMTtcbiAgICAgIH0gZWxzZSBmb3IgKDsgIShmID0gKGUgPSBpLmNhbGwodCkpLmRvbmUpICYmIChhLnB1c2goZS52YWx1ZSksIGEubGVuZ3RoICE9PSBsKTsgZiA9ICEwKTtcbiAgICB9IGNhdGNoIChyKSB7XG4gICAgICBvID0gITAsIG4gPSByO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIWYgJiYgbnVsbCAhPSB0LnJldHVybiAmJiAodSA9IHQucmV0dXJuKCksIE9iamVjdCh1KSAhPT0gdSkpIHJldHVybjtcbiAgICAgIH0gZmluYWxseSB7XG4gICAgICAgIGlmIChvKSB0aHJvdyBuO1xuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gYTtcbiAgfVxufVxuZnVuY3Rpb24gb3duS2V5cyhlLCByKSB7XG4gIHZhciB0ID0gT2JqZWN0LmtleXMoZSk7XG4gIGlmIChPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKSB7XG4gICAgdmFyIG8gPSBPYmplY3QuZ2V0T3duUHJvcGVydHlTeW1ib2xzKGUpO1xuICAgIHIgJiYgKG8gPSBvLmZpbHRlcihmdW5jdGlvbiAocikge1xuICAgICAgcmV0dXJuIE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IoZSwgcikuZW51bWVyYWJsZTtcbiAgICB9KSksIHQucHVzaC5hcHBseSh0LCBvKTtcbiAgfVxuICByZXR1cm4gdDtcbn1cbmZ1bmN0aW9uIF9vYmplY3RTcHJlYWQyKGUpIHtcbiAgZm9yICh2YXIgciA9IDE7IHIgPCBhcmd1bWVudHMubGVuZ3RoOyByKyspIHtcbiAgICB2YXIgdCA9IG51bGwgIT0gYXJndW1lbnRzW3JdID8gYXJndW1lbnRzW3JdIDoge307XG4gICAgciAlIDIgPyBvd25LZXlzKE9iamVjdCh0KSwgITApLmZvckVhY2goZnVuY3Rpb24gKHIpIHtcbiAgICAgIF9kZWZpbmVQcm9wZXJ0eShlLCByLCB0W3JdKTtcbiAgICB9KSA6IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3JzID8gT2JqZWN0LmRlZmluZVByb3BlcnRpZXMoZSwgT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcnModCkpIDogb3duS2V5cyhPYmplY3QodCkpLmZvckVhY2goZnVuY3Rpb24gKHIpIHtcbiAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShlLCByLCBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHQsIHIpKTtcbiAgICB9KTtcbiAgfVxuICByZXR1cm4gZTtcbn1cbmZ1bmN0aW9uIF90b1ByaW1pdGl2ZSh0LCByKSB7XG4gIGlmIChcIm9iamVjdFwiICE9IHR5cGVvZiB0IHx8ICF0KSByZXR1cm4gdDtcbiAgdmFyIGUgPSB0W1N5bWJvbC50b1ByaW1pdGl2ZV07XG4gIGlmICh2b2lkIDAgIT09IGUpIHtcbiAgICB2YXIgaSA9IGUuY2FsbCh0LCByIHx8IFwiZGVmYXVsdFwiKTtcbiAgICBpZiAoXCJvYmplY3RcIiAhPSB0eXBlb2YgaSkgcmV0dXJuIGk7XG4gICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkBAdG9QcmltaXRpdmUgbXVzdCByZXR1cm4gYSBwcmltaXRpdmUgdmFsdWUuXCIpO1xuICB9XG4gIHJldHVybiAoXCJzdHJpbmdcIiA9PT0gciA/IFN0cmluZyA6IE51bWJlcikodCk7XG59XG5mdW5jdGlvbiBfdG9Qcm9wZXJ0eUtleSh0KSB7XG4gIHZhciBpID0gX3RvUHJpbWl0aXZlKHQsIFwic3RyaW5nXCIpO1xuICByZXR1cm4gXCJzeW1ib2xcIiA9PSB0eXBlb2YgaSA/IGkgOiBTdHJpbmcoaSk7XG59XG5mdW5jdGlvbiBfZGVmaW5lUHJvcGVydHkob2JqLCBrZXksIHZhbHVlKSB7XG4gIGtleSA9IF90b1Byb3BlcnR5S2V5KGtleSk7XG4gIGlmIChrZXkgaW4gb2JqKSB7XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KG9iaiwga2V5LCB7XG4gICAgICB2YWx1ZTogdmFsdWUsXG4gICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgd3JpdGFibGU6IHRydWVcbiAgICB9KTtcbiAgfSBlbHNlIHtcbiAgICBvYmpba2V5XSA9IHZhbHVlO1xuICB9XG4gIHJldHVybiBvYmo7XG59XG5mdW5jdGlvbiBfc2xpY2VkVG9BcnJheShhcnIsIGkpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXlMaW1pdChhcnIsIGkpIHx8IF91bnN1cHBvcnRlZEl0ZXJhYmxlVG9BcnJheShhcnIsIGkpIHx8IF9ub25JdGVyYWJsZVJlc3QoKTtcbn1cbmZ1bmN0aW9uIF90b0NvbnN1bWFibGVBcnJheShhcnIpIHtcbiAgcmV0dXJuIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHx8IF9pdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkoYXJyKSB8fCBfbm9uSXRlcmFibGVTcHJlYWQoKTtcbn1cbmZ1bmN0aW9uIF9hcnJheVdpdGhvdXRIb2xlcyhhcnIpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KGFycik7XG59XG5mdW5jdGlvbiBfYXJyYXlXaXRoSG9sZXMoYXJyKSB7XG4gIGlmIChBcnJheS5pc0FycmF5KGFycikpIHJldHVybiBhcnI7XG59XG5mdW5jdGlvbiBfaXRlcmFibGVUb0FycmF5KGl0ZXIpIHtcbiAgaWYgKHR5cGVvZiBTeW1ib2wgIT09IFwidW5kZWZpbmVkXCIgJiYgaXRlcltTeW1ib2wuaXRlcmF0b3JdICE9IG51bGwgfHwgaXRlcltcIkBAaXRlcmF0b3JcIl0gIT0gbnVsbCkgcmV0dXJuIEFycmF5LmZyb20oaXRlcik7XG59XG5mdW5jdGlvbiBfdW5zdXBwb3J0ZWRJdGVyYWJsZVRvQXJyYXkobywgbWluTGVuKSB7XG4gIGlmICghbykgcmV0dXJuO1xuICBpZiAodHlwZW9mIG8gPT09IFwic3RyaW5nXCIpIHJldHVybiBfYXJyYXlMaWtlVG9BcnJheShvLCBtaW5MZW4pO1xuICB2YXIgbiA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChvKS5zbGljZSg4LCAtMSk7XG4gIGlmIChuID09PSBcIk9iamVjdFwiICYmIG8uY29uc3RydWN0b3IpIG4gPSBvLmNvbnN0cnVjdG9yLm5hbWU7XG4gIGlmIChuID09PSBcIk1hcFwiIHx8IG4gPT09IFwiU2V0XCIpIHJldHVybiBBcnJheS5mcm9tKG8pO1xuICBpZiAobiA9PT0gXCJBcmd1bWVudHNcIiB8fCAvXig/OlVpfEkpbnQoPzo4fDE2fDMyKSg/OkNsYW1wZWQpP0FycmF5JC8udGVzdChuKSkgcmV0dXJuIF9hcnJheUxpa2VUb0FycmF5KG8sIG1pbkxlbik7XG59XG5mdW5jdGlvbiBfYXJyYXlMaWtlVG9BcnJheShhcnIsIGxlbikge1xuICBpZiAobGVuID09IG51bGwgfHwgbGVuID4gYXJyLmxlbmd0aCkgbGVuID0gYXJyLmxlbmd0aDtcbiAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBuZXcgQXJyYXkobGVuKTsgaSA8IGxlbjsgaSsrKSBhcnIyW2ldID0gYXJyW2ldO1xuICByZXR1cm4gYXJyMjtcbn1cbmZ1bmN0aW9uIF9ub25JdGVyYWJsZVNwcmVhZCgpIHtcbiAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkludmFsaWQgYXR0ZW1wdCB0byBzcHJlYWQgbm9uLWl0ZXJhYmxlIGluc3RhbmNlLlxcbkluIG9yZGVyIHRvIGJlIGl0ZXJhYmxlLCBub24tYXJyYXkgb2JqZWN0cyBtdXN0IGhhdmUgYSBbU3ltYm9sLml0ZXJhdG9yXSgpIG1ldGhvZC5cIik7XG59XG5mdW5jdGlvbiBfbm9uSXRlcmFibGVSZXN0KCkge1xuICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZS5cXG5JbiBvcmRlciB0byBiZSBpdGVyYWJsZSwgbm9uLWFycmF5IG9iamVjdHMgbXVzdCBoYXZlIGEgW1N5bWJvbC5pdGVyYXRvcl0oKSBtZXRob2QuXCIpO1xufVxuXG4vL1xuXG52YXIgXzNkRm9yY2VHcmFwaFZyID0gS2Fwc3VsZSh7XG4gIHByb3BzOiB7XG4gICAgd2lkdGg6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiB3aW5kb3cuaW5uZXJXaWR0aCxcbiAgICAgIHRyaWdnZXJVcGRhdGU6IGZhbHNlLFxuICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKHdpZHRoLCBzdGF0ZSkge1xuICAgICAgICBpZiAoc3RhdGUuY29udGFpbmVyKSBzdGF0ZS5jb250YWluZXIuc3R5bGUud2lkdGggPSBcIlwiLmNvbmNhdCh3aWR0aCwgXCJweFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGhlaWdodDoge1xuICAgICAgXCJkZWZhdWx0XCI6IHdpbmRvdy5pbm5lckhlaWdodCxcbiAgICAgIHRyaWdnZXJVcGRhdGU6IGZhbHNlLFxuICAgICAgb25DaGFuZ2U6IGZ1bmN0aW9uIG9uQ2hhbmdlKGhlaWdodCwgc3RhdGUpIHtcbiAgICAgICAgaWYgKHN0YXRlLmNvbnRhaW5lcikgc3RhdGUuY29udGFpbmVyLnN0eWxlLmhlaWdodCA9IFwiXCIuY29uY2F0KGhlaWdodCwgXCJweFwiKTtcbiAgICAgIH1cbiAgICB9LFxuICAgIGpzb25Vcmw6IHt9LFxuICAgIGdyYXBoRGF0YToge1xuICAgICAgXCJkZWZhdWx0XCI6IHtcbiAgICAgICAgbm9kZXM6IFtdLFxuICAgICAgICBsaW5rczogW11cbiAgICAgIH1cbiAgICB9LFxuICAgIG51bURpbWVuc2lvbnM6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAzXG4gICAgfSxcbiAgICBkYWdNb2RlOiB7fSxcbiAgICBkYWdMZXZlbERpc3RhbmNlOiB7fSxcbiAgICBkYWdOb2RlRmlsdGVyOiB7XG4gICAgICBcImRlZmF1bHRcIjogZnVuY3Rpb24gX2RlZmF1bHQoKSB7XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgfVxuICAgIH0sXG4gICAgb25EYWdFcnJvcjoge1xuICAgICAgXCJkZWZhdWx0XCI6IHVuZGVmaW5lZFxuICAgIH0sXG4gICAgYmFja2dyb3VuZENvbG9yOiB7XG4gICAgICBcImRlZmF1bHRcIjogJyMwMDInXG4gICAgfSxcbiAgICBzaG93TmF2SW5mbzoge1xuICAgICAgXCJkZWZhdWx0XCI6IHRydWVcbiAgICB9LFxuICAgIG5vZGVSZWxTaXplOiB7XG4gICAgICBcImRlZmF1bHRcIjogNFxuICAgIH0sXG4gICAgLy8gdm9sdW1lIHBlciB2YWwgdW5pdFxuICAgIG5vZGVJZDoge1xuICAgICAgXCJkZWZhdWx0XCI6ICdpZCdcbiAgICB9LFxuICAgIG5vZGVMYWJlbDoge1xuICAgICAgXCJkZWZhdWx0XCI6ICduYW1lJ1xuICAgIH0sXG4gICAgbm9kZURlc2M6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAnZGVzYydcbiAgICB9LFxuICAgIG9uTm9kZUhvdmVyOiB7fSxcbiAgICBvbk5vZGVDbGljazoge30sXG4gICAgbm9kZVZhbDoge1xuICAgICAgXCJkZWZhdWx0XCI6ICd2YWwnXG4gICAgfSxcbiAgICBub2RlUmVzb2x1dGlvbjoge1xuICAgICAgXCJkZWZhdWx0XCI6IDhcbiAgICB9LFxuICAgIC8vIGhvdyBtYW55IHNsaWNlIHNlZ21lbnRzIGluIHRoZSBzcGhlcmUncyBjaXJjdW1mZXJlbmNlXG4gICAgbm9kZVZpc2liaWxpdHk6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiB0cnVlXG4gICAgfSxcbiAgICBub2RlQ29sb3I6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAnY29sb3InXG4gICAgfSxcbiAgICBub2RlQXV0b0NvbG9yQnk6IHt9LFxuICAgIG5vZGVPcGFjaXR5OiB7XG4gICAgICBcImRlZmF1bHRcIjogMC43NVxuICAgIH0sXG4gICAgbm9kZVRocmVlT2JqZWN0OiB7fSxcbiAgICBub2RlVGhyZWVPYmplY3RFeHRlbmQ6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiBmYWxzZVxuICAgIH0sXG4gICAgbGlua1NvdXJjZToge1xuICAgICAgXCJkZWZhdWx0XCI6ICdzb3VyY2UnXG4gICAgfSxcbiAgICBsaW5rVGFyZ2V0OiB7XG4gICAgICBcImRlZmF1bHRcIjogJ3RhcmdldCdcbiAgICB9LFxuICAgIGxpbmtMYWJlbDoge1xuICAgICAgXCJkZWZhdWx0XCI6ICduYW1lJ1xuICAgIH0sXG4gICAgbGlua0Rlc2M6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAnZGVzYydcbiAgICB9LFxuICAgIG9uTGlua0hvdmVyOiB7fSxcbiAgICBvbkxpbmtDbGljazoge30sXG4gICAgbGlua1Zpc2liaWxpdHk6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiB0cnVlXG4gICAgfSxcbiAgICBsaW5rQ29sb3I6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAnY29sb3InXG4gICAgfSxcbiAgICBsaW5rQXV0b0NvbG9yQnk6IHt9LFxuICAgIGxpbmtPcGFjaXR5OiB7XG4gICAgICBcImRlZmF1bHRcIjogMC4yXG4gICAgfSxcbiAgICBsaW5rV2lkdGg6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAwXG4gICAgfSxcbiAgICBsaW5rUmVzb2x1dGlvbjoge1xuICAgICAgXCJkZWZhdWx0XCI6IDZcbiAgICB9LFxuICAgIC8vIGhvdyBtYW55IHJhZGlhbCBzZWdtZW50cyBpbiBlYWNoIGxpbmUgY3lsaW5kZXIncyBnZW9tZXRyeVxuICAgIGxpbmtDdXJ2YXR1cmU6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAwXG4gICAgfSxcbiAgICBsaW5rQ3VydmVSb3RhdGlvbjoge1xuICAgICAgXCJkZWZhdWx0XCI6IDBcbiAgICB9LFxuICAgIGxpbmtNYXRlcmlhbDoge30sXG4gICAgbGlua1RocmVlT2JqZWN0OiB7fSxcbiAgICBsaW5rVGhyZWVPYmplY3RFeHRlbmQ6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiBmYWxzZVxuICAgIH0sXG4gICAgbGlua1Bvc2l0aW9uVXBkYXRlOiB7fSxcbiAgICBsaW5rRGlyZWN0aW9uYWxBcnJvd0xlbmd0aDoge1xuICAgICAgXCJkZWZhdWx0XCI6IDBcbiAgICB9LFxuICAgIGxpbmtEaXJlY3Rpb25hbEFycm93Q29sb3I6IHt9LFxuICAgIGxpbmtEaXJlY3Rpb25hbEFycm93UmVsUG9zOiB7XG4gICAgICBcImRlZmF1bHRcIjogMC41XG4gICAgfSxcbiAgICAvLyB2YWx1ZSBiZXR3ZWVuIDA8PjEgaW5kaWNhdGluZyB0aGUgcmVsYXRpdmUgcG9zIGFsb25nIHRoZSAoZXhwb3NlZCkgbGluZVxuICAgIGxpbmtEaXJlY3Rpb25hbEFycm93UmVzb2x1dGlvbjoge1xuICAgICAgXCJkZWZhdWx0XCI6IDhcbiAgICB9LFxuICAgIC8vIGhvdyBtYW55IHNsaWNlIHNlZ21lbnRzIGluIHRoZSBhcnJvdydzIGNvbmljIGNpcmN1bWZlcmVuY2VcbiAgICBsaW5rRGlyZWN0aW9uYWxQYXJ0aWNsZXM6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAwXG4gICAgfSxcbiAgICAvLyBhbmltYXRlIHBob3RvbnMgdHJhdmVsbGluZyBpbiB0aGUgbGluayBkaXJlY3Rpb25cbiAgICBsaW5rRGlyZWN0aW9uYWxQYXJ0aWNsZVNwZWVkOiB7XG4gICAgICBcImRlZmF1bHRcIjogMC4wMVxuICAgIH0sXG4gICAgLy8gaW4gbGluayBsZW5ndGggcmF0aW8gcGVyIGZyYW1lXG4gICAgbGlua0RpcmVjdGlvbmFsUGFydGljbGVXaWR0aDoge1xuICAgICAgXCJkZWZhdWx0XCI6IDAuNVxuICAgIH0sXG4gICAgbGlua0RpcmVjdGlvbmFsUGFydGljbGVDb2xvcjoge30sXG4gICAgbGlua0RpcmVjdGlvbmFsUGFydGljbGVSZXNvbHV0aW9uOiB7XG4gICAgICBcImRlZmF1bHRcIjogNFxuICAgIH0sXG4gICAgLy8gaG93IG1hbnkgc2xpY2Ugc2VnbWVudHMgaW4gdGhlIHBhcnRpY2xlIHNwaGVyZSdzIGNpcmN1bWZlcmVuY2VcbiAgICBmb3JjZUVuZ2luZToge1xuICAgICAgXCJkZWZhdWx0XCI6ICdkMydcbiAgICB9LFxuICAgIC8vIGQzIG9yIG5ncmFwaFxuICAgIGQzQWxwaGFNaW46IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAwXG4gICAgfSxcbiAgICBkM0FscGhhRGVjYXk6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAwLjAyMjhcbiAgICB9LFxuICAgIGQzVmVsb2NpdHlEZWNheToge1xuICAgICAgXCJkZWZhdWx0XCI6IDAuNFxuICAgIH0sXG4gICAgbmdyYXBoUGh5c2ljczoge30sXG4gICAgd2FybXVwVGlja3M6IHtcbiAgICAgIFwiZGVmYXVsdFwiOiAwXG4gICAgfSxcbiAgICAvLyBob3cgbWFueSB0aW1lcyB0byB0aWNrIHRoZSBmb3JjZSBlbmdpbmUgYXQgaW5pdCBiZWZvcmUgc3RhcnRpbmcgdG8gcmVuZGVyXG4gICAgY29vbGRvd25UaWNrczoge30sXG4gICAgY29vbGRvd25UaW1lOiB7XG4gICAgICBcImRlZmF1bHRcIjogMTUwMDBcbiAgICB9LFxuICAgIC8vIG1zXG4gICAgb25FbmdpbmVUaWNrOiB7fSxcbiAgICBvbkVuZ2luZVN0b3A6IHt9XG4gIH0sXG4gIG1ldGhvZHM6IF9vYmplY3RTcHJlYWQyKF9vYmplY3RTcHJlYWQyKHt9LCBPYmplY3QuYXNzaWduLmFwcGx5KE9iamVjdCwgW3t9XS5jb25jYXQoX3RvQ29uc3VtYWJsZUFycmF5KFsnZ2V0R3JhcGhCYm94JywgJ2VtaXRQYXJ0aWNsZScsICdkM0ZvcmNlJywgJ2QzUmVoZWF0U2ltdWxhdGlvbicsICdyZWZyZXNoJ10ubWFwKGZ1bmN0aW9uIChtZXRob2QpIHtcbiAgICByZXR1cm4gX2RlZmluZVByb3BlcnR5KHt9LCBtZXRob2QsIGZ1bmN0aW9uIChzdGF0ZSkge1xuICAgICAgdmFyIGFmcmFtZUNvbXAgPSBzdGF0ZS5mb3JjZWdyYXBoLmNvbXBvbmVudHMuZm9yY2VncmFwaDtcbiAgICAgIGZvciAodmFyIF9sZW4gPSBhcmd1bWVudHMubGVuZ3RoLCBhcmdzID0gbmV3IEFycmF5KF9sZW4gPiAxID8gX2xlbiAtIDEgOiAwKSwgX2tleSA9IDE7IF9rZXkgPCBfbGVuOyBfa2V5KyspIHtcbiAgICAgICAgYXJnc1tfa2V5IC0gMV0gPSBhcmd1bWVudHNbX2tleV07XG4gICAgICB9XG4gICAgICB2YXIgcmV0dXJuVmFsID0gYWZyYW1lQ29tcFttZXRob2RdLmFwcGx5KGFmcmFtZUNvbXAsIGFyZ3MpO1xuICAgICAgcmV0dXJuIHJldHVyblZhbCA9PT0gYWZyYW1lQ29tcCA/IHRoaXMgLy8gY2hhaW4gYmFzZWQgb24gdGhpcyBvYmplY3QsIG5vdCB0aGUgaW5uZXIgYWZyYW1lIGNvbXBvbmVudFxuICAgICAgOiByZXR1cm5WYWw7XG4gICAgfSk7XG4gIH0pKSkpKSwge30sIHtcbiAgICBfZGVzdHJ1Y3RvcjogZnVuY3Rpb24gX2Rlc3RydWN0b3IoKSB7XG4gICAgICB0aGlzLmdyYXBoRGF0YSh7XG4gICAgICAgIG5vZGVzOiBbXSxcbiAgICAgICAgbGlua3M6IFtdXG4gICAgICB9KTtcbiAgICB9XG4gIH0pLFxuICBpbml0OiBmdW5jdGlvbiBpbml0KGRvbU5vZGUsIHN0YXRlKSB7XG4gICAgLy8gV2lwZSBET01cbiAgICBkb21Ob2RlLmlubmVySFRNTCA9ICcnO1xuICAgIHN0YXRlLmNvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICAgIGRvbU5vZGUuYXBwZW5kQ2hpbGQoc3RhdGUuY29udGFpbmVyKTtcbiAgICBzdGF0ZS5jb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAncmVsYXRpdmUnO1xuICAgIHN0YXRlLmNvbnRhaW5lci5zdHlsZS53aWR0aCA9IFwiXCIuY29uY2F0KHN0YXRlLndpZHRoLCBcInB4XCIpO1xuICAgIHN0YXRlLmNvbnRhaW5lci5zdHlsZS5oZWlnaHQgPSBcIlwiLmNvbmNhdChzdGF0ZS5oZWlnaHQsIFwicHhcIik7XG5cbiAgICAvLyBBZGQgbmF2IGluZm8gc2VjdGlvblxuICAgIHN0YXRlLmNvbnRhaW5lci5hcHBlbmRDaGlsZChzdGF0ZS5uYXZJbmZvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykpO1xuICAgIHN0YXRlLm5hdkluZm8uY2xhc3NOYW1lID0gJ2dyYXBoLW5hdi1pbmZvJztcbiAgICBzdGF0ZS5uYXZJbmZvLnRleHRDb250ZW50ID0gJ01vdXNlIGRyYWc6IGxvb2ssIGdhbWVwYWQvYXJyb3cvd2FzZCBrZXlzOiBtb3ZlJztcblxuICAgIC8vIENyZWF0ZSBzY2VuZVxuICAgIHZhciBzY2VuZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2Etc2NlbmUnKTtcbiAgICBzY2VuZS5zZXRBdHRyaWJ1dGUoJ2VtYmVkZGVkJywgJycpO1xuICAgIC8vc2NlbmUuc2V0QXR0cmlidXRlKCdzdGF0cycsIG51bGwpO1xuXG4gICAgc2NlbmUuYXBwZW5kQ2hpbGQoc3RhdGUuc2t5ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYS1za3knKSk7XG4gICAgc3RhdGUuc2t5LnNldEF0dHJpYnV0ZSgncmFkaXVzJywgMzAwMCk7XG5cbiAgICAvLyBBZGQgY2FtZXJhXG4gICAgdmFyIGNhbWVyYUc7XG4gICAgc2NlbmUuYXBwZW5kQ2hpbGQoY2FtZXJhRyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2EtZW50aXR5JykpO1xuICAgIGNhbWVyYUcuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsICcwIDAgMzAwJyk7XG4gICAgY2FtZXJhRy5zZXRBdHRyaWJ1dGUoJ21vdmVtZW50LWNvbnRyb2xzJywgJ2NvbnRyb2xzOiBnYW1lcGFkLCB0b3VjaDsgZmx5OiB0cnVlOyBzcGVlZDogNycpO1xuICAgIHZhciBjYW1lcmE7XG4gICAgY2FtZXJhRy5hcHBlbmRDaGlsZChjYW1lcmEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhLWVudGl0eScpKTtcbiAgICBjYW1lcmEuc2V0QXR0cmlidXRlKCdjYW1lcmEnLCAnJyk7XG4gICAgY2FtZXJhLnNldEF0dHJpYnV0ZSgncG9zaXRpb24nLCAnMCAwIDAnKTtcbiAgICBjYW1lcmEuc2V0QXR0cmlidXRlKCdsb29rLWNvbnRyb2xzJywgJ3BvaW50ZXJMb2NrRW5hYmxlZDogZmFsc2UnKTtcbiAgICBjYW1lcmEuc2V0QXR0cmlidXRlKCd3YXNkLWNvbnRyb2xzJywgJ2ZseTogdHJ1ZTsgYWNjZWxlcmF0aW9uOiA3MDAnKTtcblxuICAgIC8vIGRpc3BsYXkgY3Vyc29yIGluIG1pZGRsZSBvZiBzY3JlZW5cbiAgICAvLyBsZXQgY3Vyc29yO1xuICAgIC8vIGNhbWVyYS5hcHBlbmRDaGlsZChjdXJzb3IgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhLWN1cnNvcicpKTtcbiAgICAvLyBjdXJzb3Iuc2V0QXR0cmlidXRlKCdjb2xvcicsICdsYXZlbmRlcicpO1xuICAgIC8vIGN1cnNvci5zZXRBdHRyaWJ1dGUoJ29wYWNpdHknLCAwLjUpO1xuICAgIC8vIGN1cnNvci5zZXRBdHRyaWJ1dGUoJ3JheWNhc3RlcicsICdvYmplY3RzOiAtLS0tbm9uZS0tLS0nKTsgLy8gZGlzYWJsZSBjdXJzb3IgcmF5Y2FzdGVyXG5cbiAgICAvLyBTZXR1cCB0b29sdGlwXG4gICAgdmFyIHRvb2x0aXBFbDtcbiAgICBjYW1lcmEuYXBwZW5kQ2hpbGQodG9vbHRpcEVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYS10ZXh0JykpO1xuICAgIHRvb2x0aXBFbC5zZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgJzAgLTAuMyAtMScpO1xuICAgIHRvb2x0aXBFbC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgMik7XG4gICAgdG9vbHRpcEVsLnNldEF0dHJpYnV0ZSgnYWxpZ24nLCAnY2VudGVyJyk7XG4gICAgdG9vbHRpcEVsLnNldEF0dHJpYnV0ZSgnY29sb3InLCAnbGF2ZW5kZXInKTtcbiAgICB0b29sdGlwRWwuc2V0QXR0cmlidXRlKCd2YWx1ZScsICcnKTtcblxuICAgIC8vIFNldHVwIHN1Yi10b29sdGlwXG4gICAgdmFyIHN1YlRvb2x0aXBFbDtcbiAgICBjYW1lcmEuYXBwZW5kQ2hpbGQoc3ViVG9vbHRpcEVsID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYS10ZXh0JykpO1xuICAgIHN1YlRvb2x0aXBFbC5zZXRBdHRyaWJ1dGUoJ3Bvc2l0aW9uJywgJzAgLTAuNCAtMScpO1xuICAgIHN1YlRvb2x0aXBFbC5zZXRBdHRyaWJ1dGUoJ3dpZHRoJywgMS4zKTtcbiAgICBzdWJUb29sdGlwRWwuc2V0QXR0cmlidXRlKCdhbGlnbicsICdjZW50ZXInKTtcbiAgICBzdWJUb29sdGlwRWwuc2V0QXR0cmlidXRlKCdjb2xvcicsICdsYXZlbmRlcicpO1xuICAgIHN1YlRvb2x0aXBFbC5zZXRBdHRyaWJ1dGUoJ3ZhbHVlJywgJycpO1xuXG4gICAgLy8gU2V0dXAgbW91c2UgY3Vyc29yIGFuZCBsYXNlciByYXljYXN0aW5nIGNvbnRyb2xzXG4gICAgc3RhdGUucmF5Y2FzdGVyRWxzID0gW107XG4gICAgdmFyIG1vdXNlQ3Vyc29yO1xuICAgIHNjZW5lLmFwcGVuZENoaWxkKG1vdXNlQ3Vyc29yID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYS1lbnRpdHknKSk7XG4gICAgbW91c2VDdXJzb3Iuc2V0QXR0cmlidXRlKCdjdXJzb3InLCAncmF5T3JpZ2luOiBtb3VzZTsgbW91c2VDdXJzb3JTdHlsZXNFbmFibGVkOiB0cnVlJyk7XG4gICAgbW91c2VDdXJzb3Iuc2V0QXR0cmlidXRlKCdyYXljYXN0ZXInLCAnb2JqZWN0czogW2ZvcmNlZ3JhcGhdOyBpbnRlcnZhbDogMTAwJyk7XG4gICAgc3RhdGUucmF5Y2FzdGVyRWxzLnB1c2gobW91c2VDdXJzb3IpO1xuICAgIFsnbGVmdCcsICdyaWdodCddLmZvckVhY2goZnVuY3Rpb24gKGhhbmQpIHtcbiAgICAgIHZhciBsYXNlcjtcbiAgICAgIGNhbWVyYUcuYXBwZW5kQ2hpbGQobGFzZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdhLWVudGl0eScpKTtcbiAgICAgIGxhc2VyLnNldEF0dHJpYnV0ZSgnbGFzZXItY29udHJvbHMnLCBcImhhbmQ6IFwiLmNvbmNhdChoYW5kLCBcIjsgbW9kZWw6IGZhbHNlO1wiKSk7IC8vIE9jdWx1cyB0b3VjaCBvZmZzZXRzIGFyZSBzbGlnaHRseSBvZmZcbiAgICAgIGxhc2VyLnNldEF0dHJpYnV0ZSgncmF5Y2FzdGVyJywgJ29iamVjdHM6IFtmb3JjZWdyYXBoXTsgaW50ZXJ2YWw6IDEwMDsgbGluZUNvbG9yOiBzdGVlbGJsdWU7IGxpbmVPcGFjaXR5OiAwLjg1Jyk7XG4gICAgICBzdGF0ZS5yYXljYXN0ZXJFbHMucHVzaChsYXNlcik7XG4gICAgfSk7XG5cbiAgICAvLyBBZGQgZm9yY2VncmFwaCBlbnRpdHlcbiAgICBzY2VuZS5hcHBlbmRDaGlsZChzdGF0ZS5mb3JjZWdyYXBoID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnYS1lbnRpdHknKSk7XG4gICAgc3RhdGUuZm9yY2VncmFwaC5zZXRBdHRyaWJ1dGUoJ2ZvcmNlZ3JhcGgnLCBudWxsKTtcblxuICAgIC8vIGF0dGFjaCBzY2VuZVxuICAgIHN0YXRlLmNvbnRhaW5lci5hcHBlbmRDaGlsZChzY2VuZSk7XG5cbiAgICAvLyB1cGRhdGUgdG9vbHRpcHNcbiAgICBzdGF0ZS5mb3JjZWdyYXBoLnNldEF0dHJpYnV0ZSgnZm9yY2VncmFwaCcsIE9iamVjdC5hc3NpZ24uYXBwbHkoT2JqZWN0LCBfdG9Db25zdW1hYmxlQXJyYXkoWydub2RlJywgJ2xpbmsnXS5tYXAoZnVuY3Rpb24gKHQpIHtcbiAgICAgIHZhciBjY3QgPSB7XG4gICAgICAgIG5vZGU6ICdOb2RlJyxcbiAgICAgICAgbGluazogJ0xpbmsnXG4gICAgICB9W3RdOyAvLyBjYW1lbC1jYXNlIHZlcnNpb25cbiAgICAgIHJldHVybiBfZGVmaW5lUHJvcGVydHkoe30sIFwib25cIi5jb25jYXQoY2N0LCBcIkhvdmVyXCIpLCBmdW5jdGlvbiBvbkhvdmVyKG9iaiwgcHJldk9iaikge1xuICAgICAgICB2YXIgbGFiZWwgPSBvYmogPyBhY2Nlc3NvckZuKHN0YXRlW1wiXCIuY29uY2F0KHQsIFwiTGFiZWxcIildKShvYmopIHx8ICcnIDogJyc7XG4gICAgICAgIHZhciBzdWJMYWJlbCA9IG9iaiA/IGFjY2Vzc29yRm4oc3RhdGVbXCJcIi5jb25jYXQodCwgXCJEZXNjXCIpXSkob2JqKSB8fCAnJyA6ICcnO1xuICAgICAgICB0b29sdGlwRWwuc2V0QXR0cmlidXRlKCd2YWx1ZScsIGxhYmVsKTtcbiAgICAgICAgc3ViVG9vbHRpcEVsLnNldEF0dHJpYnV0ZSgndmFsdWUnLCBzdWJMYWJlbCk7XG4gICAgICAgIHN0YXRlW1wib25cIi5jb25jYXQoY2N0LCBcIkhvdmVyXCIpXSAmJiBzdGF0ZVtcIm9uXCIuY29uY2F0KGNjdCwgXCJIb3ZlclwiKV0ob2JqLCBwcmV2T2JqKTtcbiAgICAgIH0pO1xuICAgIH0pKSkpO1xuICB9LFxuICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShzdGF0ZSwgY2hhbmdlZFByb3BzKSB7XG4gICAgaWYgKGNoYW5nZWRQcm9wcy5oYXNPd25Qcm9wZXJ0eSgnYmFja2dyb3VuZENvbG9yJykpIHtcbiAgICAgIHZhciBhbHBoYSA9IHBhcnNlVG9SZ2Ioc3RhdGUuYmFja2dyb3VuZENvbG9yKS5hbHBoYTtcbiAgICAgIGlmIChhbHBoYSA9PT0gdW5kZWZpbmVkKSBhbHBoYSA9IDE7XG4gICAgICBzdGF0ZS5za3kuc2V0QXR0cmlidXRlKCdjb2xvcicsIG9wYWNpZnkoMSwgc3RhdGUuYmFja2dyb3VuZENvbG9yKSk7XG4gICAgICBzdGF0ZS5za3kuc2V0QXR0cmlidXRlKCdvcGFjaXR5JywgYWxwaGEpO1xuICAgIH1cbiAgICBjaGFuZ2VkUHJvcHMuaGFzT3duUHJvcGVydHkoJ3Nob3dOYXZJbmZvJykgJiYgKHN0YXRlLm5hdkluZm8uc3R5bGUuZGlzcGxheSA9IHN0YXRlLnNob3dOYXZJbmZvID8gbnVsbCA6ICdub25lJyk7XG5cbiAgICAvLyBkZWFjdGl2YXRlIHJheWNhc3RpbmcgYWdhaW5zdCB0aGUgZm9yY2VncmFwaCBpZiBubyBpbnRlcmFjdGlvbiBwcm9wcyBhcmUgc2V0XG4gICAgdmFyIGlzSW50ZXJhY3RpdmUgPSBbJ29uTm9kZUhvdmVyJywgJ29uTGlua0hvdmVyJywgJ29uTm9kZUNsaWNrJywgJ29uTGlua0NsaWNrJ10uc29tZShmdW5jdGlvbiAocCkge1xuICAgICAgcmV0dXJuIHN0YXRlW3BdO1xuICAgIH0pIHx8IFsnbm9kZUxhYmVsJywgJ2xpbmtMYWJlbCddLnNvbWUoZnVuY3Rpb24gKHApIHtcbiAgICAgIHJldHVybiBzdGF0ZVtwXSAhPT0gJ25hbWUnO1xuICAgIH0pIHx8IFsnbm9kZURlc2MnLCAnbGlua0Rlc2MnXS5zb21lKGZ1bmN0aW9uIChwKSB7XG4gICAgICByZXR1cm4gc3RhdGVbcF0gIT09ICdkZXNjJztcbiAgICB9KTtcbiAgICBzdGF0ZS5yYXljYXN0ZXJFbHMuZm9yRWFjaChmdW5jdGlvbiAoZWwpIHtcbiAgICAgIHJldHVybiBlbC5zZXRBdHRyaWJ1dGUoJ3JheWNhc3RlcicsIGlzSW50ZXJhY3RpdmUgPyAnb2JqZWN0czogW2ZvcmNlZ3JhcGhdOyBpbnRlcnZhbDogMTAwJyA6ICdvYmplY3RzOiBfX25vbmVfXycpO1xuICAgIH0pO1xuICAgIHZhciBwYXNzVGhyb3VnaFByb3BzID0gWydqc29uVXJsJywgJ251bURpbWVuc2lvbnMnLCAnZGFnTW9kZScsICdkYWdMZXZlbERpc3RhbmNlJywgJ2RhZ05vZGVGaWx0ZXInLCAnb25EYWdFcnJvcicsICdub2RlUmVsU2l6ZScsICdub2RlSWQnLCAnb25Ob2RlQ2xpY2snLCAnbm9kZVZhbCcsICdub2RlUmVzb2x1dGlvbicsICdub2RlVmlzaWJpbGl0eScsICdub2RlQ29sb3InLCAnbm9kZUF1dG9Db2xvckJ5JywgJ25vZGVPcGFjaXR5JywgJ25vZGVUaHJlZU9iamVjdCcsICdub2RlVGhyZWVPYmplY3RFeHRlbmQnLCAnbGlua1NvdXJjZScsICdsaW5rVGFyZ2V0JywgJ29uTGlua0NsaWNrJywgJ2xpbmtWaXNpYmlsaXR5JywgJ2xpbmtDb2xvcicsICdsaW5rQXV0b0NvbG9yQnknLCAnbGlua09wYWNpdHknLCAnbGlua1dpZHRoJywgJ2xpbmtSZXNvbHV0aW9uJywgJ2xpbmtDdXJ2YXR1cmUnLCAnbGlua0N1cnZlUm90YXRpb24nLCAnbGlua01hdGVyaWFsJywgJ2xpbmtUaHJlZU9iamVjdCcsICdsaW5rVGhyZWVPYmplY3RFeHRlbmQnLCAnbGlua1Bvc2l0aW9uVXBkYXRlJywgJ2xpbmtEaXJlY3Rpb25hbEFycm93TGVuZ3RoJywgJ2xpbmtEaXJlY3Rpb25hbEFycm93Q29sb3InLCAnbGlua0RpcmVjdGlvbmFsQXJyb3dSZWxQb3MnLCAnbGlua0RpcmVjdGlvbmFsQXJyb3dSZXNvbHV0aW9uJywgJ2xpbmtEaXJlY3Rpb25hbFBhcnRpY2xlcycsICdsaW5rRGlyZWN0aW9uYWxQYXJ0aWNsZVNwZWVkJywgJ2xpbmtEaXJlY3Rpb25hbFBhcnRpY2xlV2lkdGgnLCAnbGlua0RpcmVjdGlvbmFsUGFydGljbGVDb2xvcicsICdsaW5rRGlyZWN0aW9uYWxQYXJ0aWNsZVJlc29sdXRpb24nLCAnZm9yY2VFbmdpbmUnLCAnZDNBbHBoYU1pbicsICdkM0FscGhhRGVjYXknLCAnZDNWZWxvY2l0eURlY2F5JywgJ25ncmFwaFBoeXNpY3MnLCAnd2FybXVwVGlja3MnLCAnY29vbGRvd25UaWNrcycsICdjb29sZG93blRpbWUnLCAnb25FbmdpbmVUaWNrJywgJ29uRW5naW5lU3RvcCddO1xuICAgIHZhciBuZXdQcm9wcyA9IE9iamVjdC5hc3NpZ24uYXBwbHkoT2JqZWN0LCBbe31dLmNvbmNhdChfdG9Db25zdW1hYmxlQXJyYXkoT2JqZWN0LmVudHJpZXMoc3RhdGUpLmZpbHRlcihmdW5jdGlvbiAoX3JlZjMpIHtcbiAgICAgIHZhciBfcmVmNCA9IF9zbGljZWRUb0FycmF5KF9yZWYzLCAyKSxcbiAgICAgICAgcHJvcCA9IF9yZWY0WzBdLFxuICAgICAgICB2YWwgPSBfcmVmNFsxXTtcbiAgICAgIHJldHVybiBjaGFuZ2VkUHJvcHMuaGFzT3duUHJvcGVydHkocHJvcCkgJiYgcGFzc1Rocm91Z2hQcm9wcy5pbmRleE9mKHByb3ApICE9PSAtMSAmJiB2YWwgIT09IHVuZGVmaW5lZCAmJiB2YWwgIT09IG51bGw7XG4gICAgfSkubWFwKGZ1bmN0aW9uIChfcmVmNSkge1xuICAgICAgdmFyIF9yZWY2ID0gX3NsaWNlZFRvQXJyYXkoX3JlZjUsIDIpLFxuICAgICAgICBrZXkgPSBfcmVmNlswXSxcbiAgICAgICAgdmFsID0gX3JlZjZbMV07XG4gICAgICByZXR1cm4gX2RlZmluZVByb3BlcnR5KHt9LCBrZXksIHZhbCk7XG4gICAgfSkpLCBfdG9Db25zdW1hYmxlQXJyYXkoT2JqZWN0LmVudHJpZXMoc3RhdGUuZ3JhcGhEYXRhKS5tYXAoZnVuY3Rpb24gKF9yZWY4KSB7XG4gICAgICB2YXIgX3JlZjkgPSBfc2xpY2VkVG9BcnJheShfcmVmOCwgMiksXG4gICAgICAgIGtleSA9IF9yZWY5WzBdLFxuICAgICAgICB2YWwgPSBfcmVmOVsxXTtcbiAgICAgIHJldHVybiBfZGVmaW5lUHJvcGVydHkoe30sIGtleSwgdmFsKTtcbiAgICB9KSkpKTtcbiAgICBzdGF0ZS5mb3JjZWdyYXBoLnNldEF0dHJpYnV0ZSgnZm9yY2VncmFwaCcsIG5ld1Byb3BzKTtcbiAgfVxufSk7XG5cbmV4cG9ydCB7IF8zZEZvcmNlR3JhcGhWciBhcyBkZWZhdWx0IH07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/3d-force-graph-vr@2.2.5_three@0.167.1/node_modules/3d-force-graph-vr/dist/3d-force-graph-vr.mjs\n");

/***/ })

};
;