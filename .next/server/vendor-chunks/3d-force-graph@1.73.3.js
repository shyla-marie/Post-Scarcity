"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/3d-force-graph@1.73.3";
exports.ids = ["vendor-chunks/3d-force-graph@1.73.3"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/3d-force-graph@1.73.3/node_modules/3d-force-graph/dist/3d-force-graph.mjs":
/*!******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/3d-force-graph@1.73.3/node_modules/3d-force-graph/dist/3d-force-graph.mjs ***!
  \******************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ _3dForceGraph)\n/* harmony export */ });\n/* harmony import */ var three__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! three */ \"(ssr)/./node_modules/.pnpm/three@0.167.1/node_modules/three/build/three.module.js\");\n/* harmony import */ var three_examples_jsm_controls_DragControls_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! three/examples/jsm/controls/DragControls.js */ \"(ssr)/./node_modules/.pnpm/three@0.167.1/node_modules/three/examples/jsm/controls/DragControls.js\");\n/* harmony import */ var three_forcegraph__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! three-forcegraph */ \"(ssr)/./node_modules/.pnpm/three-forcegraph@1.41.14_three@0.167.1/node_modules/three-forcegraph/dist/three-forcegraph.mjs\");\n/* harmony import */ var three_render_objects__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! three-render-objects */ \"(ssr)/./node_modules/.pnpm/three-render-objects@1.29.4_three@0.167.1/node_modules/three-render-objects/dist/three-render-objects.mjs\");\n/* harmony import */ var accessor_fn__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! accessor-fn */ \"(ssr)/./node_modules/.pnpm/accessor-fn@1.5.1/node_modules/accessor-fn/dist/accessor-fn.mjs\");\n/* harmony import */ var kapsule__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! kapsule */ \"(ssr)/./node_modules/.pnpm/kapsule@1.14.5/node_modules/kapsule/dist/kapsule.mjs\");\n\n\n\n\n\n\n\nfunction styleInject(css, ref) {\n  if (ref === void 0) ref = {};\n  var insertAt = ref.insertAt;\n  if (!css || typeof document === 'undefined') {\n    return;\n  }\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z = \".graph-info-msg {\\n  top: 50%;\\n  width: 100%;\\n  text-align: center;\\n  color: lavender;\\n  opacity: 0.7;\\n  font-size: 22px;\\n  position: absolute;\\n  font-family: Sans-serif;\\n}\\n\\n.scene-container .clickable {\\n  cursor: pointer;\\n}\\n\\n.scene-container .grabbable {\\n  cursor: move;\\n  cursor: grab;\\n  cursor: -moz-grab;\\n  cursor: -webkit-grab;\\n}\\n\\n.scene-container .grabbable:active {\\n  cursor: grabbing;\\n  cursor: -moz-grabbing;\\n  cursor: -webkit-grabbing;\\n}\";\nstyleInject(css_248z);\n\nfunction ownKeys(e, r) {\n  var t = Object.keys(e);\n  if (Object.getOwnPropertySymbols) {\n    var o = Object.getOwnPropertySymbols(e);\n    r && (o = o.filter(function (r) {\n      return Object.getOwnPropertyDescriptor(e, r).enumerable;\n    })), t.push.apply(t, o);\n  }\n  return t;\n}\nfunction _objectSpread2(e) {\n  for (var r = 1; r < arguments.length; r++) {\n    var t = null != arguments[r] ? arguments[r] : {};\n    r % 2 ? ownKeys(Object(t), !0).forEach(function (r) {\n      _defineProperty(e, r, t[r]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) {\n      Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r));\n    });\n  }\n  return e;\n}\nfunction _toPrimitive(t, r) {\n  if (\"object\" != typeof t || !t) return t;\n  var e = t[Symbol.toPrimitive];\n  if (void 0 !== e) {\n    var i = e.call(t, r || \"default\");\n    if (\"object\" != typeof i) return i;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (\"string\" === r ? String : Number)(t);\n}\nfunction _toPropertyKey(t) {\n  var i = _toPrimitive(t, \"string\");\n  return \"symbol\" == typeof i ? i : i + \"\";\n}\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray(arr) || _nonIterableSpread();\n}\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return _arrayLikeToArray(arr);\n}\nfunction _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction linkKapsule (kapsulePropName, kapsuleType) {\n  var dummyK = new kapsuleType(); // To extract defaults\n  dummyK._destructor && dummyK._destructor();\n  return {\n    linkProp: function linkProp(prop) {\n      // link property config\n      return {\n        \"default\": dummyK[prop](),\n        onChange: function onChange(v, state) {\n          state[kapsulePropName][prop](v);\n        },\n        triggerUpdate: false\n      };\n    },\n    linkMethod: function linkMethod(method) {\n      // link method pass-through\n      return function (state) {\n        var kapsuleInstance = state[kapsulePropName];\n        for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n        var returnVal = kapsuleInstance[method].apply(kapsuleInstance, args);\n        return returnVal === kapsuleInstance ? this // chain based on the parent object, not the inner kapsule\n        : returnVal;\n      };\n    }\n  };\n}\n\nvar three = window.THREE ? window.THREE // Prefer consumption from global THREE, if exists\n: {\n  AmbientLight: three__WEBPACK_IMPORTED_MODULE_1__.AmbientLight,\n  DirectionalLight: three__WEBPACK_IMPORTED_MODULE_1__.DirectionalLight,\n  Vector3: three__WEBPACK_IMPORTED_MODULE_1__.Vector3,\n  REVISION: three__WEBPACK_IMPORTED_MODULE_1__.REVISION\n};\n\n//\n\nvar CAMERA_DISTANCE2NODES_FACTOR = 170;\n\n//\n\n// Expose config from forceGraph\nvar bindFG = linkKapsule('forceGraph', three_forcegraph__WEBPACK_IMPORTED_MODULE_2__[\"default\"]);\nvar linkedFGProps = Object.assign.apply(Object, _toConsumableArray(['jsonUrl', 'graphData', 'numDimensions', 'dagMode', 'dagLevelDistance', 'dagNodeFilter', 'onDagError', 'nodeRelSize', 'nodeId', 'nodeVal', 'nodeResolution', 'nodeColor', 'nodeAutoColorBy', 'nodeOpacity', 'nodeVisibility', 'nodeThreeObject', 'nodeThreeObjectExtend', 'linkSource', 'linkTarget', 'linkVisibility', 'linkColor', 'linkAutoColorBy', 'linkOpacity', 'linkWidth', 'linkResolution', 'linkCurvature', 'linkCurveRotation', 'linkMaterial', 'linkThreeObject', 'linkThreeObjectExtend', 'linkPositionUpdate', 'linkDirectionalArrowLength', 'linkDirectionalArrowColor', 'linkDirectionalArrowRelPos', 'linkDirectionalArrowResolution', 'linkDirectionalParticles', 'linkDirectionalParticleSpeed', 'linkDirectionalParticleWidth', 'linkDirectionalParticleColor', 'linkDirectionalParticleResolution', 'forceEngine', 'd3AlphaDecay', 'd3VelocityDecay', 'd3AlphaMin', 'ngraphPhysics', 'warmupTicks', 'cooldownTicks', 'cooldownTime', 'onEngineTick', 'onEngineStop'].map(function (p) {\n  return _defineProperty({}, p, bindFG.linkProp(p));\n})));\nvar linkedFGMethods = Object.assign.apply(Object, _toConsumableArray(['refresh', 'getGraphBbox', 'd3Force', 'd3ReheatSimulation', 'emitParticle'].map(function (p) {\n  return _defineProperty({}, p, bindFG.linkMethod(p));\n})));\n\n// Expose config from renderObjs\nvar bindRenderObjs = linkKapsule('renderObjs', three_render_objects__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\nvar linkedRenderObjsProps = Object.assign.apply(Object, _toConsumableArray(['width', 'height', 'backgroundColor', 'showNavInfo', 'enablePointerInteraction'].map(function (p) {\n  return _defineProperty({}, p, bindRenderObjs.linkProp(p));\n})));\nvar linkedRenderObjsMethods = Object.assign.apply(Object, _toConsumableArray(['lights', 'cameraPosition', 'postProcessingComposer'].map(function (p) {\n  return _defineProperty({}, p, bindRenderObjs.linkMethod(p));\n})).concat([{\n  graph2ScreenCoords: bindRenderObjs.linkMethod('getScreenCoords'),\n  screen2GraphCoords: bindRenderObjs.linkMethod('getSceneCoords')\n}]));\n\n//\n\nvar _3dForceGraph = (0,kapsule__WEBPACK_IMPORTED_MODULE_4__[\"default\"])({\n  props: _objectSpread2(_objectSpread2({\n    nodeLabel: {\n      \"default\": 'name',\n      triggerUpdate: false\n    },\n    linkLabel: {\n      \"default\": 'name',\n      triggerUpdate: false\n    },\n    linkHoverPrecision: {\n      \"default\": 1,\n      onChange: function onChange(p, state) {\n        return state.renderObjs.lineHoverPrecision(p);\n      },\n      triggerUpdate: false\n    },\n    enableNavigationControls: {\n      \"default\": true,\n      onChange: function onChange(enable, state) {\n        var controls = state.renderObjs.controls();\n        if (controls) {\n          controls.enabled = enable;\n          // trigger mouseup on re-enable to prevent sticky controls\n          enable && controls.domElement && controls.domElement.dispatchEvent(new PointerEvent('pointerup'));\n        }\n      },\n      triggerUpdate: false\n    },\n    enableNodeDrag: {\n      \"default\": true,\n      triggerUpdate: false\n    },\n    onNodeDrag: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onNodeDragEnd: {\n      \"default\": function _default() {},\n      triggerUpdate: false\n    },\n    onNodeClick: {\n      triggerUpdate: false\n    },\n    onNodeRightClick: {\n      triggerUpdate: false\n    },\n    onNodeHover: {\n      triggerUpdate: false\n    },\n    onLinkClick: {\n      triggerUpdate: false\n    },\n    onLinkRightClick: {\n      triggerUpdate: false\n    },\n    onLinkHover: {\n      triggerUpdate: false\n    },\n    onBackgroundClick: {\n      triggerUpdate: false\n    },\n    onBackgroundRightClick: {\n      triggerUpdate: false\n    }\n  }, linkedFGProps), linkedRenderObjsProps),\n  methods: _objectSpread2(_objectSpread2({\n    zoomToFit: function zoomToFit(state, transitionDuration, padding) {\n      var _state$forceGraph;\n      for (var _len = arguments.length, bboxArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n        bboxArgs[_key - 3] = arguments[_key];\n      }\n      state.renderObjs.fitToBbox((_state$forceGraph = state.forceGraph).getGraphBbox.apply(_state$forceGraph, bboxArgs), transitionDuration, padding);\n      return this;\n    },\n    pauseAnimation: function pauseAnimation(state) {\n      if (state.animationFrameRequestId !== null) {\n        cancelAnimationFrame(state.animationFrameRequestId);\n        state.animationFrameRequestId = null;\n      }\n      return this;\n    },\n    resumeAnimation: function resumeAnimation(state) {\n      if (state.animationFrameRequestId === null) {\n        this._animationCycle();\n      }\n      return this;\n    },\n    _animationCycle: function _animationCycle(state) {\n      if (state.enablePointerInteraction) {\n        // reset canvas cursor (override dragControls cursor)\n        this.renderer().domElement.style.cursor = null;\n      }\n\n      // Frame cycle\n      state.forceGraph.tickFrame();\n      state.renderObjs.tick();\n      state.animationFrameRequestId = requestAnimationFrame(this._animationCycle);\n    },\n    scene: function scene(state) {\n      return state.renderObjs.scene();\n    },\n    // Expose scene\n    camera: function camera(state) {\n      return state.renderObjs.camera();\n    },\n    // Expose camera\n    renderer: function renderer(state) {\n      return state.renderObjs.renderer();\n    },\n    // Expose renderer\n    controls: function controls(state) {\n      return state.renderObjs.controls();\n    },\n    // Expose controls\n    tbControls: function tbControls(state) {\n      return state.renderObjs.tbControls();\n    },\n    // To be deprecated\n    _destructor: function _destructor() {\n      this.pauseAnimation();\n      this.graphData({\n        nodes: [],\n        links: []\n      });\n    }\n  }, linkedFGMethods), linkedRenderObjsMethods),\n  stateInit: function stateInit(_ref5) {\n    var controlType = _ref5.controlType,\n      rendererConfig = _ref5.rendererConfig,\n      extraRenderers = _ref5.extraRenderers;\n    var forceGraph = new three_forcegraph__WEBPACK_IMPORTED_MODULE_2__[\"default\"]();\n    return {\n      forceGraph: forceGraph,\n      renderObjs: (0,three_render_objects__WEBPACK_IMPORTED_MODULE_3__[\"default\"])({\n        controlType: controlType,\n        rendererConfig: rendererConfig,\n        extraRenderers: extraRenderers\n      }).objects([forceGraph]) // Populate scene\n      .lights([new three.AmbientLight(0xcccccc, Math.PI), new three.DirectionalLight(0xffffff, 0.6 * Math.PI)])\n    };\n  },\n  init: function init(domNode, state) {\n    // Wipe DOM\n    domNode.innerHTML = '';\n\n    // Add relative container\n    domNode.appendChild(state.container = document.createElement('div'));\n    state.container.style.position = 'relative';\n\n    // Add renderObjs\n    var roDomNode = document.createElement('div');\n    state.container.appendChild(roDomNode);\n    state.renderObjs(roDomNode);\n    var camera = state.renderObjs.camera();\n    var renderer = state.renderObjs.renderer();\n    var controls = state.renderObjs.controls();\n    controls.enabled = !!state.enableNavigationControls;\n    state.lastSetCameraZ = camera.position.z;\n\n    // Add info space\n    var infoElem;\n    state.container.appendChild(infoElem = document.createElement('div'));\n    infoElem.className = 'graph-info-msg';\n    infoElem.textContent = '';\n\n    // config forcegraph\n    state.forceGraph.onLoading(function () {\n      infoElem.textContent = 'Loading...';\n    }).onFinishLoading(function () {\n      infoElem.textContent = '';\n    }).onUpdate(function () {\n      // sync graph data structures\n      state.graphData = state.forceGraph.graphData();\n\n      // re-aim camera, if still in default position (not user modified)\n      if (camera.position.x === 0 && camera.position.y === 0 && camera.position.z === state.lastSetCameraZ && state.graphData.nodes.length) {\n        camera.lookAt(state.forceGraph.position);\n        state.lastSetCameraZ = camera.position.z = Math.cbrt(state.graphData.nodes.length) * CAMERA_DISTANCE2NODES_FACTOR;\n      }\n    }).onFinishUpdate(function () {\n      // Setup node drag interaction\n      if (state._dragControls) {\n        var curNodeDrag = state.graphData.nodes.find(function (node) {\n          return node.__initialFixedPos && !node.__disposeControlsAfterDrag;\n        }); // detect if there's a node being dragged using the existing drag controls\n        if (curNodeDrag) {\n          curNodeDrag.__disposeControlsAfterDrag = true; // postpone previous controls disposal until drag ends\n        } else {\n          state._dragControls.dispose(); // cancel previous drag controls\n        }\n        state._dragControls = undefined;\n      }\n      if (state.enableNodeDrag && state.enablePointerInteraction && state.forceEngine === 'd3') {\n        // Can't access node positions programmatically in ngraph\n        var dragControls = state._dragControls = new three_examples_jsm_controls_DragControls_js__WEBPACK_IMPORTED_MODULE_5__.DragControls(state.graphData.nodes.map(function (node) {\n          return node.__threeObj;\n        }).filter(function (obj) {\n          return obj;\n        }), camera, renderer.domElement);\n        dragControls.addEventListener('dragstart', function (event) {\n          controls.enabled = false; // Disable controls while dragging\n\n          // track drag object movement\n          event.object.__initialPos = event.object.position.clone();\n          event.object.__prevPos = event.object.position.clone();\n          var node = getGraphObj(event.object).__data;\n          !node.__initialFixedPos && (node.__initialFixedPos = {\n            fx: node.fx,\n            fy: node.fy,\n            fz: node.fz\n          });\n          !node.__initialPos && (node.__initialPos = {\n            x: node.x,\n            y: node.y,\n            z: node.z\n          });\n\n          // lock node\n          ['x', 'y', 'z'].forEach(function (c) {\n            return node[\"f\".concat(c)] = node[c];\n          });\n\n          // drag cursor\n          renderer.domElement.classList.add('grabbable');\n        });\n        dragControls.addEventListener('drag', function (event) {\n          var nodeObj = getGraphObj(event.object);\n          if (!event.object.hasOwnProperty('__graphObjType')) {\n            // If dragging a child of the node, update the node object instead\n            var initPos = event.object.__initialPos;\n            var prevPos = event.object.__prevPos;\n            var _newPos = event.object.position;\n            nodeObj.position.add(_newPos.clone().sub(prevPos)); // translate node object by the motion delta\n            prevPos.copy(_newPos);\n            _newPos.copy(initPos); // reset child back to its initial position\n          }\n          var node = nodeObj.__data;\n          var newPos = nodeObj.position;\n          var translate = {\n            x: newPos.x - node.x,\n            y: newPos.y - node.y,\n            z: newPos.z - node.z\n          };\n          // Move fx/fy/fz (and x/y/z) of nodes based on object new position\n          ['x', 'y', 'z'].forEach(function (c) {\n            return node[\"f\".concat(c)] = node[c] = newPos[c];\n          });\n          state.forceGraph.d3AlphaTarget(0.3) // keep engine running at low intensity throughout drag\n          .resetCountdown(); // prevent freeze while dragging\n\n          node.__dragged = true;\n          state.onNodeDrag(node, translate);\n        });\n        dragControls.addEventListener('dragend', function (event) {\n          delete event.object.__initialPos; // remove tracking attributes\n          delete event.object.__prevPos;\n          var node = getGraphObj(event.object).__data;\n\n          // dispose previous controls if needed\n          if (node.__disposeControlsAfterDrag) {\n            dragControls.dispose();\n            delete node.__disposeControlsAfterDrag;\n          }\n          var initFixedPos = node.__initialFixedPos;\n          var initPos = node.__initialPos;\n          var translate = {\n            x: initPos.x - node.x,\n            y: initPos.y - node.y,\n            z: initPos.z - node.z\n          };\n          if (initFixedPos) {\n            ['x', 'y', 'z'].forEach(function (c) {\n              var fc = \"f\".concat(c);\n              if (initFixedPos[fc] === undefined) {\n                delete node[fc];\n              }\n            });\n            delete node.__initialFixedPos;\n            delete node.__initialPos;\n            if (node.__dragged) {\n              delete node.__dragged;\n              state.onNodeDragEnd(node, translate);\n            }\n          }\n          state.forceGraph.d3AlphaTarget(0) // release engine low intensity\n          .resetCountdown(); // let the engine readjust after releasing fixed nodes\n\n          if (state.enableNavigationControls) {\n            controls.enabled = true; // Re-enable controls\n            controls.domElement && controls.domElement.ownerDocument && controls.domElement.ownerDocument.dispatchEvent(\n            // simulate mouseup to ensure the controls don't take over after dragend\n            new PointerEvent('pointerup', {\n              pointerType: 'touch'\n            }));\n          }\n\n          // clear cursor\n          renderer.domElement.classList.remove('grabbable');\n        });\n      }\n    });\n\n    // config renderObjs\n    three.REVISION < 155 && (state.renderObjs.renderer().useLegacyLights = false); // force behavior for three < 155\n    state.renderObjs.hoverOrderComparator(function (a, b) {\n      // Prioritize graph objects\n      var aObj = getGraphObj(a);\n      if (!aObj) return 1;\n      var bObj = getGraphObj(b);\n      if (!bObj) return -1;\n\n      // Prioritize nodes over links\n      var isNode = function isNode(o) {\n        return o.__graphObjType === 'node';\n      };\n      return isNode(bObj) - isNode(aObj);\n    }).tooltipContent(function (obj) {\n      var graphObj = getGraphObj(obj);\n      return graphObj ? (0,accessor_fn__WEBPACK_IMPORTED_MODULE_0__[\"default\"])(state[\"\".concat(graphObj.__graphObjType, \"Label\")])(graphObj.__data) || '' : '';\n    }).hoverDuringDrag(false).onHover(function (obj) {\n      // Update tooltip and trigger onHover events\n      var hoverObj = getGraphObj(obj);\n      if (hoverObj !== state.hoverObj) {\n        var prevObjType = state.hoverObj ? state.hoverObj.__graphObjType : null;\n        var prevObjData = state.hoverObj ? state.hoverObj.__data : null;\n        var objType = hoverObj ? hoverObj.__graphObjType : null;\n        var objData = hoverObj ? hoverObj.__data : null;\n        if (prevObjType && prevObjType !== objType) {\n          // Hover out\n          var fn = state[\"on\".concat(prevObjType === 'node' ? 'Node' : 'Link', \"Hover\")];\n          fn && fn(null, prevObjData);\n        }\n        if (objType) {\n          // Hover in\n          var _fn = state[\"on\".concat(objType === 'node' ? 'Node' : 'Link', \"Hover\")];\n          _fn && _fn(objData, prevObjType === objType ? prevObjData : null);\n        }\n\n        // set pointer if hovered object is clickable\n        renderer.domElement.classList[hoverObj && state[\"on\".concat(objType === 'node' ? 'Node' : 'Link', \"Click\")] || !hoverObj && state.onBackgroundClick ? 'add' : 'remove']('clickable');\n        state.hoverObj = hoverObj;\n      }\n    }).clickAfterDrag(false).onClick(function (obj, ev) {\n      var graphObj = getGraphObj(obj);\n      if (graphObj) {\n        var fn = state[\"on\".concat(graphObj.__graphObjType === 'node' ? 'Node' : 'Link', \"Click\")];\n        fn && fn(graphObj.__data, ev);\n      } else {\n        state.onBackgroundClick && state.onBackgroundClick(ev);\n      }\n    }).onRightClick(function (obj, ev) {\n      // Handle right-click events\n      var graphObj = getGraphObj(obj);\n      if (graphObj) {\n        var fn = state[\"on\".concat(graphObj.__graphObjType === 'node' ? 'Node' : 'Link', \"RightClick\")];\n        fn && fn(graphObj.__data, ev);\n      } else {\n        state.onBackgroundRightClick && state.onBackgroundRightClick(ev);\n      }\n    });\n\n    //\n\n    // Kick-off renderer\n    this._animationCycle();\n  }\n});\n\n//\n\nfunction getGraphObj(object) {\n  var obj = object;\n  // recurse up object chain until finding the graph object\n  while (obj && !obj.hasOwnProperty('__graphObjType')) {\n    obj = obj.parent;\n  }\n  return obj;\n}\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/3d-force-graph@1.73.3/node_modules/3d-force-graph/dist/3d-force-graph.mjs\n");

/***/ })

};
;