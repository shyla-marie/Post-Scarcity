/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/aframe-extras@7.5.1";
exports.ids = ["vendor-chunks/aframe-extras@7.5.1"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/index.js":
/*!************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/index.js ***!
  \************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./src/controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/index.js\");\n__webpack_require__(/*! ./src/loaders */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/index.js\");\n__webpack_require__(/*! ./src/misc */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/index.js\");\n__webpack_require__(/*! ./src/pathfinding */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/index.js\");\n__webpack_require__(/*! ./src/primitives */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/index.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBTyxDQUFDLHVIQUFnQjtBQUN4QixtQkFBTyxDQUFDLHFIQUFlO0FBQ3ZCLG1CQUFPLENBQUMsK0dBQVk7QUFDcEIsbUJBQU8sQ0FBQyw2SEFBbUI7QUFDM0IsbUJBQU8sQ0FBQywySEFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL2luZGV4LmpzPzBlZmMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9zcmMvY29udHJvbHMnKTtcbnJlcXVpcmUoJy4vc3JjL2xvYWRlcnMnKTtcbnJlcXVpcmUoJy4vc3JjL21pc2MnKTtcbnJlcXVpcmUoJy4vc3JjL3BhdGhmaW5kaW5nJyk7XG5yZXF1aXJlKCcuL3NyYy9wcmltaXRpdmVzJyk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/ColladaLoader.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/ColladaLoader.js ***!
  \************************************************************************************************/
/***/ ((module) => {

eval("/**\n * @author mrdoob / http://mrdoob.com/\n * @author Mugen87 / https://github.com/Mugen87\n */\n\nmodule.exports = THREE.ColladaLoader = function ( manager ) {\n\n  this.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\n\n};\n\nTHREE.ColladaLoader.prototype = {\n\n  constructor: THREE.ColladaLoader,\n\n  crossOrigin: 'anonymous',\n\n  load: function ( url, onLoad, onProgress, onError ) {\n\n    var scope = this;\n\n    var path = ( scope.path === undefined ) ? THREE.LoaderUtils.extractUrlBase( url ) : scope.path;\n\n    var loader = new THREE.FileLoader( scope.manager );\n    loader.setPath( scope.path );\n    loader.load( url, function ( text ) {\n\n      onLoad( scope.parse( text, path ) );\n\n    }, onProgress, onError );\n\n  },\n\n  setPath: function ( value ) {\n\n    this.path = value;\n    return this;\n\n  },\n\n  setResourcePath: function ( value ) {\n\n    this.resourcePath = value;\n    return this;\n\n  },\n\n  options: {\n\n    set convertUpAxis( value ) {\n\n      console.warn( 'THREE.ColladaLoader: options.convertUpAxis() has been removed. Up axis is converted automatically.' );\n\n    }\n\n  },\n\n  setCrossOrigin: function ( value ) {\n\n    this.crossOrigin = value;\n    return this;\n\n  },\n\n  parse: function ( text, path ) {\n\n    function getElementsByTagName( xml, name ) {\n\n      // Non recursive xml.getElementsByTagName() ...\n\n      var array = [];\n      var childNodes = xml.childNodes;\n\n      for ( var i = 0, l = childNodes.length; i < l; i ++ ) {\n\n        var child = childNodes[ i ];\n\n        if ( child.nodeName === name ) {\n\n          array.push( child );\n\n        }\n\n      }\n\n      return array;\n\n    }\n\n    function parseStrings( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parts[ i ];\n\n      }\n\n      return array;\n\n    }\n\n    function parseFloats( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parseFloat( parts[ i ] );\n\n      }\n\n      return array;\n\n    }\n\n    function parseInts( text ) {\n\n      if ( text.length === 0 ) return [];\n\n      var parts = text.trim().split( /\\s+/ );\n      var array = new Array( parts.length );\n\n      for ( var i = 0, l = parts.length; i < l; i ++ ) {\n\n        array[ i ] = parseInt( parts[ i ] );\n\n      }\n\n      return array;\n\n    }\n\n    function parseId( text ) {\n\n      return text.substring( 1 );\n\n    }\n\n    function generateId() {\n\n      return 'three_default_' + ( count ++ );\n\n    }\n\n    function isEmpty( object ) {\n\n      return Object.keys( object ).length === 0;\n\n    }\n\n    // asset\n\n    function parseAsset( xml ) {\n\n      return {\n        unit: parseAssetUnit( getElementsByTagName( xml, 'unit' )[ 0 ] ),\n        upAxis: parseAssetUpAxis( getElementsByTagName( xml, 'up_axis' )[ 0 ] )\n      };\n\n    }\n\n    function parseAssetUnit( xml ) {\n\n      if ( ( xml !== undefined ) && ( xml.hasAttribute( 'meter' ) === true ) ) {\n\n        return parseFloat( xml.getAttribute( 'meter' ) );\n\n      } else {\n\n        return 1; // default 1 meter\n\n      }\n\n    }\n\n    function parseAssetUpAxis( xml ) {\n\n      return xml !== undefined ? xml.textContent : 'Y_UP';\n\n    }\n\n    // library\n\n    function parseLibrary( xml, libraryName, nodeName, parser ) {\n\n      var library = getElementsByTagName( xml, libraryName )[ 0 ];\n\n      if ( library !== undefined ) {\n\n        var elements = getElementsByTagName( library, nodeName );\n\n        for ( var i = 0; i < elements.length; i ++ ) {\n\n          parser( elements[ i ] );\n\n        }\n\n      }\n\n    }\n\n    function buildLibrary( data, builder ) {\n\n      for ( var name in data ) {\n\n        var object = data[ name ];\n        object.build = builder( data[ name ] );\n\n      }\n\n    }\n\n    // get\n\n    function getBuild( data, builder ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      data.build = builder( data );\n\n      return data.build;\n\n    }\n\n    // animation\n\n    function parseAnimation( xml ) {\n\n      var data = {\n        sources: {},\n        samplers: {},\n        channels: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        var id;\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            id = child.getAttribute( 'id' );\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'sampler':\n            id = child.getAttribute( 'id' );\n            data.samplers[ id ] = parseAnimationSampler( child );\n            break;\n\n          case 'channel':\n            id = child.getAttribute( 'target' );\n            data.channels[ id ] = parseAnimationChannel( child );\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      library.animations[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseAnimationSampler( xml ) {\n\n      var data = {\n        inputs: {},\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var id = parseId( child.getAttribute( 'source' ) );\n            var semantic = child.getAttribute( 'semantic' );\n            data.inputs[ semantic ] = id;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseAnimationChannel( xml ) {\n\n      var data = {};\n\n      var target = xml.getAttribute( 'target' );\n\n      // parsing SID Addressing Syntax\n\n      var parts = target.split( '/' );\n\n      var id = parts.shift();\n      var sid = parts.shift();\n\n      // check selection syntax\n\n      var arraySyntax = ( sid.indexOf( '(' ) !== - 1 );\n      var memberSyntax = ( sid.indexOf( '.' ) !== - 1 );\n\n      if ( memberSyntax ) {\n\n        //  member selection access\n\n        parts = sid.split( '.' );\n        sid = parts.shift();\n        data.member = parts.shift();\n\n      } else if ( arraySyntax ) {\n\n        // array-access syntax. can be used to express fields in one-dimensional vectors or two-dimensional matrices.\n\n        var indices = sid.split( '(' );\n        sid = indices.shift();\n\n        for ( var i = 0; i < indices.length; i ++ ) {\n\n          indices[ i ] = parseInt( indices[ i ].replace( /\\)/, '' ) );\n\n        }\n\n        data.indices = indices;\n\n      }\n\n      data.id = id;\n      data.sid = sid;\n\n      data.arraySyntax = arraySyntax;\n      data.memberSyntax = memberSyntax;\n\n      data.sampler = parseId( xml.getAttribute( 'source' ) );\n\n      return data;\n\n    }\n\n    function buildAnimation( data ) {\n\n      var tracks = [];\n\n      var channels = data.channels;\n      var samplers = data.samplers;\n      var sources = data.sources;\n\n      for ( var target in channels ) {\n\n        if ( channels.hasOwnProperty( target ) ) {\n\n          var channel = channels[ target ];\n          var sampler = samplers[ channel.sampler ];\n\n          var inputId = sampler.inputs.INPUT;\n          var outputId = sampler.inputs.OUTPUT;\n\n          var inputSource = sources[ inputId ];\n          var outputSource = sources[ outputId ];\n\n          var animation = buildAnimationChannel( channel, inputSource, outputSource );\n\n          createKeyframeTracks( animation, tracks );\n\n        }\n\n      }\n\n      return tracks;\n\n    }\n\n    function getAnimation( id ) {\n\n      return getBuild( library.animations[ id ], buildAnimation );\n\n    }\n\n    function buildAnimationChannel( channel, inputSource, outputSource ) {\n\n      var node = library.nodes[ channel.id ];\n      var object3D = getNode( node.id );\n\n      var transform = node.transforms[ channel.sid ];\n      var defaultMatrix = node.matrix.clone().transpose();\n\n      var time, stride;\n      var i, il, j, jl;\n\n      var data = {};\n\n      // the collada spec allows the animation of data in various ways.\n      // depending on the transform type (matrix, translate, rotate, scale), we execute different logic\n\n      switch ( transform ) {\n\n        case 'matrix':\n\n          for ( i = 0, il = inputSource.array.length; i < il; i ++ ) {\n\n            time = inputSource.array[ i ];\n            stride = i * outputSource.stride;\n\n            if ( data[ time ] === undefined ) data[ time ] = {};\n\n            if ( channel.arraySyntax === true ) {\n\n              var value = outputSource.array[ stride ];\n              var index = channel.indices[ 0 ] + 4 * channel.indices[ 1 ];\n\n              data[ time ][ index ] = value;\n\n            } else {\n\n              for ( j = 0, jl = outputSource.stride; j < jl; j ++ ) {\n\n                data[ time ][ j ] = outputSource.array[ stride + j ];\n\n              }\n\n            }\n\n          }\n\n          break;\n\n        case 'translate':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n        case 'rotate':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n        case 'scale':\n          console.warn( 'THREE.ColladaLoader: Animation transform type \"%s\" not yet implemented.', transform );\n          break;\n\n      }\n\n      var keyframes = prepareAnimationData( data, defaultMatrix );\n\n      var animation = {\n        name: object3D.uuid,\n        keyframes: keyframes\n      };\n\n      return animation;\n\n    }\n\n    function prepareAnimationData( data, defaultMatrix ) {\n\n      var keyframes = [];\n\n      // transfer data into a sortable array\n\n      for ( var time in data ) {\n\n        keyframes.push( { time: parseFloat( time ), value: data[ time ] } );\n\n      }\n\n      // ensure keyframes are sorted by time\n\n      keyframes.sort( ascending );\n\n      // now we clean up all animation data, so we can use them for keyframe tracks\n\n      for ( var i = 0; i < 16; i ++ ) {\n\n        transformAnimationData( keyframes, i, defaultMatrix.elements[ i ] );\n\n      }\n\n      return keyframes;\n\n      // array sort function\n\n      function ascending( a, b ) {\n\n        return a.time - b.time;\n\n      }\n\n    }\n\n    var position = new THREE.Vector3();\n    var scale = new THREE.Vector3();\n    var quaternion = new THREE.Quaternion();\n\n    function createKeyframeTracks( animation, tracks ) {\n\n      var keyframes = animation.keyframes;\n      var name = animation.name;\n\n      var times = [];\n      var positionData = [];\n      var quaternionData = [];\n      var scaleData = [];\n\n      for ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        var keyframe = keyframes[ i ];\n\n        var time = keyframe.time;\n        var value = keyframe.value;\n\n        matrix.fromArray( value ).transpose();\n        matrix.decompose( position, quaternion, scale );\n\n        times.push( time );\n        positionData.push( position.x, position.y, position.z );\n        quaternionData.push( quaternion.x, quaternion.y, quaternion.z, quaternion.w );\n        scaleData.push( scale.x, scale.y, scale.z );\n\n      }\n\n      if ( positionData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.position', times, positionData ) );\n      if ( quaternionData.length > 0 ) tracks.push( new THREE.QuaternionKeyframeTrack( name + '.quaternion', times, quaternionData ) );\n      if ( scaleData.length > 0 ) tracks.push( new THREE.VectorKeyframeTrack( name + '.scale', times, scaleData ) );\n\n      return tracks;\n\n    }\n\n    function transformAnimationData( keyframes, property, defaultValue ) {\n\n      var keyframe;\n\n      var empty = true;\n      var i, l;\n\n      // check, if values of a property are missing in our keyframes\n\n      for ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] === undefined ) {\n\n          keyframe.value[ property ] = null; // mark as missing\n\n        } else {\n\n          empty = false;\n\n        }\n\n      }\n\n      if ( empty === true ) {\n\n        // no values at all, so we set a default value\n\n        for ( i = 0, l = keyframes.length; i < l; i ++ ) {\n\n          keyframe = keyframes[ i ];\n\n          keyframe.value[ property ] = defaultValue;\n\n        }\n\n      } else {\n\n        // filling gaps\n\n        createMissingKeyframes( keyframes, property );\n\n      }\n\n    }\n\n    function createMissingKeyframes( keyframes, property ) {\n\n      var prev, next;\n\n      for ( var i = 0, l = keyframes.length; i < l; i ++ ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] === null ) {\n\n          prev = getPrev( keyframes, i, property );\n          next = getNext( keyframes, i, property );\n\n          if ( prev === null ) {\n\n            keyframe.value[ property ] = next.value[ property ];\n            continue;\n\n          }\n\n          if ( next === null ) {\n\n            keyframe.value[ property ] = prev.value[ property ];\n            continue;\n\n          }\n\n          interpolate( keyframe, prev, next, property );\n\n        }\n\n      }\n\n    }\n\n    function getPrev( keyframes, i, property ) {\n\n      while ( i >= 0 ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] !== null ) return keyframe;\n\n        i --;\n\n      }\n\n      return null;\n\n    }\n\n    function getNext( keyframes, i, property ) {\n\n      while ( i < keyframes.length ) {\n\n        var keyframe = keyframes[ i ];\n\n        if ( keyframe.value[ property ] !== null ) return keyframe;\n\n        i ++;\n\n      }\n\n      return null;\n\n    }\n\n    function interpolate( key, prev, next, property ) {\n\n      if ( ( next.time - prev.time ) === 0 ) {\n\n        key.value[ property ] = prev.value[ property ];\n        return;\n\n      }\n\n      key.value[ property ] = ( ( key.time - prev.time ) * ( next.value[ property ] - prev.value[ property ] ) / ( next.time - prev.time ) ) + prev.value[ property ];\n\n    }\n\n    // animation clips\n\n    function parseAnimationClip( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'id' ) || 'default',\n        start: parseFloat( xml.getAttribute( 'start' ) || 0 ),\n        end: parseFloat( xml.getAttribute( 'end' ) || 0 ),\n        animations: []\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'instance_animation':\n            data.animations.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n        }\n\n      }\n\n      library.clips[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildAnimationClip( data ) {\n\n      var tracks = [];\n\n      var name = data.name;\n      var duration = ( data.end - data.start ) || - 1;\n      var animations = data.animations;\n\n      for ( var i = 0, il = animations.length; i < il; i ++ ) {\n\n        var animationTracks = getAnimation( animations[ i ] );\n\n        for ( var j = 0, jl = animationTracks.length; j < jl; j ++ ) {\n\n          tracks.push( animationTracks[ j ] );\n\n        }\n\n      }\n\n      return new THREE.AnimationClip( name, duration, tracks );\n\n    }\n\n    function getAnimationClip( id ) {\n\n      return getBuild( library.clips[ id ], buildAnimationClip );\n\n    }\n\n    // controller\n\n    function parseController( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'skin':\n            // there is exactly one skin per controller\n            data.id = parseId( child.getAttribute( 'source' ) );\n            data.skin = parseSkin( child );\n            break;\n\n          case 'morph':\n            data.id = parseId( child.getAttribute( 'source' ) );\n            console.warn( 'THREE.ColladaLoader: Morph target animation not supported yet.' );\n            break;\n\n        }\n\n      }\n\n      library.controllers[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseSkin( xml ) {\n\n      var data = {\n        sources: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'bind_shape_matrix':\n            data.bindShapeMatrix = parseFloats( child.textContent );\n            break;\n\n          case 'source':\n            var id = child.getAttribute( 'id' );\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'joints':\n            data.joints = parseJoints( child );\n            break;\n\n          case 'vertex_weights':\n            data.vertexWeights = parseVertexWeights( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseJoints( xml ) {\n\n      var data = {\n        inputs: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var semantic = child.getAttribute( 'semantic' );\n            var id = parseId( child.getAttribute( 'source' ) );\n            data.inputs[ semantic ] = id;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseVertexWeights( xml ) {\n\n      var data = {\n        inputs: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var semantic = child.getAttribute( 'semantic' );\n            var id = parseId( child.getAttribute( 'source' ) );\n            var offset = parseInt( child.getAttribute( 'offset' ) );\n            data.inputs[ semantic ] = { id: id, offset: offset };\n            break;\n\n          case 'vcount':\n            data.vcount = parseInts( child.textContent );\n            break;\n\n          case 'v':\n            data.v = parseInts( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildController( data ) {\n\n      var build = {\n        id: data.id\n      };\n\n      var geometry = library.geometries[ build.id ];\n\n      if ( data.skin !== undefined ) {\n\n        build.skin = buildSkin( data.skin );\n\n        // we enhance the 'sources' property of the corresponding geometry with our skin data\n\n        geometry.sources.skinIndices = build.skin.indices;\n        geometry.sources.skinWeights = build.skin.weights;\n\n      }\n\n      return build;\n\n    }\n\n    function buildSkin( data ) {\n\n      var BONE_LIMIT = 4;\n\n      var build = {\n        joints: [], // this must be an array to preserve the joint order\n        indices: {\n          array: [],\n          stride: BONE_LIMIT\n        },\n        weights: {\n          array: [],\n          stride: BONE_LIMIT\n        }\n      };\n\n      var sources = data.sources;\n      var vertexWeights = data.vertexWeights;\n\n      var vcount = vertexWeights.vcount;\n      var v = vertexWeights.v;\n      var jointOffset = vertexWeights.inputs.JOINT.offset;\n      var weightOffset = vertexWeights.inputs.WEIGHT.offset;\n\n      var jointSource = data.sources[ data.joints.inputs.JOINT ];\n      var inverseSource = data.sources[ data.joints.inputs.INV_BIND_MATRIX ];\n\n      var weights = sources[ vertexWeights.inputs.WEIGHT.id ].array;\n      var stride = 0;\n\n      var i, j, l;\n\n      // procces skin data for each vertex\n\n      for ( i = 0, l = vcount.length; i < l; i ++ ) {\n\n        var jointCount = vcount[ i ]; // this is the amount of joints that affect a single vertex\n        var vertexSkinData = [];\n\n        for ( j = 0; j < jointCount; j ++ ) {\n\n          var skinIndex = v[ stride + jointOffset ];\n          var weightId = v[ stride + weightOffset ];\n          var skinWeight = weights[ weightId ];\n\n          vertexSkinData.push( { index: skinIndex, weight: skinWeight } );\n\n          stride += 2;\n\n        }\n\n        // we sort the joints in descending order based on the weights.\n        // this ensures, we only procced the most important joints of the vertex\n\n        vertexSkinData.sort( descending );\n\n        // now we provide for each vertex a set of four index and weight values.\n        // the order of the skin data matches the order of vertices\n\n        for ( j = 0; j < BONE_LIMIT; j ++ ) {\n\n          var d = vertexSkinData[ j ];\n\n          if ( d !== undefined ) {\n\n            build.indices.array.push( d.index );\n            build.weights.array.push( d.weight );\n\n          } else {\n\n            build.indices.array.push( 0 );\n            build.weights.array.push( 0 );\n\n          }\n\n        }\n\n      }\n\n      // setup bind matrix\n\n      if ( data.bindShapeMatrix ) {\n\n        build.bindMatrix = new THREE.Matrix4().fromArray( data.bindShapeMatrix ).transpose();\n\n      } else {\n\n        build.bindMatrix = new THREE.Matrix4().identity();\n\n      }\n\n      // process bones and inverse bind matrix data\n\n      for ( i = 0, l = jointSource.array.length; i < l; i ++ ) {\n\n        var name = jointSource.array[ i ];\n        var boneInverse = new THREE.Matrix4().fromArray( inverseSource.array, i * inverseSource.stride ).transpose();\n\n        build.joints.push( { name: name, boneInverse: boneInverse } );\n\n      }\n\n      return build;\n\n      // array sort function\n\n      function descending( a, b ) {\n\n        return b.weight - a.weight;\n\n      }\n\n    }\n\n    function getController( id ) {\n\n      return getBuild( library.controllers[ id ], buildController );\n\n    }\n\n    // image\n\n    function parseImage( xml ) {\n\n      var data = {\n        init_from: getElementsByTagName( xml, 'init_from' )[ 0 ].textContent\n      };\n\n      library.images[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildImage( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data.init_from;\n\n    }\n\n    function getImage( id ) {\n\n      var data = library.images[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildImage );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find image with ID:', id );\n\n      return null;\n\n    }\n\n    // effect\n\n    function parseEffect( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'profile_COMMON':\n            data.profile = parseEffectProfileCOMMON( child );\n            break;\n\n        }\n\n      }\n\n      library.effects[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseEffectProfileCOMMON( xml ) {\n\n      var data = {\n        surfaces: {},\n        samplers: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'newparam':\n            parseEffectNewparam( child, data );\n            break;\n\n          case 'technique':\n            data.technique = parseEffectTechnique( child );\n            break;\n\n          case 'extra':\n            data.extra = parseEffectExtra( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectNewparam( xml, data ) {\n\n      var sid = xml.getAttribute( 'sid' );\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'surface':\n            data.surfaces[ sid ] = parseEffectSurface( child );\n            break;\n\n          case 'sampler2D':\n            data.samplers[ sid ] = parseEffectSampler( child );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectSurface( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'init_from':\n            data.init_from = child.textContent;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectSampler( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            data.source = child.textContent;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'constant':\n          case 'lambert':\n          case 'blinn':\n          case 'phong':\n            data.type = child.nodeName;\n            data.parameters = parseEffectParameters( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'emission':\n          case 'diffuse':\n          case 'specular':\n          case 'bump':\n          case 'ambient':\n          case 'shininess':\n          case 'transparency':\n            data[ child.nodeName ] = parseEffectParameter( child );\n            break;\n          case 'transparent':\n            data[ child.nodeName ] = {\n              opaque: child.getAttribute( 'opaque' ),\n              data: parseEffectParameter( child )\n            };\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameter( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'color':\n            data[ child.nodeName ] = parseFloats( child.textContent );\n            break;\n\n          case 'float':\n            data[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n          case 'texture':\n            data[ child.nodeName ] = { id: child.getAttribute( 'texture' ), extra: parseEffectParameterTexture( child ) };\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameterTexture( xml ) {\n\n      var data = {\n        technique: {}\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'extra':\n            parseEffectParameterTextureExtra( child, data );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectParameterTextureExtra( xml, data ) {\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique':\n            parseEffectParameterTextureExtraTechnique( child, data );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectParameterTextureExtraTechnique( xml, data ) {\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'repeatU':\n          case 'repeatV':\n          case 'offsetU':\n          case 'offsetV':\n            data.technique[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n          case 'wrapU':\n          case 'wrapV':\n\n            // some files have values for wrapU/wrapV which become NaN via parseInt\n\n            if ( child.textContent.toUpperCase() === 'TRUE' ) {\n\n              data.technique[ child.nodeName ] = 1;\n\n            } else if ( child.textContent.toUpperCase() === 'FALSE' ) {\n\n              data.technique[ child.nodeName ] = 0;\n\n            } else {\n\n              data.technique[ child.nodeName ] = parseInt( child.textContent );\n\n            }\n\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseEffectExtra( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique':\n            data.technique = parseEffectExtraTechnique( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseEffectExtraTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'double_sided':\n            data[ child.nodeName ] = parseInt( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildEffect( data ) {\n\n      return data;\n\n    }\n\n    function getEffect( id ) {\n\n      return getBuild( library.effects[ id ], buildEffect );\n\n    }\n\n    // material\n\n    function parseMaterial( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' )\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'instance_effect':\n            data.url = parseId( child.getAttribute( 'url' ) );\n            break;\n\n        }\n\n      }\n\n      library.materials[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function getTextureLoader( image ) {\n\n      var loader;\n\n      var extension = image.slice( ( image.lastIndexOf( '.' ) - 1 >>> 0 ) + 2 ); // http://www.jstips.co/en/javascript/get-file-extension/\n      extension = extension.toLowerCase();\n\n      switch ( extension ) {\n\n        case 'tga':\n          loader = tgaLoader;\n          break;\n\n        default:\n          loader = textureLoader;\n\n      }\n\n      return loader;\n\n    }\n\n    function buildMaterial( data ) {\n\n      var effect = getEffect( data.url );\n      var technique = effect.profile.technique;\n      var extra = effect.profile.extra;\n\n      var material;\n\n      switch ( technique.type ) {\n\n        case 'phong':\n        case 'blinn':\n          material = new THREE.MeshPhongMaterial();\n          break;\n\n        case 'lambert':\n          material = new THREE.MeshLambertMaterial();\n          break;\n\n        default:\n          material = new THREE.MeshBasicMaterial();\n          break;\n\n      }\n\n      material.name = data.name;\n\n      function getTexture( textureObject ) {\n\n        var sampler = effect.profile.samplers[ textureObject.id ];\n        var image = null;\n\n        // get image\n\n        if ( sampler !== undefined ) {\n\n          var surface = effect.profile.surfaces[ sampler.source ];\n          image = getImage( surface.init_from );\n\n        } else {\n\n          console.warn( 'THREE.ColladaLoader: Undefined sampler. Access image directly (see #12530).' );\n          image = getImage( textureObject.id );\n\n        }\n\n        // create texture if image is avaiable\n\n        if ( image !== null ) {\n\n          var loader = getTextureLoader( image );\n\n          if ( loader !== undefined ) {\n\n            var texture = loader.load( image );\n\n            var extra = textureObject.extra;\n\n            if ( extra !== undefined && extra.technique !== undefined && isEmpty( extra.technique ) === false ) {\n\n              var technique = extra.technique;\n\n              texture.wrapS = technique.wrapU ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n              texture.wrapT = technique.wrapV ? THREE.RepeatWrapping : THREE.ClampToEdgeWrapping;\n\n              texture.offset.set( technique.offsetU || 0, technique.offsetV || 0 );\n              texture.repeat.set( technique.repeatU || 1, technique.repeatV || 1 );\n\n            } else {\n\n              texture.wrapS = THREE.RepeatWrapping;\n              texture.wrapT = THREE.RepeatWrapping;\n\n            }\n\n            return texture;\n\n          } else {\n\n            console.warn( 'THREE.ColladaLoader: Loader for texture %s not found.', image );\n\n            return null;\n\n          }\n\n        } else {\n\n          console.warn( 'THREE.ColladaLoader: Couldn\\'t create texture with ID:', textureObject.id );\n\n          return null;\n\n        }\n\n      }\n\n      var parameters = technique.parameters;\n\n      for ( var key in parameters ) {\n\n        var parameter = parameters[ key ];\n\n        switch ( key ) {\n\n          case 'diffuse':\n            if ( parameter.color ) material.color.fromArray( parameter.color );\n            if ( parameter.texture ) material.map = getTexture( parameter.texture );\n            break;\n          case 'specular':\n            if ( parameter.color && material.specular ) material.specular.fromArray( parameter.color );\n            if ( parameter.texture ) material.specularMap = getTexture( parameter.texture );\n            break;\n          case 'bump':\n            if ( parameter.texture ) material.normalMap = getTexture( parameter.texture );\n            break;\n          case 'ambient':\n            if ( parameter.texture ) material.lightMap = getTexture( parameter.texture );\n            break;\n          case 'shininess':\n            if ( parameter.float && material.shininess ) material.shininess = parameter.float;\n            break;\n          case 'emission':\n            if ( parameter.color && material.emissive ) material.emissive.fromArray( parameter.color );\n            if ( parameter.texture ) material.emissiveMap = getTexture( parameter.texture );\n            break;\n\n        }\n\n      }\n\n      //\n\n      var transparent = parameters[ 'transparent' ];\n      var transparency = parameters[ 'transparency' ];\n\n      // <transparency> does not exist but <transparent>\n\n      if ( transparency === undefined && transparent ) {\n\n        transparency = {\n          float: 1\n        };\n\n      }\n\n      // <transparent> does not exist but <transparency>\n\n      if ( transparent === undefined && transparency ) {\n\n        transparent = {\n          opaque: 'A_ONE',\n          data: {\n            color: [ 1, 1, 1, 1 ]\n          } };\n\n      }\n\n      if ( transparent && transparency ) {\n\n        // handle case if a texture exists but no color\n\n        if ( transparent.data.texture ) {\n\n          // we do not set an alpha map (see #13792)\n\n          material.transparent = true;\n\n        } else {\n\n          var color = transparent.data.color;\n\n          switch ( transparent.opaque ) {\n\n            case 'A_ONE':\n              material.opacity = color[ 3 ] * transparency.float;\n              break;\n            case 'RGB_ZERO':\n              material.opacity = 1 - ( color[ 0 ] * transparency.float );\n              break;\n            case 'A_ZERO':\n              material.opacity = 1 - ( color[ 3 ] * transparency.float );\n              break;\n            case 'RGB_ONE':\n              material.opacity = color[ 0 ] * transparency.float;\n              break;\n            default:\n              console.warn( 'THREE.ColladaLoader: Invalid opaque type \"%s\" of transparent tag.', transparent.opaque );\n\n          }\n\n          if ( material.opacity < 1 ) material.transparent = true;\n\n        }\n\n      }\n\n      //\n\n      if ( extra !== undefined && extra.technique !== undefined && extra.technique.double_sided === 1 ) {\n\n        material.side = THREE.DoubleSide;\n\n      }\n\n      return material;\n\n    }\n\n    function getMaterial( id ) {\n\n      return getBuild( library.materials[ id ], buildMaterial );\n\n    }\n\n    // camera\n\n    function parseCamera( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' )\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'optics':\n            data.optics = parseCameraOptics( child );\n            break;\n\n        }\n\n      }\n\n      library.cameras[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseCameraOptics( xml ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            return parseCameraTechnique( child );\n\n        }\n\n      }\n\n      return {};\n\n    }\n\n    function parseCameraTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'perspective':\n          case 'orthographic':\n\n            data.technique = child.nodeName;\n            data.parameters = parseCameraParameters( child );\n\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseCameraParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'xfov':\n          case 'yfov':\n          case 'xmag':\n          case 'ymag':\n          case 'znear':\n          case 'zfar':\n          case 'aspect_ratio':\n            data[ child.nodeName ] = parseFloat( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildCamera( data ) {\n\n      var camera;\n\n      switch ( data.optics.technique ) {\n\n        case 'perspective':\n          camera = new THREE.PerspectiveCamera(\n            data.optics.parameters.yfov,\n            data.optics.parameters.aspect_ratio,\n            data.optics.parameters.znear,\n            data.optics.parameters.zfar\n          );\n          break;\n\n        case 'orthographic':\n          var ymag = data.optics.parameters.ymag;\n          var xmag = data.optics.parameters.xmag;\n          var aspectRatio = data.optics.parameters.aspect_ratio;\n\n          xmag = ( xmag === undefined ) ? ( ymag * aspectRatio ) : xmag;\n          ymag = ( ymag === undefined ) ? ( xmag / aspectRatio ) : ymag;\n\n          xmag *= 0.5;\n          ymag *= 0.5;\n\n          camera = new THREE.OrthographicCamera(\n            - xmag, xmag, ymag, - ymag, // left, right, top, bottom\n            data.optics.parameters.znear,\n            data.optics.parameters.zfar\n          );\n          break;\n\n        default:\n          camera = new THREE.PerspectiveCamera();\n          break;\n\n      }\n\n      camera.name = data.name;\n\n      return camera;\n\n    }\n\n    function getCamera( id ) {\n\n      var data = library.cameras[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildCamera );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find camera with ID:', id );\n\n      return null;\n\n    }\n\n    // light\n\n    function parseLight( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            data = parseLightTechnique( child );\n            break;\n\n        }\n\n      }\n\n      library.lights[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseLightTechnique( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'directional':\n          case 'point':\n          case 'spot':\n          case 'ambient':\n\n            data.technique = child.nodeName;\n            data.parameters = parseLightParameters( child );\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseLightParameters( xml ) {\n\n      var data = {};\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'color':\n            var array = parseFloats( child.textContent );\n            data.color = new THREE.Color().fromArray( array );\n            break;\n\n          case 'falloff_angle':\n            data.falloffAngle = parseFloat( child.textContent );\n            break;\n\n          case 'quadratic_attenuation':\n            var f = parseFloat( child.textContent );\n            data.distance = f ? Math.sqrt( 1 / f ) : 0;\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildLight( data ) {\n\n      var light;\n\n      switch ( data.technique ) {\n\n        case 'directional':\n          light = new THREE.DirectionalLight();\n          break;\n\n        case 'point':\n          light = new THREE.PointLight();\n          break;\n\n        case 'spot':\n          light = new THREE.SpotLight();\n          break;\n\n        case 'ambient':\n          light = new THREE.AmbientLight();\n          break;\n\n      }\n\n      if ( data.parameters.color ) light.color.copy( data.parameters.color );\n      if ( data.parameters.distance ) light.distance = data.parameters.distance;\n\n      return light;\n\n    }\n\n    function getLight( id ) {\n\n      var data = library.lights[ id ];\n\n      if ( data !== undefined ) {\n\n        return getBuild( data, buildLight );\n\n      }\n\n      console.warn( 'THREE.ColladaLoader: Couldn\\'t find light with ID:', id );\n\n      return null;\n\n    }\n\n    // geometry\n\n    function parseGeometry( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ),\n        sources: {},\n        vertices: {},\n        primitives: []\n      };\n\n      var mesh = getElementsByTagName( xml, 'mesh' )[ 0 ];\n\n      // the following tags inside geometry are not supported yet (see https://github.com/mrdoob/three.js/pull/12606): convex_mesh, spline, brep\n      if ( mesh === undefined ) return;\n\n      for ( var i = 0; i < mesh.childNodes.length; i ++ ) {\n\n        var child = mesh.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        var id = child.getAttribute( 'id' );\n\n        switch ( child.nodeName ) {\n\n          case 'source':\n            data.sources[ id ] = parseSource( child );\n            break;\n\n          case 'vertices':\n            // data.sources[ id ] = data.sources[ parseId( getElementsByTagName( child, 'input' )[ 0 ].getAttribute( 'source' ) ) ];\n            data.vertices = parseGeometryVertices( child );\n            break;\n\n          case 'polygons':\n            console.warn( 'THREE.ColladaLoader: Unsupported primitive type: ', child.nodeName );\n            break;\n\n          case 'lines':\n          case 'linestrips':\n          case 'polylist':\n          case 'triangles':\n            data.primitives.push( parseGeometryPrimitive( child ) );\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      library.geometries[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parseSource( xml ) {\n\n      var data = {\n        array: [],\n        stride: 3\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'float_array':\n            data.array = parseFloats( child.textContent );\n            break;\n\n          case 'Name_array':\n            data.array = parseStrings( child.textContent );\n            break;\n\n          case 'technique_common':\n            var accessor = getElementsByTagName( child, 'accessor' )[ 0 ];\n\n            if ( accessor !== undefined ) {\n\n              data.stride = parseInt( accessor.getAttribute( 'stride' ) );\n\n            }\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseGeometryVertices( xml ) {\n\n      var data = {};\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        data[ child.getAttribute( 'semantic' ) ] = parseId( child.getAttribute( 'source' ) );\n\n      }\n\n      return data;\n\n    }\n\n    function parseGeometryPrimitive( xml ) {\n\n      var primitive = {\n        type: xml.nodeName,\n        material: xml.getAttribute( 'material' ),\n        count: parseInt( xml.getAttribute( 'count' ) ),\n        inputs: {},\n        stride: 0,\n        hasUV: false\n      };\n\n      for ( var i = 0, l = xml.childNodes.length; i < l; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'input':\n            var id = parseId( child.getAttribute( 'source' ) );\n            var semantic = child.getAttribute( 'semantic' );\n            var offset = parseInt( child.getAttribute( 'offset' ) );\n            var set = parseInt( child.getAttribute( 'set' ) );\n            var inputname = ( set > 0 ? semantic + set : semantic );\n            primitive.inputs[ inputname ] = { id: id, offset: offset };\n            primitive.stride = Math.max( primitive.stride, offset + 1 );\n            if ( semantic === 'TEXCOORD' ) primitive.hasUV = true;\n            break;\n\n          case 'vcount':\n            primitive.vcount = parseInts( child.textContent );\n            break;\n\n          case 'p':\n            primitive.p = parseInts( child.textContent );\n            break;\n\n        }\n\n      }\n\n      return primitive;\n\n    }\n\n    function groupPrimitives( primitives ) {\n\n      var build = {};\n\n      for ( var i = 0; i < primitives.length; i ++ ) {\n\n        var primitive = primitives[ i ];\n\n        if ( build[ primitive.type ] === undefined ) build[ primitive.type ] = [];\n\n        build[ primitive.type ].push( primitive );\n\n      }\n\n      return build;\n\n    }\n\n    function checkUVCoordinates( primitives ) {\n\n      var count = 0;\n\n      for ( var i = 0, l = primitives.length; i < l; i ++ ) {\n\n        var primitive = primitives[ i ];\n\n        if ( primitive.hasUV === true ) {\n\n          count ++;\n\n        }\n\n      }\n\n      if ( count > 0 && count < primitives.length ) {\n\n        primitives.uvsNeedsFix = true;\n\n      }\n\n    }\n\n    function buildGeometry( data ) {\n\n      var build = {};\n\n      var sources = data.sources;\n      var vertices = data.vertices;\n      var primitives = data.primitives;\n\n      if ( primitives.length === 0 ) return {};\n\n      // our goal is to create one buffer geometry for a single type of primitives\n      // first, we group all primitives by their type\n\n      var groupedPrimitives = groupPrimitives( primitives );\n\n      for ( var type in groupedPrimitives ) {\n\n        var primitiveType = groupedPrimitives[ type ];\n\n        // second, ensure consistent uv coordinates for each type of primitives (polylist,triangles or lines)\n\n        checkUVCoordinates( primitiveType );\n\n        // third, create a buffer geometry for each type of primitives\n\n        build[ type ] = buildGeometryType( primitiveType, sources, vertices );\n\n      }\n\n      return build;\n\n    }\n\n    function buildGeometryType( primitives, sources, vertices ) {\n\n      var build = {};\n\n      var position = { array: [], stride: 0 };\n      var normal = { array: [], stride: 0 };\n      var uv = { array: [], stride: 0 };\n      var uv2 = { array: [], stride: 0 };\n      var color = { array: [], stride: 0 };\n\n      var skinIndex = { array: [], stride: 4 };\n      var skinWeight = { array: [], stride: 4 };\n\n      var geometry = new THREE.BufferGeometry();\n\n      var materialKeys = [];\n\n      var start = 0;\n\n      for ( var p = 0; p < primitives.length; p ++ ) {\n\n        var primitive = primitives[ p ];\n        var inputs = primitive.inputs;\n\n        // groups\n\n        var count = 0;\n\n        switch ( primitive.type ) {\n\n          case 'lines':\n          case 'linestrips':\n            count = primitive.count * 2;\n            break;\n\n          case 'triangles':\n            count = primitive.count * 3;\n            break;\n\n          case 'polylist':\n\n            for ( var g = 0; g < primitive.count; g ++ ) {\n\n              var vc = primitive.vcount[ g ];\n\n              switch ( vc ) {\n\n                case 3:\n                  count += 3; // single triangle\n                  break;\n\n                case 4:\n                  count += 6; // quad, subdivided into two triangles\n                  break;\n\n                default:\n                  count += ( vc - 2 ) * 3; // polylist with more than four vertices\n                  break;\n\n              }\n\n            }\n\n            break;\n\n          default:\n            console.warn( 'THREE.ColladaLoader: Unknow primitive type:', primitive.type );\n\n        }\n\n        geometry.addGroup( start, count, p );\n        start += count;\n\n        // material\n\n        if ( primitive.material ) {\n\n          materialKeys.push( primitive.material );\n\n        }\n\n        // geometry data\n\n        for ( var name in inputs ) {\n\n          var input = inputs[ name ];\n\n          switch ( name ) {\n\n            case 'VERTEX':\n              for ( var key in vertices ) {\n\n                var id = vertices[ key ];\n\n                switch ( key ) {\n\n                  case 'POSITION':\n                    var prevLength = position.array.length;\n                    buildGeometryData( primitive, sources[ id ], input.offset, position.array );\n                    position.stride = sources[ id ].stride;\n\n                    if ( sources.skinWeights && sources.skinIndices ) {\n\n                      buildGeometryData( primitive, sources.skinIndices, input.offset, skinIndex.array );\n                      buildGeometryData( primitive, sources.skinWeights, input.offset, skinWeight.array );\n\n                    }\n\n                    // see #3803\n\n                    if ( primitive.hasUV === false && primitives.uvsNeedsFix === true ) {\n\n                      var count = ( position.array.length - prevLength ) / position.stride;\n\n                      for ( var i = 0; i < count; i ++ ) {\n\n                        // fill missing uv coordinates\n\n                        uv.array.push( 0, 0 );\n\n                      }\n\n                    }\n                    break;\n\n                  case 'NORMAL':\n                    buildGeometryData( primitive, sources[ id ], input.offset, normal.array );\n                    normal.stride = sources[ id ].stride;\n                    break;\n\n                  case 'COLOR':\n                    buildGeometryData( primitive, sources[ id ], input.offset, color.array );\n                    color.stride = sources[ id ].stride;\n                    break;\n\n                  case 'TEXCOORD':\n                    buildGeometryData( primitive, sources[ id ], input.offset, uv.array );\n                    uv.stride = sources[ id ].stride;\n                    break;\n\n                  case 'TEXCOORD1':\n                    buildGeometryData( primitive, sources[ id ], input.offset, uv2.array );\n                    uv.stride = sources[ id ].stride;\n                    break;\n\n                  default:\n                    console.warn( 'THREE.ColladaLoader: Semantic \"%s\" not handled in geometry build process.', key );\n\n                }\n\n              }\n              break;\n\n            case 'NORMAL':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, normal.array );\n              normal.stride = sources[ input.id ].stride;\n              break;\n\n            case 'COLOR':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, color.array );\n              color.stride = sources[ input.id ].stride;\n              break;\n\n            case 'TEXCOORD':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, uv.array );\n              uv.stride = sources[ input.id ].stride;\n              break;\n\n            case 'TEXCOORD1':\n              buildGeometryData( primitive, sources[ input.id ], input.offset, uv2.array );\n              uv2.stride = sources[ input.id ].stride;\n              break;\n\n          }\n\n        }\n\n      }\n\n      // build geometry\n\n      if ( position.array.length > 0 ) geometry.addAttribute( 'position', new THREE.Float32BufferAttribute( position.array, position.stride ) );\n      if ( normal.array.length > 0 ) geometry.addAttribute( 'normal', new THREE.Float32BufferAttribute( normal.array, normal.stride ) );\n      if ( color.array.length > 0 ) geometry.addAttribute( 'color', new THREE.Float32BufferAttribute( color.array, color.stride ) );\n      if ( uv.array.length > 0 ) geometry.addAttribute( 'uv', new THREE.Float32BufferAttribute( uv.array, uv.stride ) );\n      if ( uv2.array.length > 0 ) geometry.addAttribute( 'uv2', new THREE.Float32BufferAttribute( uv2.array, uv2.stride ) );\n\n      if ( skinIndex.array.length > 0 ) geometry.addAttribute( 'skinIndex', new THREE.Float32BufferAttribute( skinIndex.array, skinIndex.stride ) );\n      if ( skinWeight.array.length > 0 ) geometry.addAttribute( 'skinWeight', new THREE.Float32BufferAttribute( skinWeight.array, skinWeight.stride ) );\n\n      build.data = geometry;\n      build.type = primitives[ 0 ].type;\n      build.materialKeys = materialKeys;\n\n      return build;\n\n    }\n\n    function buildGeometryData( primitive, source, offset, array ) {\n\n      var indices = primitive.p;\n      var stride = primitive.stride;\n      var vcount = primitive.vcount;\n\n      function pushVector( i ) {\n\n        var index = indices[ i + offset ] * sourceStride;\n        var length = index + sourceStride;\n\n        for ( ; index < length; index ++ ) {\n\n          array.push( sourceArray[ index ] );\n\n        }\n\n      }\n\n      var sourceArray = source.array;\n      var sourceStride = source.stride;\n\n      if ( primitive.vcount !== undefined ) {\n\n        var index = 0;\n\n        for ( var i = 0, l = vcount.length; i < l; i ++ ) {\n\n          var count = vcount[ i ];\n\n          if ( count === 4 ) {\n\n            var a = index + stride * 0;\n            var b = index + stride * 1;\n            var c = index + stride * 2;\n            var d = index + stride * 3;\n\n            pushVector( a ); pushVector( b ); pushVector( d );\n            pushVector( b ); pushVector( c ); pushVector( d );\n\n          } else if ( count === 3 ) {\n\n            var a = index + stride * 0;\n            var b = index + stride * 1;\n            var c = index + stride * 2;\n\n            pushVector( a ); pushVector( b ); pushVector( c );\n\n          } else if ( count > 4 ) {\n\n            for ( var k = 1, kl = ( count - 2 ); k <= kl; k ++ ) {\n\n              var a = index + stride * 0;\n              var b = index + stride * k;\n              var c = index + stride * ( k + 1 );\n\n              pushVector( a ); pushVector( b ); pushVector( c );\n\n            }\n\n          }\n\n          index += stride * count;\n\n        }\n\n      } else {\n\n        for ( var i = 0, l = indices.length; i < l; i += stride ) {\n\n          pushVector( i );\n\n        }\n\n      }\n\n    }\n\n    function getGeometry( id ) {\n\n      return getBuild( library.geometries[ id ], buildGeometry );\n\n    }\n\n    // kinematics\n\n    function parseKinematicsModel( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        joints: {},\n        links: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            parseKinematicsTechniqueCommon( child, data );\n            break;\n\n        }\n\n      }\n\n      library.kinematicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildKinematicsModel( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data;\n\n    }\n\n    function getKinematicsModel( id ) {\n\n      return getBuild( library.kinematicsModels[ id ], buildKinematicsModel );\n\n    }\n\n    function parseKinematicsTechniqueCommon( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'joint':\n            data.joints[ child.getAttribute( 'sid' ) ] = parseKinematicsJoint( child );\n            break;\n\n          case 'link':\n            data.links.push( parseKinematicsLink( child ) );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parseKinematicsJoint( xml ) {\n\n      var data;\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'prismatic':\n          case 'revolute':\n            data = parseKinematicsJointParameter( child );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsJointParameter( xml, data ) {\n\n      var data = {\n        sid: xml.getAttribute( 'sid' ),\n        name: xml.getAttribute( 'name' ) || '',\n        axis: new THREE.Vector3(),\n        limits: {\n          min: 0,\n          max: 0\n        },\n        type: xml.nodeName,\n        static: false,\n        zeroPosition: 0,\n        middlePosition: 0\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'axis':\n            var array = parseFloats( child.textContent );\n            data.axis.fromArray( array );\n            break;\n          case 'limits':\n            var max = child.getElementsByTagName( 'max' )[ 0 ];\n            var min = child.getElementsByTagName( 'min' )[ 0 ];\n\n            data.limits.max = parseFloat( max.textContent );\n            data.limits.min = parseFloat( min.textContent );\n            break;\n\n        }\n\n      }\n\n      // if min is equal to or greater than max, consider the joint static\n\n      if ( data.limits.min >= data.limits.max ) {\n\n        data.static = true;\n\n      }\n\n      // calculate middle position\n\n      data.middlePosition = ( data.limits.min + data.limits.max ) / 2.0;\n\n      return data;\n\n    }\n\n    function parseKinematicsLink( xml ) {\n\n      var data = {\n        sid: xml.getAttribute( 'sid' ),\n        name: xml.getAttribute( 'name' ) || '',\n        attachments: [],\n        transforms: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'attachment_full':\n            data.attachments.push( parseKinematicsAttachment( child ) );\n            break;\n\n          case 'matrix':\n          case 'translate':\n          case 'rotate':\n            data.transforms.push( parseKinematicsTransform( child ) );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsAttachment( xml ) {\n\n      var data = {\n        joint: xml.getAttribute( 'joint' ).split( '/' ).pop(),\n        transforms: [],\n        links: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'link':\n            data.links.push( parseKinematicsLink( child ) );\n            break;\n\n          case 'matrix':\n          case 'translate':\n          case 'rotate':\n            data.transforms.push( parseKinematicsTransform( child ) );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function parseKinematicsTransform( xml ) {\n\n      var data = {\n        type: xml.nodeName\n      };\n\n      var array = parseFloats( xml.textContent );\n\n      switch ( data.type ) {\n\n        case 'matrix':\n          data.obj = new THREE.Matrix4();\n          data.obj.fromArray( array ).transpose();\n          break;\n\n        case 'translate':\n          data.obj = new THREE.Vector3();\n          data.obj.fromArray( array );\n          break;\n\n        case 'rotate':\n          data.obj = new THREE.Vector3();\n          data.obj.fromArray( array );\n          data.angle = THREE.MathUtils.degToRad( array[ 3 ] );\n          break;\n\n      }\n\n      return data;\n\n    }\n\n    // physics\n\n    function parsePhysicsModel( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        rigidBodies: {}\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'rigid_body':\n            data.rigidBodies[ child.getAttribute( 'name' ) ] = {};\n            parsePhysicsRigidBody( child, data.rigidBodies[ child.getAttribute( 'name' ) ] );\n            break;\n\n        }\n\n      }\n\n      library.physicsModels[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function parsePhysicsRigidBody( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'technique_common':\n            parsePhysicsTechniqueCommon( child, data );\n            break;\n\n        }\n\n      }\n\n    }\n\n    function parsePhysicsTechniqueCommon( xml, data ) {\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'inertia':\n            data.inertia = parseFloats( child.textContent );\n            break;\n\n          case 'mass':\n            data.mass = parseFloats( child.textContent )[ 0 ];\n            break;\n\n        }\n\n      }\n\n    }\n\n    // scene\n\n    function parseKinematicsScene( xml ) {\n\n      var data = {\n        bindJointAxis: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'bind_joint_axis':\n            data.bindJointAxis.push( parseKinematicsBindJointAxis( child ) );\n            break;\n\n        }\n\n      }\n\n      library.kinematicsScenes[ parseId( xml.getAttribute( 'url' ) ) ] = data;\n\n    }\n\n    function parseKinematicsBindJointAxis( xml ) {\n\n      var data = {\n        target: xml.getAttribute( 'target' ).split( '/' ).pop()\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'axis':\n            var param = child.getElementsByTagName( 'param' )[ 0 ];\n            data.axis = param.textContent;\n            var tmpJointIndex = data.axis.split( 'inst_' ).pop().split( 'axis' )[ 0 ];\n            data.jointIndex = tmpJointIndex.substr( 0, tmpJointIndex.length - 1 );\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildKinematicsScene( data ) {\n\n      if ( data.build !== undefined ) return data.build;\n\n      return data;\n\n    }\n\n    function getKinematicsScene( id ) {\n\n      return getBuild( library.kinematicsScenes[ id ], buildKinematicsScene );\n\n    }\n\n    function setupKinematics() {\n\n      var kinematicsModelId = Object.keys( library.kinematicsModels )[ 0 ];\n      var kinematicsSceneId = Object.keys( library.kinematicsScenes )[ 0 ];\n      var visualSceneId = Object.keys( library.visualScenes )[ 0 ];\n\n      if ( kinematicsModelId === undefined || kinematicsSceneId === undefined ) return;\n\n      var kinematicsModel = getKinematicsModel( kinematicsModelId );\n      var kinematicsScene = getKinematicsScene( kinematicsSceneId );\n      var visualScene = getVisualScene( visualSceneId );\n\n      var bindJointAxis = kinematicsScene.bindJointAxis;\n      var jointMap = {};\n\n      for ( var i = 0, l = bindJointAxis.length; i < l; i ++ ) {\n\n        var axis = bindJointAxis[ i ];\n\n        // the result of the following query is an element of type 'translate', 'rotate','scale' or 'matrix'\n\n        var targetElement = collada.querySelector( '[sid=\"' + axis.target + '\"]' );\n\n        if ( targetElement ) {\n\n          // get the parent of the transfrom element\n\n          var parentVisualElement = targetElement.parentElement;\n\n          // connect the joint of the kinematics model with the element in the visual scene\n\n          connect( axis.jointIndex, parentVisualElement );\n\n        }\n\n      }\n\n      function connect( jointIndex, visualElement ) {\n\n        var visualElementName = visualElement.getAttribute( 'name' );\n        var joint = kinematicsModel.joints[ jointIndex ];\n\n        visualScene.traverse( function ( object ) {\n\n          if ( object.name === visualElementName ) {\n\n            jointMap[ jointIndex ] = {\n              object: object,\n              transforms: buildTransformList( visualElement ),\n              joint: joint,\n              position: joint.zeroPosition\n            };\n\n          }\n\n        } );\n\n      }\n\n      var m0 = new THREE.Matrix4();\n\n      kinematics = {\n\n        joints: kinematicsModel && kinematicsModel.joints,\n\n        getJointValue: function ( jointIndex ) {\n\n          var jointData = jointMap[ jointIndex ];\n\n          if ( jointData ) {\n\n            return jointData.position;\n\n          } else {\n\n            console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' doesn\\'t exist.' );\n\n          }\n\n        },\n\n        setJointValue: function ( jointIndex, value ) {\n\n          var jointData = jointMap[ jointIndex ];\n\n          if ( jointData ) {\n\n            var joint = jointData.joint;\n\n            if ( value > joint.limits.max || value < joint.limits.min ) {\n\n              console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' value ' + value + ' outside of limits (min: ' + joint.limits.min + ', max: ' + joint.limits.max + ').' );\n\n            } else if ( joint.static ) {\n\n              console.warn( 'THREE.ColladaLoader: Joint ' + jointIndex + ' is static.' );\n\n            } else {\n\n              var object = jointData.object;\n              var axis = joint.axis;\n              var transforms = jointData.transforms;\n\n              matrix.identity();\n\n              // each update, we have to apply all transforms in the correct order\n\n              for ( var i = 0; i < transforms.length; i ++ ) {\n\n                var transform = transforms[ i ];\n\n                // if there is a connection of the transform node with a joint, apply the joint value\n\n                if ( transform.sid && transform.sid.indexOf( jointIndex ) !== - 1 ) {\n\n                  switch ( joint.type ) {\n\n                    case 'revolute':\n                      matrix.multiply( m0.makeRotationAxis( axis, THREE.MathUtils.degToRad( value ) ) );\n                      break;\n\n                    case 'prismatic':\n                      matrix.multiply( m0.makeTranslation( axis.x * value, axis.y * value, axis.z * value ) );\n                      break;\n\n                    default:\n                      console.warn( 'THREE.ColladaLoader: Unknown joint type: ' + joint.type );\n                      break;\n\n                  }\n\n                } else {\n\n                  switch ( transform.type ) {\n\n                    case 'matrix':\n                      matrix.multiply( transform.obj );\n                      break;\n\n                    case 'translate':\n                      matrix.multiply( m0.makeTranslation( transform.obj.x, transform.obj.y, transform.obj.z ) );\n                      break;\n\n                    case 'scale':\n                      matrix.scale( transform.obj );\n                      break;\n\n                    case 'rotate':\n                      matrix.multiply( m0.makeRotationAxis( transform.obj, transform.angle ) );\n                      break;\n\n                  }\n\n                }\n\n              }\n\n              object.matrix.copy( matrix );\n              object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n              jointMap[ jointIndex ].position = value;\n\n            }\n\n          } else {\n\n            console.log( 'THREE.ColladaLoader: ' + jointIndex + ' does not exist.' );\n\n          }\n\n        }\n\n      };\n\n    }\n\n    function buildTransformList( node ) {\n\n      var transforms = [];\n\n      var xml = collada.querySelector( '[id=\"' + node.id + '\"]' );\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'matrix':\n            var array = parseFloats( child.textContent );\n            var matrix = new THREE.Matrix4().fromArray( array ).transpose();\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: matrix\n            } );\n            break;\n\n          case 'translate':\n          case 'scale':\n            var array = parseFloats( child.textContent );\n            var vector = new THREE.Vector3().fromArray( array );\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: vector\n            } );\n            break;\n\n          case 'rotate':\n            var array = parseFloats( child.textContent );\n            var vector = new THREE.Vector3().fromArray( array );\n            var angle = THREE.MathUtils.degToRad( array[ 3 ] );\n            transforms.push( {\n              sid: child.getAttribute( 'sid' ),\n              type: child.nodeName,\n              obj: vector,\n              angle: angle\n            } );\n            break;\n\n        }\n\n      }\n\n      return transforms;\n\n    }\n\n    // nodes\n\n    function prepareNodes( xml ) {\n\n      var elements = xml.getElementsByTagName( 'node' );\n\n      // ensure all node elements have id attributes\n\n      for ( var i = 0; i < elements.length; i ++ ) {\n\n        var element = elements[ i ];\n\n        if ( element.hasAttribute( 'id' ) === false ) {\n\n          element.setAttribute( 'id', generateId() );\n\n        }\n\n      }\n\n    }\n\n    var matrix = new THREE.Matrix4();\n    var vector = new THREE.Vector3();\n\n    function parseNode( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ) || '',\n        type: xml.getAttribute( 'type' ),\n        id: xml.getAttribute( 'id' ),\n        sid: xml.getAttribute( 'sid' ),\n        matrix: new THREE.Matrix4(),\n        nodes: [],\n        instanceCameras: [],\n        instanceControllers: [],\n        instanceLights: [],\n        instanceGeometries: [],\n        instanceNodes: [],\n        transforms: {}\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        if ( child.nodeType !== 1 ) continue;\n\n        switch ( child.nodeName ) {\n\n          case 'node':\n            data.nodes.push( child.getAttribute( 'id' ) );\n            parseNode( child );\n            break;\n\n          case 'instance_camera':\n            data.instanceCameras.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'instance_controller':\n            data.instanceControllers.push( parseNodeInstance( child ) );\n            break;\n\n          case 'instance_light':\n            data.instanceLights.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'instance_geometry':\n            data.instanceGeometries.push( parseNodeInstance( child ) );\n            break;\n\n          case 'instance_node':\n            data.instanceNodes.push( parseId( child.getAttribute( 'url' ) ) );\n            break;\n\n          case 'matrix':\n            var array = parseFloats( child.textContent );\n            data.matrix.multiply( matrix.fromArray( array ).transpose() );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'translate':\n            var array = parseFloats( child.textContent );\n            vector.fromArray( array );\n            data.matrix.multiply( matrix.makeTranslation( vector.x, vector.y, vector.z ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'rotate':\n            var array = parseFloats( child.textContent );\n            var angle = THREE.MathUtils.degToRad( array[ 3 ] );\n            data.matrix.multiply( matrix.makeRotationAxis( vector.fromArray( array ), angle ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'scale':\n            var array = parseFloats( child.textContent );\n            data.matrix.scale( vector.fromArray( array ) );\n            data.transforms[ child.getAttribute( 'sid' ) ] = child.nodeName;\n            break;\n\n          case 'extra':\n            break;\n\n          default:\n            console.log( child );\n\n        }\n\n      }\n\n      if ( hasNode( data.id ) ) {\n\n        console.warn( 'THREE.ColladaLoader: There is already a node with ID %s. Exclude current node from further processing.', data.id );\n\n      } else {\n\n        library.nodes[ data.id ] = data;\n\n      }\n\n      return data;\n\n    }\n\n    function parseNodeInstance( xml ) {\n\n      var data = {\n        id: parseId( xml.getAttribute( 'url' ) ),\n        materials: {},\n        skeletons: []\n      };\n\n      for ( var i = 0; i < xml.childNodes.length; i ++ ) {\n\n        var child = xml.childNodes[ i ];\n\n        switch ( child.nodeName ) {\n\n          case 'bind_material':\n            var instances = child.getElementsByTagName( 'instance_material' );\n\n            for ( var j = 0; j < instances.length; j ++ ) {\n\n              var instance = instances[ j ];\n              var symbol = instance.getAttribute( 'symbol' );\n              var target = instance.getAttribute( 'target' );\n\n              data.materials[ symbol ] = parseId( target );\n\n            }\n\n            break;\n\n          case 'skeleton':\n            data.skeletons.push( parseId( child.textContent ) );\n            break;\n\n          default:\n            break;\n\n        }\n\n      }\n\n      return data;\n\n    }\n\n    function buildSkeleton( skeletons, joints ) {\n\n      var boneData = [];\n      var sortedBoneData = [];\n\n      var i, j, data;\n\n      // a skeleton can have multiple root bones. collada expresses this\n      // situtation with multiple \"skeleton\" tags per controller instance\n\n      for ( i = 0; i < skeletons.length; i ++ ) {\n\n        var skeleton = skeletons[ i ];\n\n        var root;\n\n        if ( hasNode( skeleton ) ) {\n\n          root = getNode( skeleton );\n          buildBoneHierarchy( root, joints, boneData );\n\n        } else if ( hasVisualScene( skeleton ) ) {\n\n          // handle case where the skeleton refers to the visual scene (#13335)\n\n          var visualScene = library.visualScenes[ skeleton ];\n          var children = visualScene.children;\n\n          for ( var j = 0; j < children.length; j ++ ) {\n\n            var child = children[ j ];\n\n            if ( child.type === 'JOINT' ) {\n\n              var root = getNode( child.id );\n              buildBoneHierarchy( root, joints, boneData );\n\n            }\n\n          }\n\n        } else {\n\n          console.error( 'THREE.ColladaLoader: Unable to find root bone of skeleton with ID:', skeleton );\n\n        }\n\n      }\n\n      // sort bone data (the order is defined in the corresponding controller)\n\n      for ( i = 0; i < joints.length; i ++ ) {\n\n        for ( j = 0; j < boneData.length; j ++ ) {\n\n          data = boneData[ j ];\n\n          if ( data.bone.name === joints[ i ].name ) {\n\n            sortedBoneData[ i ] = data;\n            data.processed = true;\n            break;\n\n          }\n\n        }\n\n      }\n\n      // add unprocessed bone data at the end of the list\n\n      for ( i = 0; i < boneData.length; i ++ ) {\n\n        data = boneData[ i ];\n\n        if ( data.processed === false ) {\n\n          sortedBoneData.push( data );\n          data.processed = true;\n\n        }\n\n      }\n\n      // setup arrays for skeleton creation\n\n      var bones = [];\n      var boneInverses = [];\n\n      for ( i = 0; i < sortedBoneData.length; i ++ ) {\n\n        data = sortedBoneData[ i ];\n\n        bones.push( data.bone );\n        boneInverses.push( data.boneInverse );\n\n      }\n\n      return new THREE.Skeleton( bones, boneInverses );\n\n    }\n\n    function buildBoneHierarchy( root, joints, boneData ) {\n\n      // setup bone data from visual scene\n\n      root.traverse( function ( object ) {\n\n        if ( object.isBone === true ) {\n\n          var boneInverse;\n\n          // retrieve the boneInverse from the controller data\n\n          for ( var i = 0; i < joints.length; i ++ ) {\n\n            var joint = joints[ i ];\n\n            if ( joint.name === object.name ) {\n\n              boneInverse = joint.boneInverse;\n              break;\n\n            }\n\n          }\n\n          if ( boneInverse === undefined ) {\n\n            // Unfortunately, there can be joints in the visual scene that are not part of the\n            // corresponding controller. In this case, we have to create a dummy boneInverse matrix\n            // for the respective bone. This bone won't affect any vertices, because there are no skin indices\n            // and weights defined for it. But we still have to add the bone to the sorted bone list in order to\n            // ensure a correct animation of the model.\n\n            boneInverse = new THREE.Matrix4();\n\n          }\n\n          boneData.push( { bone: object, boneInverse: boneInverse, processed: false } );\n\n        }\n\n      } );\n\n    }\n\n    function buildNode( data ) {\n\n      var objects = [];\n\n      var matrix = data.matrix;\n      var nodes = data.nodes;\n      var type = data.type;\n      var instanceCameras = data.instanceCameras;\n      var instanceControllers = data.instanceControllers;\n      var instanceLights = data.instanceLights;\n      var instanceGeometries = data.instanceGeometries;\n      var instanceNodes = data.instanceNodes;\n\n      // nodes\n\n      for ( var i = 0, l = nodes.length; i < l; i ++ ) {\n\n        objects.push( getNode( nodes[ i ] ) );\n\n      }\n\n      // instance cameras\n\n      for ( var i = 0, l = instanceCameras.length; i < l; i ++ ) {\n\n        var instanceCamera = getCamera( instanceCameras[ i ] );\n\n        if ( instanceCamera !== null ) {\n\n          objects.push( instanceCamera.clone() );\n\n        }\n\n      }\n\n      // instance controllers\n\n      for ( var i = 0, l = instanceControllers.length; i < l; i ++ ) {\n\n        var instance = instanceControllers[ i ];\n        var controller = getController( instance.id );\n        var geometries = getGeometry( controller.id );\n        var newObjects = buildObjects( geometries, instance.materials );\n\n        var skeletons = instance.skeletons;\n        var joints = controller.skin.joints;\n\n        var skeleton = buildSkeleton( skeletons, joints );\n\n        for ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n          var object = newObjects[ j ];\n\n          if ( object.isSkinnedMesh ) {\n\n            object.bind( skeleton, controller.skin.bindMatrix );\n            object.normalizeSkinWeights();\n\n          }\n\n          objects.push( object );\n\n        }\n\n      }\n\n      // instance lights\n\n      for ( var i = 0, l = instanceLights.length; i < l; i ++ ) {\n\n        var instanceLight = getLight( instanceLights[ i ] );\n\n        if ( instanceLight !== null ) {\n\n          objects.push( instanceLight.clone() );\n\n        }\n\n      }\n\n      // instance geometries\n\n      for ( var i = 0, l = instanceGeometries.length; i < l; i ++ ) {\n\n        var instance = instanceGeometries[ i ];\n\n        // a single geometry instance in collada can lead to multiple object3Ds.\n        // this is the case when primitives are combined like triangles and lines\n\n        var geometries = getGeometry( instance.id );\n        var newObjects = buildObjects( geometries, instance.materials );\n\n        for ( var j = 0, jl = newObjects.length; j < jl; j ++ ) {\n\n          objects.push( newObjects[ j ] );\n\n        }\n\n      }\n\n      // instance nodes\n\n      for ( var i = 0, l = instanceNodes.length; i < l; i ++ ) {\n\n        objects.push( getNode( instanceNodes[ i ] ).clone() );\n\n      }\n\n      var object;\n\n      if ( nodes.length === 0 && objects.length === 1 ) {\n\n        object = objects[ 0 ];\n\n      } else {\n\n        object = ( type === 'JOINT' ) ? new THREE.Bone() : new THREE.Group();\n\n        for ( var i = 0; i < objects.length; i ++ ) {\n\n          object.add( objects[ i ] );\n\n        }\n\n      }\n\n      if ( object.name === '' ) {\n\n        object.name = ( type === 'JOINT' ) ? data.sid : data.name;\n\n      }\n\n      object.matrix.copy( matrix );\n      object.matrix.decompose( object.position, object.quaternion, object.scale );\n\n      return object;\n\n    }\n\n    var fallbackMaterial = new THREE.MeshBasicMaterial( { color: 0xff00ff } );\n\n    function resolveMaterialBinding( keys, instanceMaterials ) {\n\n      var materials = [];\n\n      for ( var i = 0, l = keys.length; i < l; i ++ ) {\n\n        var id = instanceMaterials[ keys[ i ] ];\n\n        if ( id === undefined ) {\n\n          console.warn( 'THREE.ColladaLoader: Material with key %s not found. Apply fallback material.', keys[ i ] );\n          materials.push( fallbackMaterial );\n\n        } else {\n\n          materials.push( getMaterial( id ) );\n\n        }\n\n      }\n\n      return materials;\n\n    }\n\n    function buildObjects( geometries, instanceMaterials ) {\n\n      var objects = [];\n\n      for ( var type in geometries ) {\n\n        var geometry = geometries[ type ];\n\n        var materials = resolveMaterialBinding( geometry.materialKeys, instanceMaterials );\n\n        // handle case if no materials are defined\n\n        if ( materials.length === 0 ) {\n\n          if ( type === 'lines' || type === 'linestrips' ) {\n\n            materials.push( new THREE.LineBasicMaterial() );\n\n          } else {\n\n            materials.push( new THREE.MeshPhongMaterial() );\n\n          }\n\n        }\n\n        // regard skinning\n\n        var skinning = ( geometry.data.attributes.skinIndex !== undefined );\n\n        if ( skinning ) {\n\n          for ( var i = 0, l = materials.length; i < l; i ++ ) {\n\n            materials[ i ].skinning = true;\n\n          }\n\n        }\n\n        // choose between a single or multi materials (material array)\n\n        var material = ( materials.length === 1 ) ? materials[ 0 ] : materials;\n\n        // now create a specific 3D object\n\n        var object;\n\n        switch ( type ) {\n\n          case 'lines':\n            object = new THREE.LineSegments( geometry.data, material );\n            break;\n\n          case 'linestrips':\n            object = new THREE.Line( geometry.data, material );\n            break;\n\n          case 'triangles':\n          case 'polylist':\n            if ( skinning ) {\n\n              object = new THREE.SkinnedMesh( geometry.data, material );\n\n            } else {\n\n              object = new THREE.Mesh( geometry.data, material );\n\n            }\n            break;\n\n        }\n\n        objects.push( object );\n\n      }\n\n      return objects;\n\n    }\n\n    function hasNode( id ) {\n\n      return library.nodes[ id ] !== undefined;\n\n    }\n\n    function getNode( id ) {\n\n      return getBuild( library.nodes[ id ], buildNode );\n\n    }\n\n    // visual scenes\n\n    function parseVisualScene( xml ) {\n\n      var data = {\n        name: xml.getAttribute( 'name' ),\n        children: []\n      };\n\n      prepareNodes( xml );\n\n      var elements = getElementsByTagName( xml, 'node' );\n\n      for ( var i = 0; i < elements.length; i ++ ) {\n\n        data.children.push( parseNode( elements[ i ] ) );\n\n      }\n\n      library.visualScenes[ xml.getAttribute( 'id' ) ] = data;\n\n    }\n\n    function buildVisualScene( data ) {\n\n      var group = new THREE.Group();\n      group.name = data.name;\n\n      var children = data.children;\n\n      for ( var i = 0; i < children.length; i ++ ) {\n\n        var child = children[ i ];\n\n        group.add( getNode( child.id ) );\n\n      }\n\n      return group;\n\n    }\n\n    function hasVisualScene( id ) {\n\n      return library.visualScenes[ id ] !== undefined;\n\n    }\n\n    function getVisualScene( id ) {\n\n      return getBuild( library.visualScenes[ id ], buildVisualScene );\n\n    }\n\n    // scenes\n\n    function parseScene( xml ) {\n\n      var instance = getElementsByTagName( xml, 'instance_visual_scene' )[ 0 ];\n      return getVisualScene( parseId( instance.getAttribute( 'url' ) ) );\n\n    }\n\n    function setupAnimations() {\n\n      var clips = library.clips;\n\n      if ( isEmpty( clips ) === true ) {\n\n        if ( isEmpty( library.animations ) === false ) {\n\n          // if there are animations but no clips, we create a default clip for playback\n\n          var tracks = [];\n\n          for ( var id in library.animations ) {\n\n            var animationTracks = getAnimation( id );\n\n            for ( var i = 0, l = animationTracks.length; i < l; i ++ ) {\n\n              tracks.push( animationTracks[ i ] );\n\n            }\n\n          }\n\n          animations.push( new THREE.AnimationClip( 'default', - 1, tracks ) );\n\n        }\n\n      } else {\n\n        for ( var id in clips ) {\n\n          animations.push( getAnimationClip( id ) );\n\n        }\n\n      }\n\n    }\n\n    if ( text.length === 0 ) {\n\n      return { scene: new THREE.Scene() };\n\n    }\n\n    var xml = new DOMParser().parseFromString( text, 'application/xml' );\n\n    var collada = getElementsByTagName( xml, 'COLLADA' )[ 0 ];\n\n    // metadata\n\n    var version = collada.getAttribute( 'version' );\n    console.log( 'THREE.ColladaLoader: File version', version );\n\n    var asset = parseAsset( getElementsByTagName( collada, 'asset' )[ 0 ] );\n    var textureLoader = new THREE.TextureLoader( this.manager );\n    textureLoader.setPath( this.resourcePath || path ).setCrossOrigin( this.crossOrigin );\n\n    var tgaLoader;\n\n    if ( THREE.TGALoader ) {\n\n      tgaLoader = new THREE.TGALoader( this.manager );\n      tgaLoader.setPath( this.resourcePath || path );\n\n    }\n\n    //\n\n    var animations = [];\n    var kinematics = {};\n    var count = 0;\n\n    //\n\n    var library = {\n      animations: {},\n      clips: {},\n      controllers: {},\n      images: {},\n      effects: {},\n      materials: {},\n      cameras: {},\n      lights: {},\n      geometries: {},\n      nodes: {},\n      visualScenes: {},\n      kinematicsModels: {},\n      physicsModels: {},\n      kinematicsScenes: {}\n    };\n\n    parseLibrary( collada, 'library_animations', 'animation', parseAnimation );\n    parseLibrary( collada, 'library_animation_clips', 'animation_clip', parseAnimationClip );\n    parseLibrary( collada, 'library_controllers', 'controller', parseController );\n    parseLibrary( collada, 'library_images', 'image', parseImage );\n    parseLibrary( collada, 'library_effects', 'effect', parseEffect );\n    parseLibrary( collada, 'library_materials', 'material', parseMaterial );\n    parseLibrary( collada, 'library_cameras', 'camera', parseCamera );\n    parseLibrary( collada, 'library_lights', 'light', parseLight );\n    parseLibrary( collada, 'library_geometries', 'geometry', parseGeometry );\n    parseLibrary( collada, 'library_nodes', 'node', parseNode );\n    parseLibrary( collada, 'library_visual_scenes', 'visual_scene', parseVisualScene );\n    parseLibrary( collada, 'library_kinematics_models', 'kinematics_model', parseKinematicsModel );\n    parseLibrary( collada, 'library_physics_models', 'physics_model', parsePhysicsModel );\n    parseLibrary( collada, 'scene', 'instance_kinematics_scene', parseKinematicsScene );\n\n    buildLibrary( library.animations, buildAnimation );\n    buildLibrary( library.clips, buildAnimationClip );\n    buildLibrary( library.controllers, buildController );\n    buildLibrary( library.images, buildImage );\n    buildLibrary( library.effects, buildEffect );\n    buildLibrary( library.materials, buildMaterial );\n    buildLibrary( library.cameras, buildCamera );\n    buildLibrary( library.lights, buildLight );\n    buildLibrary( library.geometries, buildGeometry );\n    buildLibrary( library.visualScenes, buildVisualScene );\n\n    setupAnimations();\n    setupKinematics();\n\n    var scene = parseScene( getElementsByTagName( collada, 'scene' )[ 0 ] );\n\n    if ( asset.upAxis === 'Z_UP' ) {\n\n      scene.quaternion.setFromEuler( new THREE.Euler( - Math.PI / 2, 0, 0 ) );\n\n    }\n\n    scene.scale.multiplyScalar( asset.unit );\n\n    return {\n      animations: animations,\n      kinematics: kinematics,\n      library: library,\n      scene: scene\n    };\n\n  }\n\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/ColladaLoader.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButton.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButton.js ***!
  \************************************************************************************************/
/***/ ((module) => {

eval("module.exports = Object.assign(function GamepadButton () {}, {\n\tFACE_1: 0,\n\tFACE_2: 1,\n\tFACE_3: 2,\n\tFACE_4: 3,\n\n\tL_SHOULDER_1: 4,\n\tR_SHOULDER_1: 5,\n\tL_SHOULDER_2: 6,\n\tR_SHOULDER_2: 7,\n\n\tSELECT: 8,\n\tSTART: 9,\n\n\tDPAD_UP: 12,\n\tDPAD_DOWN: 13,\n\tDPAD_LEFT: 14,\n\tDPAD_RIGHT: 15,\n\n\tVENDOR: 16,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9saWIvR2FtZXBhZEJ1dHRvbi5qcyIsIm1hcHBpbmdzIjoiQUFBQSwyREFBMkQ7QUFDM0Q7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL2xpYi9HYW1lcGFkQnV0dG9uLmpzPzUzNDUiXSwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBPYmplY3QuYXNzaWduKGZ1bmN0aW9uIEdhbWVwYWRCdXR0b24gKCkge30sIHtcblx0RkFDRV8xOiAwLFxuXHRGQUNFXzI6IDEsXG5cdEZBQ0VfMzogMixcblx0RkFDRV80OiAzLFxuXG5cdExfU0hPVUxERVJfMTogNCxcblx0Ul9TSE9VTERFUl8xOiA1LFxuXHRMX1NIT1VMREVSXzI6IDYsXG5cdFJfU0hPVUxERVJfMjogNyxcblxuXHRTRUxFQ1Q6IDgsXG5cdFNUQVJUOiA5LFxuXG5cdERQQURfVVA6IDEyLFxuXHREUEFEX0RPV046IDEzLFxuXHREUEFEX0xFRlQ6IDE0LFxuXHREUEFEX1JJR0hUOiAxNSxcblxuXHRWRU5ET1I6IDE2LFxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButton.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButtonEvent.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButtonEvent.js ***!
  \*****************************************************************************************************/
/***/ ((module) => {

eval("function GamepadButtonEvent (type, index, details) {\n  this.type = type;\n  this.index = index;\n  this.pressed = details.pressed;\n  this.value = details.value;\n}\n\nmodule.exports = GamepadButtonEvent;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9saWIvR2FtZXBhZEJ1dHRvbkV2ZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYV9wb3N0X3NjYXJjaXR5Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2FmcmFtZS1leHRyYXNANy41LjEvbm9kZV9tb2R1bGVzL2FmcmFtZS1leHRyYXMvbGliL0dhbWVwYWRCdXR0b25FdmVudC5qcz9mNGQxIl0sInNvdXJjZXNDb250ZW50IjpbImZ1bmN0aW9uIEdhbWVwYWRCdXR0b25FdmVudCAodHlwZSwgaW5kZXgsIGRldGFpbHMpIHtcbiAgdGhpcy50eXBlID0gdHlwZTtcbiAgdGhpcy5pbmRleCA9IGluZGV4O1xuICB0aGlzLnByZXNzZWQgPSBkZXRhaWxzLnByZXNzZWQ7XG4gIHRoaXMudmFsdWUgPSBkZXRhaWxzLnZhbHVlO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IEdhbWVwYWRCdXR0b25FdmVudDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButtonEvent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/fetch-script.js":
/*!***********************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/fetch-script.js ***!
  \***********************************************************************************************/
/***/ ((module) => {

eval("/**\n * Source: https://github.com/Adobe-Marketing-Cloud/fetch-script\n */\n\nfunction getScriptId() {\n  return 'script_' + Date.now() + '_' + Math.ceil(Math.random() * 100000);\n}\n\nfunction createScript(url, id) {\n  var script = document.createElement('script');\n  script.type = 'text/javascript';\n  script.async = true;\n  script.id = id;\n  script.src = url;\n\n  return script;\n}\n\nfunction removeScript(id) {\n  const script = document.getElementById(id);\n  const parent = script.parentNode;\n\n  try {\n    parent && parent.removeChild(script);\n  } catch (e) {\n    // ignore\n  }\n}\n\nfunction appendScript(script) {\n  const firstScript = document.getElementsByTagName('script')[0];\n  firstScript.parentNode.insertBefore(script, firstScript);\n}\n\nfunction fetchScriptInternal(url, options, Promise) {\n  return new Promise(function(resolve, reject) {\n    const timeout = options.timeout || 5000;\n    const scriptId = getScriptId();\n    const script = createScript(url, scriptId);\n\n    const timeoutId = setTimeout(function() {\n      reject(new Error('Script request to ' + url + ' timed out'));\n\n      removeScript(scriptId);\n    }, timeout);\n\n    const disableTimeout = function(timeoutId) { clearTimeout(timeoutId); };\n\n    script.addEventListener('load', function(e) {\n      resolve({ok: true});\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    script.addEventListener('error', function(e) {\n      reject(new Error('Script request to ' + url + ' failed ' + e));\n\n      disableTimeout(timeoutId);\n      removeScript(scriptId);\n    });\n\n    appendScript(script);\n  });\n}\n\nfunction fetchScript(settings) {\n  settings = settings || {};\n  return function (url, options) {\n    options = options || {};\n    return fetchScriptInternal(url, options, settings.Promise || Promise);\n  };\n}\n\nmodule.exports = fetchScript;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9saWIvZmV0Y2gtc2NyaXB0LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBLEtBQUs7O0FBRUwsaURBQWlEOztBQUVqRDtBQUNBLGVBQWUsU0FBUzs7QUFFeEI7QUFDQTtBQUNBLEtBQUs7O0FBRUw7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDtBQUNBLEdBQUc7QUFDSDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYV9wb3N0X3NjYXJjaXR5Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2FmcmFtZS1leHRyYXNANy41LjEvbm9kZV9tb2R1bGVzL2FmcmFtZS1leHRyYXMvbGliL2ZldGNoLXNjcmlwdC5qcz82MjI0Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogU291cmNlOiBodHRwczovL2dpdGh1Yi5jb20vQWRvYmUtTWFya2V0aW5nLUNsb3VkL2ZldGNoLXNjcmlwdFxuICovXG5cbmZ1bmN0aW9uIGdldFNjcmlwdElkKCkge1xuICByZXR1cm4gJ3NjcmlwdF8nICsgRGF0ZS5ub3coKSArICdfJyArIE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTAwMDAwKTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlU2NyaXB0KHVybCwgaWQpIHtcbiAgdmFyIHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICBzY3JpcHQudHlwZSA9ICd0ZXh0L2phdmFzY3JpcHQnO1xuICBzY3JpcHQuYXN5bmMgPSB0cnVlO1xuICBzY3JpcHQuaWQgPSBpZDtcbiAgc2NyaXB0LnNyYyA9IHVybDtcblxuICByZXR1cm4gc2NyaXB0O1xufVxuXG5mdW5jdGlvbiByZW1vdmVTY3JpcHQoaWQpIHtcbiAgY29uc3Qgc2NyaXB0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpO1xuICBjb25zdCBwYXJlbnQgPSBzY3JpcHQucGFyZW50Tm9kZTtcblxuICB0cnkge1xuICAgIHBhcmVudCAmJiBwYXJlbnQucmVtb3ZlQ2hpbGQoc2NyaXB0KTtcbiAgfSBjYXRjaCAoZSkge1xuICAgIC8vIGlnbm9yZVxuICB9XG59XG5cbmZ1bmN0aW9uIGFwcGVuZFNjcmlwdChzY3JpcHQpIHtcbiAgY29uc3QgZmlyc3RTY3JpcHQgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgnc2NyaXB0JylbMF07XG4gIGZpcnN0U2NyaXB0LnBhcmVudE5vZGUuaW5zZXJ0QmVmb3JlKHNjcmlwdCwgZmlyc3RTY3JpcHQpO1xufVxuXG5mdW5jdGlvbiBmZXRjaFNjcmlwdEludGVybmFsKHVybCwgb3B0aW9ucywgUHJvbWlzZSkge1xuICByZXR1cm4gbmV3IFByb21pc2UoZnVuY3Rpb24ocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgY29uc3QgdGltZW91dCA9IG9wdGlvbnMudGltZW91dCB8fCA1MDAwO1xuICAgIGNvbnN0IHNjcmlwdElkID0gZ2V0U2NyaXB0SWQoKTtcbiAgICBjb25zdCBzY3JpcHQgPSBjcmVhdGVTY3JpcHQodXJsLCBzY3JpcHRJZCk7XG5cbiAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcignU2NyaXB0IHJlcXVlc3QgdG8gJyArIHVybCArICcgdGltZWQgb3V0JykpO1xuXG4gICAgICByZW1vdmVTY3JpcHQoc2NyaXB0SWQpO1xuICAgIH0sIHRpbWVvdXQpO1xuXG4gICAgY29uc3QgZGlzYWJsZVRpbWVvdXQgPSBmdW5jdGlvbih0aW1lb3V0SWQpIHsgY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCk7IH07XG5cbiAgICBzY3JpcHQuYWRkRXZlbnRMaXN0ZW5lcignbG9hZCcsIGZ1bmN0aW9uKGUpIHtcbiAgICAgIHJlc29sdmUoe29rOiB0cnVlfSk7XG5cbiAgICAgIGRpc2FibGVUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICByZW1vdmVTY3JpcHQoc2NyaXB0SWQpO1xuICAgIH0pO1xuXG4gICAgc2NyaXB0LmFkZEV2ZW50TGlzdGVuZXIoJ2Vycm9yJywgZnVuY3Rpb24oZSkge1xuICAgICAgcmVqZWN0KG5ldyBFcnJvcignU2NyaXB0IHJlcXVlc3QgdG8gJyArIHVybCArICcgZmFpbGVkICcgKyBlKSk7XG5cbiAgICAgIGRpc2FibGVUaW1lb3V0KHRpbWVvdXRJZCk7XG4gICAgICByZW1vdmVTY3JpcHQoc2NyaXB0SWQpO1xuICAgIH0pO1xuXG4gICAgYXBwZW5kU2NyaXB0KHNjcmlwdCk7XG4gIH0pO1xufVxuXG5mdW5jdGlvbiBmZXRjaFNjcmlwdChzZXR0aW5ncykge1xuICBzZXR0aW5ncyA9IHNldHRpbmdzIHx8IHt9O1xuICByZXR1cm4gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICAgIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICAgIHJldHVybiBmZXRjaFNjcmlwdEludGVybmFsKHVybCwgb3B0aW9ucywgc2V0dGluZ3MuUHJvbWlzZSB8fCBQcm9taXNlKTtcbiAgfTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBmZXRjaFNjcmlwdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/fetch-script.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/keyboard.polyfill.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/keyboard.polyfill.js ***!
  \****************************************************************************************************/
/***/ (() => {

eval("/**\n * Polyfill for the additional KeyboardEvent properties defined in the D3E and\n * D4E draft specifications, by @inexorabletash.\n *\n * See: https://github.com/inexorabletash/polyfill\n */\n(function(global) {\n  var nativeKeyboardEvent = ('KeyboardEvent' in global);\n  if (!nativeKeyboardEvent)\n    global.KeyboardEvent = function KeyboardEvent() { throw TypeError('Illegal constructor'); };\n\n  if (!('DOM_KEY_LOCATION_STANDARD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_STANDARD = 0x00; // Default or unknown location\n  if (!('DOM_KEY_LOCATION_LEFT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_LEFT          = 0x01; // e.g. Left Alt key\n  if (!('DOM_KEY_LOCATION_RIGHT' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_RIGHT         = 0x02; // e.g. Right Alt key\n  if (!('DOM_KEY_LOCATION_NUMPAD' in global.KeyboardEvent)) global.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD        = 0x03; // e.g. Numpad 0 or +\n\n  var STANDARD = window.KeyboardEvent.DOM_KEY_LOCATION_STANDARD,\n      LEFT = window.KeyboardEvent.DOM_KEY_LOCATION_LEFT,\n      RIGHT = window.KeyboardEvent.DOM_KEY_LOCATION_RIGHT,\n      NUMPAD = window.KeyboardEvent.DOM_KEY_LOCATION_NUMPAD;\n\n  //--------------------------------------------------------------------\n  //\n  // Utilities\n  //\n  //--------------------------------------------------------------------\n\n  function contains(s, ss) { return String(s).indexOf(ss) !== -1; }\n\n  var os = (function() {\n    if (contains(navigator.platform, 'Win')) { return 'win'; }\n    if (contains(navigator.platform, 'Mac')) { return 'mac'; }\n    if (contains(navigator.platform, 'CrOS')) { return 'cros'; }\n    if (contains(navigator.platform, 'Linux')) { return 'linux'; }\n    if (contains(navigator.userAgent, 'iPad') || contains(navigator.platform, 'iPod') || contains(navigator.platform, 'iPhone')) { return 'ios'; }\n    return '';\n  } ());\n\n  var browser = (function() {\n    if (contains(navigator.userAgent, 'Chrome/')) { return 'chrome'; }\n    if (contains(navigator.vendor, 'Apple')) { return 'safari'; }\n    if (contains(navigator.userAgent, 'MSIE')) { return 'ie'; }\n    if (contains(navigator.userAgent, 'Gecko/')) { return 'moz'; }\n    if (contains(navigator.userAgent, 'Opera/')) { return 'opera'; }\n    return '';\n  } ());\n\n  var browser_os = browser + '-' + os;\n\n  function mergeIf(baseTable, select, table) {\n    if (browser_os === select || browser === select || os === select) {\n      Object.keys(table).forEach(function(keyCode) {\n        baseTable[keyCode] = table[keyCode];\n      });\n    }\n  }\n\n  function remap(o, key) {\n    var r = {};\n    Object.keys(o).forEach(function(k) {\n      var item = o[k];\n      if (key in item) {\n        r[item[key]] = item;\n      }\n    });\n    return r;\n  }\n\n  function invert(o) {\n    var r = {};\n    Object.keys(o).forEach(function(k) {\n      r[o[k]] = k;\n    });\n    return r;\n  }\n\n  //--------------------------------------------------------------------\n  //\n  // Generic Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // \"keyInfo\" is a dictionary:\n  //   code: string - name from DOM Level 3 KeyboardEvent code Values\n  //     https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-code.html\n  //   location (optional): number - one of the DOM_KEY_LOCATION values\n  //   keyCap (optional): string - keyboard label in en-US locale\n  // USB code Usage ID from page 0x07 unless otherwise noted (Informative)\n\n  // Map of keyCode to keyInfo\n  var keyCodeToInfoTable = {\n    // 0x01 - VK_LBUTTON\n    // 0x02 - VK_RBUTTON\n    0x03: { code: 'Cancel' }, // [USB: 0x9b] char \\x0018 ??? (Not in D3E)\n    // 0x04 - VK_MBUTTON\n    // 0x05 - VK_XBUTTON1\n    // 0x06 - VK_XBUTTON2\n    0x06: { code: 'Help' }, // [USB: 0x75] ???\n    // 0x07 - undefined\n    0x08: { code: 'Backspace' }, // [USB: 0x2a] Labelled Delete on Macintosh keyboards.\n    0x09: { code: 'Tab' }, // [USB: 0x2b]\n    // 0x0A-0x0B - reserved\n    0X0C: { code: 'Clear' }, // [USB: 0x9c] NumPad Center (Not in D3E)\n    0X0D: { code: 'Enter' }, // [USB: 0x28]\n    // 0x0E-0x0F - undefined\n\n    0x10: { code: 'Shift' },\n    0x11: { code: 'Control' },\n    0x12: { code: 'Alt' },\n    0x13: { code: 'Pause' }, // [USB: 0x48]\n    0x14: { code: 'CapsLock' }, // [USB: 0x39]\n    0x15: { code: 'KanaMode' }, // [USB: 0x88] - \"HangulMode\" for Korean layout\n    0x16: { code: 'HangulMode' }, // [USB: 0x90] 0x15 as well in MSDN VK table ???\n    0x17: { code: 'JunjaMode' }, // (Not in D3E)\n    0x18: { code: 'FinalMode' }, // (Not in D3E)\n    0x19: { code: 'KanjiMode' }, // [USB: 0x91] - \"HanjaMode\" for Korean layout\n    // 0x1A - undefined\n    0x1B: { code: 'Escape' }, // [USB: 0x29]\n    0x1C: { code: 'Convert' }, // [USB: 0x8a]\n    0x1D: { code: 'NonConvert' }, // [USB: 0x8b]\n    0x1E: { code: 'Accept' }, // (Not in D3E)\n    0x1F: { code: 'ModeChange' }, // (Not in D3E)\n\n    0x20: { code: 'Space' }, // [USB: 0x2c]\n    0x21: { code: 'PageUp' }, // [USB: 0x4b]\n    0x22: { code: 'PageDown' }, // [USB: 0x4e]\n    0x23: { code: 'End' }, // [USB: 0x4d]\n    0x24: { code: 'Home' }, // [USB: 0x4a]\n    0x25: { code: 'ArrowLeft' }, // [USB: 0x50]\n    0x26: { code: 'ArrowUp' }, // [USB: 0x52]\n    0x27: { code: 'ArrowRight' }, // [USB: 0x4f]\n    0x28: { code: 'ArrowDown' }, // [USB: 0x51]\n    0x29: { code: 'Select' }, // (Not in D3E)\n    0x2A: { code: 'Print' }, // (Not in D3E)\n    0x2B: { code: 'Execute' }, // [USB: 0x74] (Not in D3E)\n    0x2C: { code: 'PrintScreen' }, // [USB: 0x46]\n    0x2D: { code: 'Insert' }, // [USB: 0x49]\n    0x2E: { code: 'Delete' }, // [USB: 0x4c]\n    0x2F: { code: 'Help' }, // [USB: 0x75] ???\n\n    0x30: { code: 'Digit0', keyCap: '0' }, // [USB: 0x27] 0)\n    0x31: { code: 'Digit1', keyCap: '1' }, // [USB: 0x1e] 1!\n    0x32: { code: 'Digit2', keyCap: '2' }, // [USB: 0x1f] 2@\n    0x33: { code: 'Digit3', keyCap: '3' }, // [USB: 0x20] 3#\n    0x34: { code: 'Digit4', keyCap: '4' }, // [USB: 0x21] 4$\n    0x35: { code: 'Digit5', keyCap: '5' }, // [USB: 0x22] 5%\n    0x36: { code: 'Digit6', keyCap: '6' }, // [USB: 0x23] 6^\n    0x37: { code: 'Digit7', keyCap: '7' }, // [USB: 0x24] 7&\n    0x38: { code: 'Digit8', keyCap: '8' }, // [USB: 0x25] 8*\n    0x39: { code: 'Digit9', keyCap: '9' }, // [USB: 0x26] 9(\n    // 0x3A-0x40 - undefined\n\n    0x41: { code: 'KeyA', keyCap: 'a' }, // [USB: 0x04]\n    0x42: { code: 'KeyB', keyCap: 'b' }, // [USB: 0x05]\n    0x43: { code: 'KeyC', keyCap: 'c' }, // [USB: 0x06]\n    0x44: { code: 'KeyD', keyCap: 'd' }, // [USB: 0x07]\n    0x45: { code: 'KeyE', keyCap: 'e' }, // [USB: 0x08]\n    0x46: { code: 'KeyF', keyCap: 'f' }, // [USB: 0x09]\n    0x47: { code: 'KeyG', keyCap: 'g' }, // [USB: 0x0a]\n    0x48: { code: 'KeyH', keyCap: 'h' }, // [USB: 0x0b]\n    0x49: { code: 'KeyI', keyCap: 'i' }, // [USB: 0x0c]\n    0x4A: { code: 'KeyJ', keyCap: 'j' }, // [USB: 0x0d]\n    0x4B: { code: 'KeyK', keyCap: 'k' }, // [USB: 0x0e]\n    0x4C: { code: 'KeyL', keyCap: 'l' }, // [USB: 0x0f]\n    0x4D: { code: 'KeyM', keyCap: 'm' }, // [USB: 0x10]\n    0x4E: { code: 'KeyN', keyCap: 'n' }, // [USB: 0x11]\n    0x4F: { code: 'KeyO', keyCap: 'o' }, // [USB: 0x12]\n\n    0x50: { code: 'KeyP', keyCap: 'p' }, // [USB: 0x13]\n    0x51: { code: 'KeyQ', keyCap: 'q' }, // [USB: 0x14]\n    0x52: { code: 'KeyR', keyCap: 'r' }, // [USB: 0x15]\n    0x53: { code: 'KeyS', keyCap: 's' }, // [USB: 0x16]\n    0x54: { code: 'KeyT', keyCap: 't' }, // [USB: 0x17]\n    0x55: { code: 'KeyU', keyCap: 'u' }, // [USB: 0x18]\n    0x56: { code: 'KeyV', keyCap: 'v' }, // [USB: 0x19]\n    0x57: { code: 'KeyW', keyCap: 'w' }, // [USB: 0x1a]\n    0x58: { code: 'KeyX', keyCap: 'x' }, // [USB: 0x1b]\n    0x59: { code: 'KeyY', keyCap: 'y' }, // [USB: 0x1c]\n    0x5A: { code: 'KeyZ', keyCap: 'z' }, // [USB: 0x1d]\n    0x5B: { code: 'OSLeft', location: LEFT }, // [USB: 0xe3]\n    0x5C: { code: 'OSRight', location: RIGHT }, // [USB: 0xe7]\n    0x5D: { code: 'ContextMenu' }, // [USB: 0x65] Context Menu\n    // 0x5E - reserved\n    0x5F: { code: 'Standby' }, // [USB: 0x82] Sleep\n\n    0x60: { code: 'Numpad0', keyCap: '0', location: NUMPAD }, // [USB: 0x62]\n    0x61: { code: 'Numpad1', keyCap: '1', location: NUMPAD }, // [USB: 0x59]\n    0x62: { code: 'Numpad2', keyCap: '2', location: NUMPAD }, // [USB: 0x5a]\n    0x63: { code: 'Numpad3', keyCap: '3', location: NUMPAD }, // [USB: 0x5b]\n    0x64: { code: 'Numpad4', keyCap: '4', location: NUMPAD }, // [USB: 0x5c]\n    0x65: { code: 'Numpad5', keyCap: '5', location: NUMPAD }, // [USB: 0x5d]\n    0x66: { code: 'Numpad6', keyCap: '6', location: NUMPAD }, // [USB: 0x5e]\n    0x67: { code: 'Numpad7', keyCap: '7', location: NUMPAD }, // [USB: 0x5f]\n    0x68: { code: 'Numpad8', keyCap: '8', location: NUMPAD }, // [USB: 0x60]\n    0x69: { code: 'Numpad9', keyCap: '9', location: NUMPAD }, // [USB: 0x61]\n    0x6A: { code: 'NumpadMultiply', keyCap: '*', location: NUMPAD }, // [USB: 0x55]\n    0x6B: { code: 'NumpadAdd', keyCap: '+', location: NUMPAD }, // [USB: 0x57]\n    0x6C: { code: 'NumpadComma', keyCap: ',', location: NUMPAD }, // [USB: 0x85]\n    0x6D: { code: 'NumpadSubtract', keyCap: '-', location: NUMPAD }, // [USB: 0x56]\n    0x6E: { code: 'NumpadDecimal', keyCap: '.', location: NUMPAD }, // [USB: 0x63]\n    0x6F: { code: 'NumpadDivide', keyCap: '/', location: NUMPAD }, // [USB: 0x54]\n\n    0x70: { code: 'F1' }, // [USB: 0x3a]\n    0x71: { code: 'F2' }, // [USB: 0x3b]\n    0x72: { code: 'F3' }, // [USB: 0x3c]\n    0x73: { code: 'F4' }, // [USB: 0x3d]\n    0x74: { code: 'F5' }, // [USB: 0x3e]\n    0x75: { code: 'F6' }, // [USB: 0x3f]\n    0x76: { code: 'F7' }, // [USB: 0x40]\n    0x77: { code: 'F8' }, // [USB: 0x41]\n    0x78: { code: 'F9' }, // [USB: 0x42]\n    0x79: { code: 'F10' }, // [USB: 0x43]\n    0x7A: { code: 'F11' }, // [USB: 0x44]\n    0x7B: { code: 'F12' }, // [USB: 0x45]\n    0x7C: { code: 'F13' }, // [USB: 0x68]\n    0x7D: { code: 'F14' }, // [USB: 0x69]\n    0x7E: { code: 'F15' }, // [USB: 0x6a]\n    0x7F: { code: 'F16' }, // [USB: 0x6b]\n\n    0x80: { code: 'F17' }, // [USB: 0x6c]\n    0x81: { code: 'F18' }, // [USB: 0x6d]\n    0x82: { code: 'F19' }, // [USB: 0x6e]\n    0x83: { code: 'F20' }, // [USB: 0x6f]\n    0x84: { code: 'F21' }, // [USB: 0x70]\n    0x85: { code: 'F22' }, // [USB: 0x71]\n    0x86: { code: 'F23' }, // [USB: 0x72]\n    0x87: { code: 'F24' }, // [USB: 0x73]\n    // 0x88-0x8F - unassigned\n\n    0x90: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n    0x91: { code: 'ScrollLock' }, // [USB: 0x47]\n    // 0x92-0x96 - OEM specific\n    // 0x97-0x9F - unassigned\n\n    // NOTE: 0xA0-0xA5 usually mapped to 0x10-0x12 in browsers\n    0xA0: { code: 'ShiftLeft', location: LEFT }, // [USB: 0xe1]\n    0xA1: { code: 'ShiftRight', location: RIGHT }, // [USB: 0xe5]\n    0xA2: { code: 'ControlLeft', location: LEFT }, // [USB: 0xe0]\n    0xA3: { code: 'ControlRight', location: RIGHT }, // [USB: 0xe4]\n    0xA4: { code: 'AltLeft', location: LEFT }, // [USB: 0xe2]\n    0xA5: { code: 'AltRight', location: RIGHT }, // [USB: 0xe6]\n\n    0xA6: { code: 'BrowserBack' }, // [USB: 0x0c/0x0224]\n    0xA7: { code: 'BrowserForward' }, // [USB: 0x0c/0x0225]\n    0xA8: { code: 'BrowserRefresh' }, // [USB: 0x0c/0x0227]\n    0xA9: { code: 'BrowserStop' }, // [USB: 0x0c/0x0226]\n    0xAA: { code: 'BrowserSearch' }, // [USB: 0x0c/0x0221]\n    0xAB: { code: 'BrowserFavorites' }, // [USB: 0x0c/0x0228]\n    0xAC: { code: 'BrowserHome' }, // [USB: 0x0c/0x0222]\n    0xAD: { code: 'VolumeMute' }, // [USB: 0x7f]\n    0xAE: { code: 'VolumeDown' }, // [USB: 0x81]\n    0xAF: { code: 'VolumeUp' }, // [USB: 0x80]\n\n    0xB0: { code: 'MediaTrackNext' }, // [USB: 0x0c/0x00b5]\n    0xB1: { code: 'MediaTrackPrevious' }, // [USB: 0x0c/0x00b6]\n    0xB2: { code: 'MediaStop' }, // [USB: 0x0c/0x00b7]\n    0xB3: { code: 'MediaPlayPause' }, // [USB: 0x0c/0x00cd]\n    0xB4: { code: 'LaunchMail' }, // [USB: 0x0c/0x018a]\n    0xB5: { code: 'MediaSelect' },\n    0xB6: { code: 'LaunchApp1' },\n    0xB7: { code: 'LaunchApp2' },\n    // 0xB8-0xB9 - reserved\n    0xBA: { code: 'Semicolon',  keyCap: ';' }, // [USB: 0x33] ;: (US Standard 101)\n    0xBB: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n    0xBC: { code: 'Comma', keyCap: ',' }, // [USB: 0x36] ,<\n    0xBD: { code: 'Minus', keyCap: '-' }, // [USB: 0x2d] -_\n    0xBE: { code: 'Period', keyCap: '.' }, // [USB: 0x37] .>\n    0xBF: { code: 'Slash', keyCap: '/' }, // [USB: 0x38] /? (US Standard 101)\n\n    0xC0: { code: 'Backquote', keyCap: '`' }, // [USB: 0x35] `~ (US Standard 101)\n    // 0xC1-0xCF - reserved\n\n    // 0xD0-0xD7 - reserved\n    // 0xD8-0xDA - unassigned\n    0xDB: { code: 'BracketLeft', keyCap: '[' }, // [USB: 0x2f] [{ (US Standard 101)\n    0xDC: { code: 'Backslash',  keyCap: '\\\\' }, // [USB: 0x31] \\| (US Standard 101)\n    0xDD: { code: 'BracketRight', keyCap: ']' }, // [USB: 0x30] ]} (US Standard 101)\n    0xDE: { code: 'Quote', keyCap: '\\'' }, // [USB: 0x34] '\" (US Standard 101)\n    // 0xDF - miscellaneous/varies\n\n    // 0xE0 - reserved\n    // 0xE1 - OEM specific\n    0xE2: { code: 'IntlBackslash',  keyCap: '\\\\' }, // [USB: 0x64] \\| (UK Standard 102)\n    // 0xE3-0xE4 - OEM specific\n    0xE5: { code: 'Process' }, // (Not in D3E)\n    // 0xE6 - OEM specific\n    // 0xE7 - VK_PACKET\n    // 0xE8 - unassigned\n    // 0xE9-0xEF - OEM specific\n\n    // 0xF0-0xF5 - OEM specific\n    0xF6: { code: 'Attn' }, // [USB: 0x9a] (Not in D3E)\n    0xF7: { code: 'CrSel' }, // [USB: 0xa3] (Not in D3E)\n    0xF8: { code: 'ExSel' }, // [USB: 0xa4] (Not in D3E)\n    0xF9: { code: 'EraseEof' }, // (Not in D3E)\n    0xFA: { code: 'Play' }, // (Not in D3E)\n    0xFB: { code: 'ZoomToggle' }, // (Not in D3E)\n    // 0xFC - VK_NONAME - reserved\n    // 0xFD - VK_PA1\n    0xFE: { code: 'Clear' } // [USB: 0x9c] (Not in D3E)\n  };\n\n  // No legacy keyCode, but listed in D3E:\n\n  // code: usb\n  // 'IntlHash': 0x070032,\n  // 'IntlRo': 0x070087,\n  // 'IntlYen': 0x070089,\n  // 'NumpadBackspace': 0x0700bb,\n  // 'NumpadClear': 0x0700d8,\n  // 'NumpadClearEntry': 0x0700d9,\n  // 'NumpadMemoryAdd': 0x0700d3,\n  // 'NumpadMemoryClear': 0x0700d2,\n  // 'NumpadMemoryRecall': 0x0700d1,\n  // 'NumpadMemoryStore': 0x0700d0,\n  // 'NumpadMemorySubtract': 0x0700d4,\n  // 'NumpadParenLeft': 0x0700b6,\n  // 'NumpadParenRight': 0x0700b7,\n\n  //--------------------------------------------------------------------\n  //\n  // Browser/OS Specific Mappings\n  //\n  //--------------------------------------------------------------------\n\n  mergeIf(keyCodeToInfoTable,\n          'moz', {\n            0x3B: { code: 'Semicolon', keyCap: ';' }, // [USB: 0x33] ;: (US Standard 101)\n            0x3D: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n            0x6B: { code: 'Equal', keyCap: '=' }, // [USB: 0x2e] =+\n            0x6D: { code: 'Minus', keyCap: '-' }, // [USB: 0x2d] -_\n            0xBB: { code: 'NumpadAdd', keyCap: '+', location: NUMPAD }, // [USB: 0x57]\n            0xBD: { code: 'NumpadSubtract', keyCap: '-', location: NUMPAD } // [USB: 0x56]\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'moz-mac', {\n            0x0C: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n            0xAD: { code: 'Minus', keyCap: '-' } // [USB: 0x2d] -_\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'moz-win', {\n            0xAD: { code: 'Minus', keyCap: '-' } // [USB: 0x2d] -_\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'chrome-mac', {\n            0x5D: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n          });\n\n  // Windows via Bootcamp (!)\n  if (false) {}\n\n  mergeIf(keyCodeToInfoTable,\n          'safari', {\n            0x03: { code: 'Enter' }, // [USB: 0x28] old Safari\n            0x19: { code: 'Tab' } // [USB: 0x2b] old Safari for Shift+Tab\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'ios', {\n            0x0A: { code: 'Enter', location: STANDARD } // [USB: 0x28]\n          });\n\n  mergeIf(keyCodeToInfoTable,\n          'safari-mac', {\n            0x5B: { code: 'OSLeft', location: LEFT }, // [USB: 0xe3]\n            0x5D: { code: 'OSRight', location: RIGHT }, // [USB: 0xe7]\n            0xE5: { code: 'KeyQ', keyCap: 'Q' } // [USB: 0x14] On alternate presses, Ctrl+Q sends this\n          });\n\n  //--------------------------------------------------------------------\n  //\n  // Identifier Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // Cases where newer-ish browsers send keyIdentifier which can be\n  // used to disambiguate keys.\n\n  // keyIdentifierTable[keyIdentifier] -> keyInfo\n\n  var keyIdentifierTable = {};\n  if ('cros' === os) {\n    keyIdentifierTable['U+00A0'] = { code: 'ShiftLeft', location: LEFT };\n    keyIdentifierTable['U+00A1'] = { code: 'ShiftRight', location: RIGHT };\n    keyIdentifierTable['U+00A2'] = { code: 'ControlLeft', location: LEFT };\n    keyIdentifierTable['U+00A3'] = { code: 'ControlRight', location: RIGHT };\n    keyIdentifierTable['U+00A4'] = { code: 'AltLeft', location: LEFT };\n    keyIdentifierTable['U+00A5'] = { code: 'AltRight', location: RIGHT };\n  }\n  if ('chrome-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = { code: 'ContextMenu' };\n  }\n  if ('safari-mac' === browser_os) {\n    keyIdentifierTable['U+0010'] = { code: 'ContextMenu' };\n  }\n  if ('ios' === os) {\n    // These only generate keyup events\n    keyIdentifierTable['U+0010'] = { code: 'Function' };\n\n    keyIdentifierTable['U+001C'] = { code: 'ArrowLeft' };\n    keyIdentifierTable['U+001D'] = { code: 'ArrowRight' };\n    keyIdentifierTable['U+001E'] = { code: 'ArrowUp' };\n    keyIdentifierTable['U+001F'] = { code: 'ArrowDown' };\n\n    keyIdentifierTable['U+0001'] = { code: 'Home' }; // [USB: 0x4a] Fn + ArrowLeft\n    keyIdentifierTable['U+0004'] = { code: 'End' }; // [USB: 0x4d] Fn + ArrowRight\n    keyIdentifierTable['U+000B'] = { code: 'PageUp' }; // [USB: 0x4b] Fn + ArrowUp\n    keyIdentifierTable['U+000C'] = { code: 'PageDown' }; // [USB: 0x4e] Fn + ArrowDown\n  }\n\n  //--------------------------------------------------------------------\n  //\n  // Location Mappings\n  //\n  //--------------------------------------------------------------------\n\n  // Cases where newer-ish browsers send location/keyLocation which\n  // can be used to disambiguate keys.\n\n  // locationTable[location][keyCode] -> keyInfo\n  var locationTable = [];\n  locationTable[LEFT] = {\n    0x10: { code: 'ShiftLeft', location: LEFT }, // [USB: 0xe1]\n    0x11: { code: 'ControlLeft', location: LEFT }, // [USB: 0xe0]\n    0x12: { code: 'AltLeft', location: LEFT } // [USB: 0xe2]\n  };\n  locationTable[RIGHT] = {\n    0x10: { code: 'ShiftRight', location: RIGHT }, // [USB: 0xe5]\n    0x11: { code: 'ControlRight', location: RIGHT }, // [USB: 0xe4]\n    0x12: { code: 'AltRight', location: RIGHT } // [USB: 0xe6]\n  };\n  locationTable[NUMPAD] = {\n    0x0D: { code: 'NumpadEnter', location: NUMPAD } // [USB: 0x58]\n  };\n\n  mergeIf(locationTable[NUMPAD], 'moz', {\n    0x6D: { code: 'NumpadSubtract', location: NUMPAD }, // [USB: 0x56]\n    0x6B: { code: 'NumpadAdd', location: NUMPAD } // [USB: 0x57]\n  });\n  mergeIf(locationTable[LEFT], 'moz-mac', {\n    0xE0: { code: 'OSLeft', location: LEFT } // [USB: 0xe3]\n  });\n  mergeIf(locationTable[RIGHT], 'moz-mac', {\n    0xE0: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n  mergeIf(locationTable[RIGHT], 'moz-win', {\n    0x5B: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n\n\n  mergeIf(locationTable[RIGHT], 'mac', {\n    0x5D: { code: 'OSRight', location: RIGHT } // [USB: 0xe7]\n  });\n\n  mergeIf(locationTable[NUMPAD], 'chrome-mac', {\n    0x0C: { code: 'NumLock', location: NUMPAD } // [USB: 0x53]\n  });\n\n  mergeIf(locationTable[NUMPAD], 'safari-mac', {\n    0x0C: { code: 'NumLock', location: NUMPAD }, // [USB: 0x53]\n    0xBB: { code: 'NumpadAdd', location: NUMPAD }, // [USB: 0x57]\n    0xBD: { code: 'NumpadSubtract', location: NUMPAD }, // [USB: 0x56]\n    0xBE: { code: 'NumpadDecimal', location: NUMPAD }, // [USB: 0x63]\n    0xBF: { code: 'NumpadDivide', location: NUMPAD } // [USB: 0x54]\n  });\n\n\n  //--------------------------------------------------------------------\n  //\n  // Key Values\n  //\n  //--------------------------------------------------------------------\n\n  // Mapping from `code` values to `key` values. Values defined at:\n  // https://dvcs.w3.org/hg/dom3events/raw-file/tip/html/DOM3Events-key.html\n  // Entries are only provided when `key` differs from `code`. If\n  // printable, `shiftKey` has the shifted printable character. This\n  // assumes US Standard 101 layout\n\n  var codeToKeyTable = {\n    // Modifier Keys\n    ShiftLeft: { key: 'Shift' },\n    ShiftRight: { key: 'Shift' },\n    ControlLeft: { key: 'Control' },\n    ControlRight: { key: 'Control' },\n    AltLeft: { key: 'Alt' },\n    AltRight: { key: 'Alt' },\n    OSLeft: { key: 'OS' },\n    OSRight: { key: 'OS' },\n\n    // Whitespace Keys\n    NumpadEnter: { key: 'Enter' },\n    Space: { key: ' ' },\n\n    // Printable Keys\n    Digit0: { key: '0', shiftKey: ')' },\n    Digit1: { key: '1', shiftKey: '!' },\n    Digit2: { key: '2', shiftKey: '@' },\n    Digit3: { key: '3', shiftKey: '#' },\n    Digit4: { key: '4', shiftKey: '$' },\n    Digit5: { key: '5', shiftKey: '%' },\n    Digit6: { key: '6', shiftKey: '^' },\n    Digit7: { key: '7', shiftKey: '&' },\n    Digit8: { key: '8', shiftKey: '*' },\n    Digit9: { key: '9', shiftKey: '(' },\n    KeyA: { key: 'a', shiftKey: 'A' },\n    KeyB: { key: 'b', shiftKey: 'B' },\n    KeyC: { key: 'c', shiftKey: 'C' },\n    KeyD: { key: 'd', shiftKey: 'D' },\n    KeyE: { key: 'e', shiftKey: 'E' },\n    KeyF: { key: 'f', shiftKey: 'F' },\n    KeyG: { key: 'g', shiftKey: 'G' },\n    KeyH: { key: 'h', shiftKey: 'H' },\n    KeyI: { key: 'i', shiftKey: 'I' },\n    KeyJ: { key: 'j', shiftKey: 'J' },\n    KeyK: { key: 'k', shiftKey: 'K' },\n    KeyL: { key: 'l', shiftKey: 'L' },\n    KeyM: { key: 'm', shiftKey: 'M' },\n    KeyN: { key: 'n', shiftKey: 'N' },\n    KeyO: { key: 'o', shiftKey: 'O' },\n    KeyP: { key: 'p', shiftKey: 'P' },\n    KeyQ: { key: 'q', shiftKey: 'Q' },\n    KeyR: { key: 'r', shiftKey: 'R' },\n    KeyS: { key: 's', shiftKey: 'S' },\n    KeyT: { key: 't', shiftKey: 'T' },\n    KeyU: { key: 'u', shiftKey: 'U' },\n    KeyV: { key: 'v', shiftKey: 'V' },\n    KeyW: { key: 'w', shiftKey: 'W' },\n    KeyX: { key: 'x', shiftKey: 'X' },\n    KeyY: { key: 'y', shiftKey: 'Y' },\n    KeyZ: { key: 'z', shiftKey: 'Z' },\n    Numpad0: { key: '0' },\n    Numpad1: { key: '1' },\n    Numpad2: { key: '2' },\n    Numpad3: { key: '3' },\n    Numpad4: { key: '4' },\n    Numpad5: { key: '5' },\n    Numpad6: { key: '6' },\n    Numpad7: { key: '7' },\n    Numpad8: { key: '8' },\n    Numpad9: { key: '9' },\n    NumpadMultiply: { key: '*' },\n    NumpadAdd: { key: '+' },\n    NumpadComma: { key: ',' },\n    NumpadSubtract: { key: '-' },\n    NumpadDecimal: { key: '.' },\n    NumpadDivide: { key: '/' },\n    Semicolon: { key: ';', shiftKey: ':' },\n    Equal: { key: '=', shiftKey: '+' },\n    Comma: { key: ',', shiftKey: '<' },\n    Minus: { key: '-', shiftKey: '_' },\n    Period: { key: '.', shiftKey: '>' },\n    Slash: { key: '/', shiftKey: '?' },\n    Backquote: { key: '`', shiftKey: '~' },\n    BracketLeft: { key: '[', shiftKey: '{' },\n    Backslash: { key: '\\\\', shiftKey: '|' },\n    BracketRight: { key: ']', shiftKey: '}' },\n    Quote: { key: '\\'', shiftKey: '\"' },\n    IntlBackslash: { key: '\\\\', shiftKey: '|' }\n  };\n\n  mergeIf(codeToKeyTable, 'mac', {\n    OSLeft: { key: 'Meta' },\n    OSRight: { key: 'Meta' }\n  });\n\n  // Corrections for 'key' names in older browsers (e.g. FF36-)\n  // https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent.key#Key_values\n  var keyFixTable = {\n    Esc: 'Escape',\n    Nonconvert: 'NonConvert',\n    Left: 'ArrowLeft',\n    Up: 'ArrowUp',\n    Right: 'ArrowRight',\n    Down: 'ArrowDown',\n    Del: 'Delete',\n    Menu: 'ContextMenu',\n    MediaNextTrack: 'MediaTrackNext',\n    MediaPreviousTrack: 'MediaTrackPrevious',\n    SelectMedia: 'MediaSelect',\n    HalfWidth: 'Hankaku',\n    FullWidth: 'Zenkaku',\n    RomanCharacters: 'Romaji',\n    Crsel: 'CrSel',\n    Exsel: 'ExSel',\n    Zoom: 'ZoomToggle'\n  };\n\n  //--------------------------------------------------------------------\n  //\n  // Exported Functions\n  //\n  //--------------------------------------------------------------------\n\n\n  var codeTable = remap(keyCodeToInfoTable, 'code');\n\n  try {\n    var nativeLocation = nativeKeyboardEvent && ('location' in new KeyboardEvent(''));\n  } catch (_) {}\n\n  function keyInfoForEvent(event) {\n    var keyCode = 'keyCode' in event ? event.keyCode : 'which' in event ? event.which : 0;\n\n    var keyInfo = (function(){\n      if (nativeLocation || 'keyLocation' in event) {\n        var location = nativeLocation ? event.location : event.keyLocation;\n        if (location && keyCode in locationTable[location]) {\n          return locationTable[location][keyCode];\n        }\n      }\n      if ('keyIdentifier' in event && event.keyIdentifier in keyIdentifierTable) {\n        return keyIdentifierTable[event.keyIdentifier];\n      }\n      if (keyCode in keyCodeToInfoTable) {\n        return keyCodeToInfoTable[keyCode];\n      }\n      return null;\n    }());\n\n    // TODO: Track these down and move to general tables\n    if (false) {}\n\n    if (!keyInfo)\n      return null;\n\n    var key = (function() {\n      var entry = codeToKeyTable[keyInfo.code];\n      if (!entry) return keyInfo.code;\n      return (event.shiftKey && 'shiftKey' in entry) ? entry.shiftKey : entry.key;\n    }());\n\n    return {\n      code: keyInfo.code,\n      key: key,\n      location: keyInfo.location,\n      keyCap: keyInfo.keyCap\n    };\n  }\n\n  function queryKeyCap(code, locale) {\n    code = String(code);\n    if (!codeTable.hasOwnProperty(code)) return 'Undefined';\n    if (locale && String(locale).toLowerCase() !== 'en-us') throw Error('Unsupported locale');\n    var keyInfo = codeTable[code];\n    return keyInfo.keyCap || keyInfo.code || 'Undefined';\n  }\n\n  if ('KeyboardEvent' in global && 'defineProperty' in Object) {\n    (function() {\n      function define(o, p, v) {\n        if (p in o) return;\n        Object.defineProperty(o, p, v);\n      }\n\n      define(KeyboardEvent.prototype, 'code', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return keyInfo ? keyInfo.code : '';\n      }});\n\n      // Fix for nonstandard `key` values (FF36-)\n      if ('key' in KeyboardEvent.prototype) {\n        var desc = Object.getOwnPropertyDescriptor(KeyboardEvent.prototype, 'key');\n        Object.defineProperty(KeyboardEvent.prototype, 'key', { get: function() {\n          var key = desc.get.call(this);\n          return keyFixTable.hasOwnProperty(key) ? keyFixTable[key] : key;\n        }});\n      }\n\n      define(KeyboardEvent.prototype, 'key', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return (keyInfo && 'key' in keyInfo) ? keyInfo.key : 'Unidentified';\n      }});\n\n      define(KeyboardEvent.prototype, 'location', { get: function() {\n        var keyInfo = keyInfoForEvent(this);\n        return (keyInfo && 'location' in keyInfo) ? keyInfo.location : STANDARD;\n      }});\n\n      define(KeyboardEvent.prototype, 'locale', { get: function() {\n        return '';\n      }});\n    }());\n  }\n\n  if (!('queryKeyCap' in global.KeyboardEvent))\n    global.KeyboardEvent.queryKeyCap = queryKeyCap;\n\n  // Helper for IE8-\n  global.identifyKey = function(event) {\n    if ('code' in event)\n      return;\n\n    var keyInfo = keyInfoForEvent(event);\n    event.code = keyInfo ? keyInfo.code : '';\n    event.key = (keyInfo && 'key' in keyInfo) ? keyInfo.key : 'Unidentified';\n    event.location = ('location' in event) ? event.location :\n      ('keyLocation' in event) ? event.keyLocation :\n      (keyInfo && 'location' in keyInfo) ? keyInfo.location : STANDARD;\n    event.locale = '';\n  };\n\n} (window));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/keyboard.polyfill.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/checkpoint-controls.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/checkpoint-controls.js ***!
  \***************************************************************************************************************/
/***/ ((module) => {

eval("const EPS = 0.1;\n\nmodule.exports = AFRAME.registerComponent('checkpoint-controls', {\n  schema: {\n    enabled: {default: true},\n    mode: {default: 'teleport', oneOf: ['teleport', 'animate']},\n    animateSpeed: {default: 3.0}\n  },\n\n  init: function () {\n    this.active = true;\n    this.checkpoint = null;\n\n    this.isNavMeshConstrained = false;\n\n    this.offset = new THREE.Vector3();\n    this.position = new THREE.Vector3();\n    this.targetPosition = new THREE.Vector3();\n  },\n\n  play: function () { this.active = true; },\n  pause: function () { this.active = false; },\n\n  setCheckpoint: function (checkpoint) {\n    const el = this.el;\n\n    if (!this.active) return;\n    if (this.checkpoint === checkpoint) return;\n\n    if (this.checkpoint) {\n      el.emit('navigation-end', {checkpoint: this.checkpoint});\n    }\n\n    this.checkpoint = checkpoint;\n    this.sync();\n\n    // Ignore new checkpoint if we're already there.\n    if (this.position.distanceTo(this.targetPosition) < EPS) {\n      this.checkpoint = null;\n      return;\n    }\n\n    el.emit('navigation-start', {checkpoint: checkpoint});\n\n    if (this.data.mode === 'teleport') {\n      this.el.setAttribute('position', this.targetPosition);\n      this.checkpoint = null;\n      el.emit('navigation-end', {checkpoint: checkpoint});\n      el.components['movement-controls'].updateNavLocation();\n    }\n  },\n\n  isVelocityActive: function () {\n    return !!(this.active && this.checkpoint);\n  },\n\n  getVelocity: function () {\n    if (!this.active) return;\n\n    const data = this.data;\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n    const checkpoint = this.checkpoint;\n\n    this.sync();\n    if (position.distanceTo(targetPosition) < EPS) {\n      this.checkpoint = null;\n      this.el.emit('navigation-end', {checkpoint: checkpoint});\n      return offset.set(0, 0, 0);\n    }\n    offset.setLength(data.animateSpeed);\n    return offset;\n  },\n\n  sync: function () {\n    const offset = this.offset;\n    const position = this.position;\n    const targetPosition = this.targetPosition;\n\n    position.copy(this.el.getAttribute('position'));\n    this.checkpoint.object3D.getWorldPosition(targetPosition);\n    targetPosition.add(this.checkpoint.components.checkpoint.getOffset());\n    offset.copy(targetPosition).sub(position);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvY29udHJvbHMvY2hlY2twb2ludC1jb250cm9scy5qcyIsIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTtBQUNBO0FBQ0EsY0FBYyxjQUFjO0FBQzVCLFdBQVcsb0RBQW9EO0FBQy9ELG1CQUFtQjtBQUNuQixHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVILHNCQUFzQixxQkFBcUI7QUFDM0MsdUJBQXVCLHNCQUFzQjs7QUFFN0M7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0EsaUNBQWlDLDRCQUE0QjtBQUM3RDs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsaUNBQWlDLHVCQUF1Qjs7QUFFeEQ7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLHVCQUF1QjtBQUN4RDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0Esc0NBQXNDLHVCQUF1QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9jb250cm9scy9jaGVja3BvaW50LWNvbnRyb2xzLmpzP2I4MTEiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgRVBTID0gMC4xO1xuXG5tb2R1bGUuZXhwb3J0cyA9IEFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgnY2hlY2twb2ludC1jb250cm9scycsIHtcbiAgc2NoZW1hOiB7XG4gICAgZW5hYmxlZDoge2RlZmF1bHQ6IHRydWV9LFxuICAgIG1vZGU6IHtkZWZhdWx0OiAndGVsZXBvcnQnLCBvbmVPZjogWyd0ZWxlcG9ydCcsICdhbmltYXRlJ119LFxuICAgIGFuaW1hdGVTcGVlZDoge2RlZmF1bHQ6IDMuMH1cbiAgfSxcblxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5hY3RpdmUgPSB0cnVlO1xuICAgIHRoaXMuY2hlY2twb2ludCA9IG51bGw7XG5cbiAgICB0aGlzLmlzTmF2TWVzaENvbnN0cmFpbmVkID0gZmFsc2U7XG5cbiAgICB0aGlzLm9mZnNldCA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gICAgdGhpcy5wb3NpdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gICAgdGhpcy50YXJnZXRQb3NpdGlvbiA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gIH0sXG5cbiAgcGxheTogZnVuY3Rpb24gKCkgeyB0aGlzLmFjdGl2ZSA9IHRydWU7IH0sXG4gIHBhdXNlOiBmdW5jdGlvbiAoKSB7IHRoaXMuYWN0aXZlID0gZmFsc2U7IH0sXG5cbiAgc2V0Q2hlY2twb2ludDogZnVuY3Rpb24gKGNoZWNrcG9pbnQpIHtcbiAgICBjb25zdCBlbCA9IHRoaXMuZWw7XG5cbiAgICBpZiAoIXRoaXMuYWN0aXZlKSByZXR1cm47XG4gICAgaWYgKHRoaXMuY2hlY2twb2ludCA9PT0gY2hlY2twb2ludCkgcmV0dXJuO1xuXG4gICAgaWYgKHRoaXMuY2hlY2twb2ludCkge1xuICAgICAgZWwuZW1pdCgnbmF2aWdhdGlvbi1lbmQnLCB7Y2hlY2twb2ludDogdGhpcy5jaGVja3BvaW50fSk7XG4gICAgfVxuXG4gICAgdGhpcy5jaGVja3BvaW50ID0gY2hlY2twb2ludDtcbiAgICB0aGlzLnN5bmMoKTtcblxuICAgIC8vIElnbm9yZSBuZXcgY2hlY2twb2ludCBpZiB3ZSdyZSBhbHJlYWR5IHRoZXJlLlxuICAgIGlmICh0aGlzLnBvc2l0aW9uLmRpc3RhbmNlVG8odGhpcy50YXJnZXRQb3NpdGlvbikgPCBFUFMpIHtcbiAgICAgIHRoaXMuY2hlY2twb2ludCA9IG51bGw7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgZWwuZW1pdCgnbmF2aWdhdGlvbi1zdGFydCcsIHtjaGVja3BvaW50OiBjaGVja3BvaW50fSk7XG5cbiAgICBpZiAodGhpcy5kYXRhLm1vZGUgPT09ICd0ZWxlcG9ydCcpIHtcbiAgICAgIHRoaXMuZWwuc2V0QXR0cmlidXRlKCdwb3NpdGlvbicsIHRoaXMudGFyZ2V0UG9zaXRpb24pO1xuICAgICAgdGhpcy5jaGVja3BvaW50ID0gbnVsbDtcbiAgICAgIGVsLmVtaXQoJ25hdmlnYXRpb24tZW5kJywge2NoZWNrcG9pbnQ6IGNoZWNrcG9pbnR9KTtcbiAgICAgIGVsLmNvbXBvbmVudHNbJ21vdmVtZW50LWNvbnRyb2xzJ10udXBkYXRlTmF2TG9jYXRpb24oKTtcbiAgICB9XG4gIH0sXG5cbiAgaXNWZWxvY2l0eUFjdGl2ZTogZnVuY3Rpb24gKCkge1xuICAgIHJldHVybiAhISh0aGlzLmFjdGl2ZSAmJiB0aGlzLmNoZWNrcG9pbnQpO1xuICB9LFxuXG4gIGdldFZlbG9jaXR5OiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCF0aGlzLmFjdGl2ZSkgcmV0dXJuO1xuXG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldDtcbiAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMucG9zaXRpb247XG4gICAgY29uc3QgdGFyZ2V0UG9zaXRpb24gPSB0aGlzLnRhcmdldFBvc2l0aW9uO1xuICAgIGNvbnN0IGNoZWNrcG9pbnQgPSB0aGlzLmNoZWNrcG9pbnQ7XG5cbiAgICB0aGlzLnN5bmMoKTtcbiAgICBpZiAocG9zaXRpb24uZGlzdGFuY2VUbyh0YXJnZXRQb3NpdGlvbikgPCBFUFMpIHtcbiAgICAgIHRoaXMuY2hlY2twb2ludCA9IG51bGw7XG4gICAgICB0aGlzLmVsLmVtaXQoJ25hdmlnYXRpb24tZW5kJywge2NoZWNrcG9pbnQ6IGNoZWNrcG9pbnR9KTtcbiAgICAgIHJldHVybiBvZmZzZXQuc2V0KDAsIDAsIDApO1xuICAgIH1cbiAgICBvZmZzZXQuc2V0TGVuZ3RoKGRhdGEuYW5pbWF0ZVNwZWVkKTtcbiAgICByZXR1cm4gb2Zmc2V0O1xuICB9LFxuXG4gIHN5bmM6IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBvZmZzZXQgPSB0aGlzLm9mZnNldDtcbiAgICBjb25zdCBwb3NpdGlvbiA9IHRoaXMucG9zaXRpb247XG4gICAgY29uc3QgdGFyZ2V0UG9zaXRpb24gPSB0aGlzLnRhcmdldFBvc2l0aW9uO1xuXG4gICAgcG9zaXRpb24uY29weSh0aGlzLmVsLmdldEF0dHJpYnV0ZSgncG9zaXRpb24nKSk7XG4gICAgdGhpcy5jaGVja3BvaW50Lm9iamVjdDNELmdldFdvcmxkUG9zaXRpb24odGFyZ2V0UG9zaXRpb24pO1xuICAgIHRhcmdldFBvc2l0aW9uLmFkZCh0aGlzLmNoZWNrcG9pbnQuY29tcG9uZW50cy5jaGVja3BvaW50LmdldE9mZnNldCgpKTtcbiAgICBvZmZzZXQuY29weSh0YXJnZXRQb3NpdGlvbikuc3ViKHBvc2l0aW9uKTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/checkpoint-controls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/gamepad-controls.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/gamepad-controls.js ***!
  \************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/**\n * Gamepad controls for A-Frame.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-gamepad-controls\n *\n * For more information about the Gamepad API, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/Gamepad_API/Using_the_Gamepad_API\n */\n\nconst GamepadButton = __webpack_require__(/*! ../../lib/GamepadButton */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButton.js\"),\n    GamepadButtonEvent = __webpack_require__(/*! ../../lib/GamepadButtonEvent */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/GamepadButtonEvent.js\");\n\nconst JOYSTICK_EPS = 0.2;\n\nconst Hand = {\n  LEFT: 'left',\n  RIGHT: 'right'\n};\n\nconst Joystick = {\n  MOVEMENT: 1,\n  ROTATION: 2\n};\n\nmodule.exports = AFRAME.registerComponent('gamepad-controls', {\n\n  /*******************************************************************\n   * Statics\n   */\n\n  GamepadButton: GamepadButton,\n\n  /*******************************************************************\n   * Schema\n   */\n\n  schema: {\n    // Enable/disable gamepad-controls\n    enabled: { default: true },\n\n    // Rotation sensitivity\n    rotationSensitivity: { default: 2.0 },\n  },\n\n  /*******************************************************************\n   * Core\n   */\n\n  /**\n   * Called once when component is attached. Generally for initial setup.\n   */\n  init: function () {\n    const sceneEl = this.el.sceneEl;\n\n    this.system = sceneEl.systems['tracked-controls-webxr'] || {controllers: []};\n\n    this.prevTime = window.performance.now();\n\n    // Button state\n    this.buttons = {};\n\n    // Rotation\n    const rotation = this.el.object3D.rotation;\n    this.pitch = new THREE.Object3D();\n    this.pitch.rotation.x = rotation.x;\n    this.yaw = new THREE.Object3D();\n    this.yaw.position.y = 10;\n    this.yaw.rotation.y = rotation.y;\n    this.yaw.add(this.pitch);\n\n    this._lookVector = new THREE.Vector2();\n    this._moveVector = new THREE.Vector2();\n    this._dpadVector = new THREE.Vector2();\n\n    sceneEl.addBehavior(this);\n  },\n\n  /**\n   * Called when component is attached and when component data changes.\n   * Generally modifies the entity based on the data.\n   */\n  update: function () { this.tick(); },\n\n  /**\n   * Called on each iteration of main render loop.\n   */\n  tick: function (t, dt) {\n    this.updateButtonState();\n    this.updateRotation(dt);\n  },\n\n  /**\n   * Called when a component is removed (e.g., via removeAttribute).\n   * Generally undoes all modifications to the entity.\n   */\n  remove: function () { },\n\n  /*******************************************************************\n   * Movement\n   */\n\n  isVelocityActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const dpad = this._dpadVector;\n    const joystick = this._moveVector;\n\n    this.getDpad(dpad);\n    this.getJoystick(Joystick.MOVEMENT, joystick);\n\n    const inputX = dpad.x || joystick.x;\n    const inputY = dpad.y || joystick.y;\n\n    return Math.abs(inputX) > JOYSTICK_EPS || Math.abs(inputY) > JOYSTICK_EPS;\n  },\n\n  getVelocityDelta: function () {\n    const dpad = this._dpadVector;\n    const joystick = this._moveVector;\n\n    this.getDpad(dpad);\n    this.getJoystick(Joystick.MOVEMENT, joystick);\n\n    const inputX = dpad.x || joystick.x;\n    const inputY = dpad.y || joystick.y;\n    const dVelocity = new THREE.Vector3();\n\n    if (Math.abs(inputX) > JOYSTICK_EPS) {\n      dVelocity.x += inputX;\n    }\n    if (Math.abs(inputY) > JOYSTICK_EPS) {\n      dVelocity.z += inputY;\n    }\n\n    return dVelocity;\n  },\n\n  /*******************************************************************\n   * Rotation\n   */\n\n  isRotationActive: function () {\n    if (!this.data.enabled || !this.isConnected()) return false;\n\n    const joystick = this._lookVector;\n\n    this.getJoystick(Joystick.ROTATION, joystick);\n\n    return Math.abs(joystick.x) > JOYSTICK_EPS || Math.abs(joystick.y) > JOYSTICK_EPS;\n  },\n\n  updateRotation: function (dt) {\n    if (!this.isRotationActive()) return;\n\n    const data = this.data;\n    const yaw = this.yaw;\n    const pitch = this.pitch;\n\n    // First copy camera rig pitch/yaw, it may have been changed from\n    // another component.\n    yaw.rotation.y = this.el.object3D.rotation.y;\n    pitch.rotation.x = this.el.object3D.rotation.x;\n\n    const lookVector = this._lookVector;\n\n    this.getJoystick(Joystick.ROTATION, lookVector);\n\n    if (Math.abs(lookVector.x) <= JOYSTICK_EPS) lookVector.x = 0;\n    if (Math.abs(lookVector.y) <= JOYSTICK_EPS) lookVector.y = 0;\n\n    lookVector.multiplyScalar(data.rotationSensitivity * dt / 1000);\n    yaw.rotation.y -= lookVector.x;\n    pitch.rotation.x -= lookVector.y;\n    pitch.rotation.x = Math.max(- Math.PI / 2, Math.min(Math.PI / 2, pitch.rotation.x));\n    this.el.object3D.rotation.set(pitch.rotation.x, yaw.rotation.y, 0);\n  },\n\n  /*******************************************************************\n   * Button events\n   */\n\n  updateButtonState: function () {\n    const gamepad = this.getGamepad(Hand.RIGHT);\n    if (this.data.enabled && gamepad) {\n\n      // Fire DOM events for button state changes.\n      for (var i = 0; i < gamepad.buttons.length; i++) {\n        if (gamepad.buttons[i].pressed && !this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttondown', i, gamepad.buttons[i]));\n        } else if (!gamepad.buttons[i].pressed && this.buttons[i]) {\n          this.emit(new GamepadButtonEvent('gamepadbuttonup', i, gamepad.buttons[i]));\n        }\n        this.buttons[i] = gamepad.buttons[i].pressed;\n      }\n\n    } else if (Object.keys(this.buttons)) {\n      // Reset state if controls are disabled or controller is lost.\n      this.buttons = {};\n    }\n  },\n\n  emit: function (event) {\n    // Emit original event.\n    this.el.emit(event.type, event);\n\n    // Emit convenience event, identifying button index.\n    this.el.emit(\n      event.type + ':' + event.index,\n      new GamepadButtonEvent(event.type, event.index, event)\n    );\n  },\n\n  /*******************************************************************\n   * Gamepad state\n   */\n\n  /**\n   * Returns the Gamepad instance attached to the component. If connected,\n   * a proxy-controls component may provide access to Gamepad input from a\n   * remote device.\n   *\n   * @param {string} handPreference\n   * @return {Gamepad}\n   */\n  getGamepad: (function () {\n    const _xrGamepads = [];\n    const _empty = [];\n\n    return function (handPreference) {\n      // https://github.com/donmccurdy/aframe-proxy-controls\n      const proxyControls = this.el.sceneEl.components['proxy-controls'];\n      const proxyGamepad = proxyControls && proxyControls.isConnected()\n        && proxyControls.getGamepad(0);\n      if (proxyGamepad) return proxyGamepad;\n\n      // https://www.w3.org/TR/webxr/#dom-xrinputsource-handedness\n      _xrGamepads.length = 0;\n      for (let i = 0; i < this.system.controllers.length; i++) {\n        const xrController = this.system.controllers[i];\n        const xrGamepad = xrController ? xrController.gamepad : null;\n        _xrGamepads.push(xrGamepad);\n        if (xrGamepad && xrController.handedness === handPreference) return xrGamepad;\n      }\n\n      // https://developer.mozilla.org/en-US/docs/Web/API/Gamepad/hand\n      const navGamepads = navigator.getGamepads ? navigator.getGamepads() : _empty;\n      for (let i = 0; i < navGamepads.length; i++) {\n        const navGamepad = navGamepads[i];\n        if (navGamepad && navGamepad.hand === handPreference) return navGamepad;\n      }\n\n      return _xrGamepads[0] || navGamepads[0];\n    };\n  })(),\n\n  /**\n   * Returns the state of the given button.\n   * @param  {number} index The button (0-N) for which to find state.\n   * @return {GamepadButton}\n   */\n  getButton: function (index) {\n    return this.getGamepad(Hand.RIGHT).buttons[index];\n  },\n\n  /**\n   * Returns state of the given axis. Axes are labelled 0-N, where 0-1 will\n   * represent X/Y on the first joystick, and 2-3 X/Y on the second.\n   * @param  {number} index The axis (0-N) for which to find state.\n   * @return {number} On the interval [-1,1].\n   */\n  getAxis: function (index) {\n    return this.getGamepad(index > 1 ? Hand.RIGHT : Hand.LEFT).axes[index];\n  },\n\n  /**\n   * Returns the state of the specified joystick as a THREE.Vector2.\n   * @param  {Joystick} role\n   * @param  {THREE.Vector2} target\n   * @return {THREE.Vector2}\n   */\n  getJoystick: function (index, target) {\n    const gamepad = this.getGamepad(index === Joystick.MOVEMENT ? Hand.LEFT : Hand.RIGHT);\n    // gamepad can be null here if it becomes disconnected even if isConnected() was called\n    // in the same tick before calling getJoystick.\n    if (!gamepad) {\n      return target.set(0, 0);\n    }\n    if (gamepad.mapping === 'xr-standard') {\n      // See: https://github.com/donmccurdy/aframe-extras/issues/307\n      switch (index) {\n        case Joystick.MOVEMENT: return target.set(gamepad.axes[2], gamepad.axes[3]);\n        case Joystick.ROTATION: return target.set(gamepad.axes[2], 0);\n      }\n    } else {\n      switch (index) {\n        case Joystick.MOVEMENT: return target.set(gamepad.axes[0], gamepad.axes[1]);\n        case Joystick.ROTATION: return target.set(gamepad.axes[2], gamepad.axes[3]);\n      }\n    }\n    throw new Error('Unexpected joystick index \"%d\".', index);\n  },\n\n  /**\n   * Returns the state of the dpad as a THREE.Vector2.\n   * @param {THREE.Vector2} target\n   * @return {THREE.Vector2}\n   */\n  getDpad: function (target) {\n    const gamepad = this.getGamepad(Hand.LEFT);\n    if (!gamepad) {\n      return target.set(0, 0);\n    }\n    if (!gamepad.buttons[GamepadButton.DPAD_RIGHT]) {\n      return target.set(0, 0);\n    }\n    return target.set(\n      (gamepad.buttons[GamepadButton.DPAD_RIGHT].pressed ? 1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_LEFT].pressed ? -1 : 0),\n      (gamepad.buttons[GamepadButton.DPAD_UP].pressed ? -1 : 0)\n      + (gamepad.buttons[GamepadButton.DPAD_DOWN].pressed ? 1 : 0)\n    );\n  },\n\n  /**\n   * Returns true if the gamepad is currently connected to the system.\n   * @return {boolean}\n   */\n  isConnected: function () {\n    const gamepad = this.getGamepad(Hand.LEFT);\n    return !!(gamepad && gamepad.connected);\n  },\n\n  /**\n   * Returns a string containing some information about the controller. Result\n   * may vary across browsers, for a given controller.\n   * @return {string}\n   */\n  getID: function () {\n    return this.getGamepad(Hand.LEFT).id;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/gamepad-controls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/index.js":
/*!*************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/index.js ***!
  \*************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./checkpoint-controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/checkpoint-controls.js\");\n__webpack_require__(/*! ./gamepad-controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/gamepad-controls.js\");\n__webpack_require__(/*! ./keyboard-controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/keyboard-controls.js\");\n__webpack_require__(/*! ./touch-controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/touch-controls.js\");\n__webpack_require__(/*! ./movement-controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/movement-controls.js\");\n__webpack_require__(/*! ./trackpad-controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/trackpad-controls.js\");\n__webpack_require__(/*! ./nipple-controls */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/nipple-controls.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvY29udHJvbHMvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQU8sQ0FBQyw0SUFBdUI7QUFDL0IsbUJBQU8sQ0FBQyxzSUFBb0I7QUFDNUIsbUJBQU8sQ0FBQyx3SUFBcUI7QUFDN0IsbUJBQU8sQ0FBQyxrSUFBa0I7QUFDMUIsbUJBQU8sQ0FBQyx3SUFBcUI7QUFDN0IsbUJBQU8sQ0FBQyx3SUFBcUI7QUFDN0IsbUJBQU8sQ0FBQyxvSUFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9jb250cm9scy9pbmRleC5qcz9iZWI2Il0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vY2hlY2twb2ludC1jb250cm9scycpO1xucmVxdWlyZSgnLi9nYW1lcGFkLWNvbnRyb2xzJyk7XG5yZXF1aXJlKCcuL2tleWJvYXJkLWNvbnRyb2xzJyk7XG5yZXF1aXJlKCcuL3RvdWNoLWNvbnRyb2xzJyk7XG5yZXF1aXJlKCcuL21vdmVtZW50LWNvbnRyb2xzJyk7XG5yZXF1aXJlKCcuL3RyYWNrcGFkLWNvbnRyb2xzJyk7XG5yZXF1aXJlKCcuL25pcHBsZS1jb250cm9scycpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/keyboard-controls.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/keyboard-controls.js ***!
  \*************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("/* global AFRAME, THREE */\n/* eslint-disable no-prototype-builtins */\n__webpack_require__(/*! ../../lib/keyboard.polyfill */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/keyboard.polyfill.js\");\n\nconst PROXY_FLAG = '__keyboard-controls-proxy';\n\nconst KeyboardEvent = window.KeyboardEvent;\n\n/**\n * Keyboard Controls component.\n *\n * Stripped-down version of: https://github.com/donmccurdy/aframe-keyboard-controls\n *\n * Bind keyboard events to components, or control your entities with the WASD keys.\n *\n * Why use KeyboardEvent.code? \"This is set to a string representing the key that was pressed to\n * generate the KeyboardEvent, without taking the current keyboard layout (e.g., QWERTY vs.\n * Dvorak), locale (e.g., English vs. French), or any modifier keys into account. This is useful\n * when you care about which physical key was pressed, rather thanwhich character it corresponds\n * to. For example, if you’re a writing a game, you might want a certain set of keys to move the\n * player in different directions, and that mapping should ideally be independent of keyboard\n * layout. See: https://developers.google.com/web/updates/2016/04/keyboardevent-keys-codes\n *\n * @namespace wasd-controls\n * keys the entity moves and if you release it will stop. Easing simulates friction.\n * to the entity when pressing the keys.\n * @param {bool} [enabled=true] - To completely enable or disable the controls\n */\nmodule.exports = AFRAME.registerComponent('keyboard-controls', {\n  schema: {\n    enabled:           { default: true },\n    debug:             { default: false }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.localKeys = {};\n    this.listeners = {\n      keydown: this.onKeyDown.bind(this),\n      keyup: this.onKeyUp.bind(this),\n      blur: this.onBlur.bind(this),\n      onContextMenu: this.onContextMenu.bind(this),\n    };\n  },\n\n  /*******************************************************************\n  * Movement\n  */\n\n  isVelocityActive: function () {\n    return this.data.enabled && !!Object.keys(this.getKeys()).length;\n  },\n\n  getVelocityDelta: function () {\n    const data = this.data;\n    const keys = this.getKeys();\n\n    this.dVelocity.set(0, 0, 0);\n    if (data.enabled) {\n      if (keys.KeyW || keys.ArrowUp)    { this.dVelocity.z -= 1; }\n      if (keys.KeyA || keys.ArrowLeft)  { this.dVelocity.x -= 1; }\n      if (keys.KeyS || keys.ArrowDown)  { this.dVelocity.z += 1; }\n      if (keys.KeyD || keys.ArrowRight) { this.dVelocity.x += 1; }\n\n      // Move faster when the shift key is down.\n      if (keys.ShiftLeft) { this.dVelocity = this.dVelocity.multiplyScalar(2); }\n    }\n\n    return this.dVelocity.clone();\n  },\n\n  /*******************************************************************\n  * Events\n  */\n\n  play: function () {\n    this.attachEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n  },\n\n  attachEventListeners: function () {\n    window.addEventListener(\"contextmenu\", this.listeners.onContextMenu, false);\n    window.addEventListener(\"keydown\", this.listeners.keydown, false);\n    window.addEventListener(\"keyup\", this.listeners.keyup, false);\n    window.addEventListener(\"blur\", this.listeners.blur, false);\n  },\n\n  onContextMenu: function () {\n    for (const code in this.localKeys) {\n      if (this.localKeys.hasOwnProperty(code)) {\n        delete this.localKeys[code];\n      }\n    }\n  },\n\n  removeEventListeners: function () {\n    window.removeEventListener('keydown', this.listeners.keydown);\n    window.removeEventListener('keyup', this.listeners.keyup);\n    window.removeEventListener('blur', this.listeners.blur);\n  },\n\n  onKeyDown: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      this.localKeys[event.code] = true;\n      this.emit(event);\n    }\n  },\n\n  onKeyUp: function (event) {\n    if (AFRAME.utils.shouldCaptureKeyEvent(event)) {\n      delete this.localKeys[event.code];\n      this.emit(event);\n    }\n  },\n\n  onBlur: function () {\n    for (const code in this.localKeys) {\n      if (this.localKeys.hasOwnProperty(code)) {\n        delete this.localKeys[code];\n      }\n    }\n  },\n\n  emit: function (event) {\n    // TODO - keydown only initially?\n    // TODO - where the f is the spacebar\n\n    // Emit original event.\n    if (PROXY_FLAG in event) {\n      // TODO - Method never triggered.\n      this.el.emit(event.type, event);\n    }\n\n    // Emit convenience event, identifying key.\n    this.el.emit(event.type + ':' + event.code, new KeyboardEvent(event.type, event));\n    if (this.data.debug) console.log(event.type + ':' + event.code);\n  },\n\n  /*******************************************************************\n  * Accessors\n  */\n\n  isPressed: function (code) {\n    return code in this.getKeys();\n  },\n\n  getKeys: function () {\n    if (this.isProxied()) {\n      return this.el.sceneEl.components['proxy-controls'].getKeyboard();\n    }\n    return this.localKeys;\n  },\n\n  isProxied: function () {\n    const proxyControls = this.el.sceneEl.components['proxy-controls'];\n    return proxyControls && proxyControls.isConnected();\n  }\n\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/keyboard-controls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/movement-controls.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/movement-controls.js ***!
  \*************************************************************************************************************/
/***/ ((module) => {

eval("/**\n * Movement Controls\n *\n * @author Don McCurdy <dm@donmccurdy.com>\n */\n\nconst COMPONENT_SUFFIX = '-controls';\nconst MAX_DELTA = 0.2; // ms\nconst EPS = 10e-6;\nconst MOVED = 'moved';\n\nmodule.exports = AFRAME.registerComponent('movement-controls', {\n\n  /*******************************************************************\n   * Schema\n   */\n\n  dependencies: ['rotation'],\n\n  schema: {\n    enabled:            { default: true },\n    controls:           { default: ['gamepad', 'trackpad', 'keyboard', 'touch'] },\n    speed:              { default: 0.3, min: 0 },\n    fly:                { default: false },\n    constrainToNavMesh: { default: false },\n    camera:             { default: '[movement-controls] [camera]', type: 'selector' }\n  },\n\n  /*******************************************************************\n   * Lifecycle\n   */\n\n  init: function () {\n    const el = this.el;\n    if (!this.data.camera) {\n      this.data.camera = el.querySelector('[camera]');\n    }\n    this.velocityCtrl = null;\n\n    this.velocity = new THREE.Vector3();\n    this.heading = new THREE.Quaternion();\n    this.eventDetail = {};\n\n    // Navigation\n    this.navGroup = null;\n    this.navNode = null;\n\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    } else {\n      el.sceneEl.addEventListener('loaded', this.injectControls.bind(this));\n    }\n  },\n\n  update: function (prevData) {\n    const el = this.el;\n    const data = this.data;\n    const nav = el.sceneEl.systems.nav;\n    if (el.sceneEl.hasLoaded) {\n      this.injectControls();\n    }\n    if (nav && data.constrainToNavMesh !== prevData.constrainToNavMesh) {\n      data.constrainToNavMesh\n        ? nav.addAgent(this)\n        : nav.removeAgent(this);\n    }\n    if (data.enabled !== prevData.enabled) {\n      // Propagate the enabled change to all controls\n      for (let i = 0; i < data.controls.length; i++) {\n        const name = data.controls[i] + COMPONENT_SUFFIX;\n        this.el.setAttribute(name, { enabled: this.data.enabled });\n      }\n    }\n  },\n\n  injectControls: function () {\n    const data = this.data;\n\n    for (let i = 0; i < data.controls.length; i++) {\n      const name = data.controls[i] + COMPONENT_SUFFIX;\n      this.el.setAttribute(name, { enabled: this.data.enabled });\n    }\n  },\n\n  updateNavLocation: function () {\n    this.navGroup = null;\n    this.navNode = null;\n  },\n\n  /*******************************************************************\n   * Tick\n   */\n\n  tick: (function () {\n    const start = new THREE.Vector3();\n    const end = new THREE.Vector3();\n    const clampedEnd = new THREE.Vector3();\n\n    return function (t, dt) {\n      if (!dt) return;\n\n      const el = this.el;\n      const data = this.data;\n\n      if (!data.enabled) return;\n\n      this.updateVelocityCtrl();\n      const velocityCtrl = this.velocityCtrl;\n      const velocity = this.velocity;\n\n      if (!velocityCtrl) return;\n\n      // Update velocity. If FPS is too low, reset.\n      if (dt / 1000 > MAX_DELTA) {\n        velocity.set(0, 0, 0);\n      } else {\n        this.updateVelocity(dt);\n      }\n\n      if (data.constrainToNavMesh\n          && velocityCtrl.isNavMeshConstrained !== false) {\n\n        if (velocity.lengthSq() < EPS) return;\n\n        start.copy(el.object3D.position);\n        end\n          .copy(velocity)\n          .multiplyScalar(dt / 1000)\n          .add(start);\n\n        const nav = el.sceneEl.systems.nav;\n        this.navGroup = this.navGroup === null ? nav.getGroup(start) : this.navGroup;\n        this.navNode = this.navNode || nav.getNode(start, this.navGroup);\n        this.navNode = nav.clampStep(start, end, this.navGroup, this.navNode, clampedEnd);\n        el.object3D.position.copy(clampedEnd);\n      } else if (el.hasAttribute('velocity')) {\n        el.setAttribute('velocity', velocity);\n      } else {\n        el.object3D.position.x += velocity.x * dt / 1000;\n        el.object3D.position.y += velocity.y * dt / 1000;\n        el.object3D.position.z += velocity.z * dt / 1000;\n      }\n\n    };\n  }()),\n\n  /*******************************************************************\n   * Movement\n   */\n\n  updateVelocityCtrl: function () {\n    const data = this.data;\n    if (data.enabled) {\n      for (let i = 0, l = data.controls.length; i < l; i++) {\n        const control = this.el.components[data.controls[i] + COMPONENT_SUFFIX];\n        if (control && control.isVelocityActive()) {\n          this.velocityCtrl = control;\n          return;\n        }\n      }\n      this.velocityCtrl = null;\n    }\n  },\n\n  updateVelocity: (function () {\n    const vector2 = new THREE.Vector2();\n    const quaternion = new THREE.Quaternion();\n\n    return function (dt) {\n      let dVelocity;\n      const el = this.el;\n      const control = this.velocityCtrl;\n      const velocity = this.velocity;\n      const data = this.data;\n\n      if (control) {\n        if (control.getVelocityDelta) {\n          dVelocity = control.getVelocityDelta(dt);\n        } else if (control.getVelocity) {\n          velocity.copy(control.getVelocity());\n          return;\n        } else if (control.getPositionDelta) {\n          velocity.copy(control.getPositionDelta(dt).multiplyScalar(1000 / dt));\n          return;\n        } else {\n          throw new Error('Incompatible movement controls: ', control);\n        }\n      }\n\n      if (el.hasAttribute('velocity') && !data.constrainToNavMesh) {\n        velocity.copy(this.el.getAttribute('velocity'));\n      }\n\n      if (dVelocity && data.enabled) {\n        const cameraEl = data.camera;\n\n        // Rotate to heading\n        quaternion.copy(cameraEl.object3D.quaternion);\n        quaternion.premultiply(el.object3D.quaternion);\n        dVelocity.applyQuaternion(quaternion);\n\n        const factor = dVelocity.length();\n        if (data.fly) {\n          velocity.copy(dVelocity);\n          velocity.multiplyScalar(this.data.speed * 16.66667);\n        } else {\n          vector2.set(dVelocity.x, dVelocity.z);\n          vector2.setLength(factor * this.data.speed * 16.66667);\n          velocity.x = vector2.x;\n          velocity.y = 0;\n          velocity.z = vector2.y;\n        }\n        if (velocity.x !== 0 || velocity.y !== 0 || velocity.z !== 0) {\n          this.eventDetail.velocity = velocity;\n          this.el.emit(MOVED, this.eventDetail);\n        }\n      }\n    };\n\n  }())\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/movement-controls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/nipple-controls.js":
/*!***********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/nipple-controls.js ***!
  \***********************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var nipplejs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! nipplejs */ \"(ssr)/./node_modules/.pnpm/nipplejs@0.10.2/node_modules/nipplejs/src/index.js\");\n/* global AFRAME, THREE */\n\n\nAFRAME.registerComponent(\"nipple-controls\", {\n  schema: {\n    enabled: { default: true },\n    mode: { default: \"dynamic\", oneOf: [\"static\", \"semi\", \"dynamic\"] },\n    rotationSensitivity: { default: 1.0 },\n    moveJoystickEnabled: { default: true },\n    lookJoystickEnabled: { default: true },\n    sideMargin: { default: \"30px\" },\n    bottomMargin: { default: \"70px\" },\n    moveJoystickPosition: { default: \"left\", oneOf: [\"left\", \"right\"] },\n    lookJoystickPosition: { default: \"right\", oneOf: [\"left\", \"right\"] },\n  },\n\n  init() {\n    this.dVelocity = new THREE.Vector3();\n    this.lookVector = new THREE.Vector2();\n    const lookControls = this.el.querySelector(\"[look-controls]\").components[\"look-controls\"];\n    this.pitchObject = lookControls.pitchObject;\n    this.yawObject = lookControls.yawObject;\n    this.rigRotation = this.el.object3D.rotation;\n    this.moveData = undefined;\n    this.lookData = undefined;\n    this.moving = false;\n    this.rotating = false;\n  },\n\n  update(oldData) {\n    if (\n      this.data.moveJoystickPosition !== oldData.moveJoystickPosition ||\n      this.data.sideMargin !== oldData.sideMargin ||\n      this.data.bottomMargin !== oldData.bottomMargin ||\n      this.data.mode !== oldData.mode\n    ) {\n      this.removeMoveJoystick();\n    }\n    if (\n      this.data.lookJoystickPosition !== oldData.lookJoystickPosition ||\n      this.data.sideMargin !== oldData.sideMargin ||\n      this.data.bottomMargin !== oldData.bottomMargin ||\n      this.data.mode !== oldData.mode\n    ) {\n      this.removeLookJoystick();\n    }\n    if (this.data.enabled && this.data.moveJoystickEnabled) {\n      this.createMoveJoystick();\n    } else {\n      this.removeMoveJoystick();\n    }\n    if (this.data.enabled && this.data.lookJoystickEnabled) {\n      this.createLookJoystick();\n    } else {\n      this.removeLookJoystick();\n    }\n  },\n\n  pause() {\n    this.moving = false;\n    this.rotating = false;\n  },\n\n  remove() {\n    this.removeMoveJoystick();\n    this.removeLookJoystick();\n  },\n\n  isVelocityActive() {\n    return this.data.enabled && this.moving;\n  },\n\n  getVelocityDelta() {\n    this.dVelocity.set(0, 0, 0);\n    if (this.isVelocityActive()) {\n      const force = this.moveData.force < 1 ? this.moveData.force : 1;\n      const angle = this.moveData.angle.radian;\n      const x = Math.cos(angle) * force;\n      const z = -Math.sin(angle) * force;\n      this.dVelocity.set(x, 0, z);\n    }\n    return this.dVelocity; // We don't do a clone() here, the Vector3 will be modified by the calling code but that's fine.\n  },\n\n  isRotationActive() {\n    return this.data.enabled && this.rotating;\n  },\n\n  updateRotation(dt) {\n    if (!this.isRotationActive()) return;\n\n    const force = this.lookData.force < 1 ? this.lookData.force : 1;\n    const angle = this.lookData.angle.radian;\n    const lookVector = this.lookVector;\n    lookVector.x = Math.cos(angle) * force;\n    lookVector.y = Math.sin(angle) * force;\n    lookVector.multiplyScalar((this.data.rotationSensitivity * dt) / 1000);\n\n    this.yawObject.rotation.y -= lookVector.x;\n    let x = this.pitchObject.rotation.x + lookVector.y;\n    x = Math.max(-Math.PI / 2, Math.min(Math.PI / 2, x));\n    this.pitchObject.rotation.x = x;\n  },\n\n  tick: function (t, dt) {\n    this.updateRotation(dt);\n  },\n\n  initLeftZone() {\n    const leftZone = document.createElement(\"div\");\n    leftZone.setAttribute(\"id\", \"joystickLeftZone\");\n    leftZone.setAttribute(\n      \"style\",\n      `position:absolute;${this.data.moveJoystickPosition}:${this.data.sideMargin};bottom:${this.data.bottomMargin};z-index:1`\n    );\n    document.body.appendChild(leftZone);\n    this.leftZone = leftZone;\n  },\n\n  initRightZone() {\n    const rightZone = document.createElement(\"div\");\n    rightZone.setAttribute(\"id\", \"joystickRightZone\");\n    rightZone.setAttribute(\n      \"style\",\n      `position:absolute;${this.data.lookJoystickPosition}:${this.data.sideMargin};bottom:${this.data.bottomMargin};z-index:1`\n    );\n    document.body.appendChild(rightZone);\n    this.rightZone = rightZone;\n  },\n\n  createMoveJoystick() {\n    if (this.moveJoystick) return;\n    this.initLeftZone();\n    const options = {\n      mode: this.data.mode,\n      zone: this.leftZone,\n      color: \"white\",\n      fadeTime: 0,\n    };\n    this.leftZone.style.width = \"100px\";\n    if (this.data.mode === \"static\") {\n      this.leftZone.style.height = \"100px\";\n      options.position = { left: \"50%\", bottom: \"50%\" };\n    } else {\n      this.leftZone.style.height = \"400px\";\n    }\n\n    this.moveJoystick = nipplejs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(options);\n    this.moveJoystick.on(\"move\", (evt, data) => {\n      this.moveData = data;\n      this.moving = true;\n    });\n    this.moveJoystick.on(\"end\", (evt, data) => {\n      this.moving = false;\n    });\n  },\n\n  createLookJoystick() {\n    if (this.lookJoystick) return;\n    this.initRightZone();\n    const options = {\n      mode: this.data.mode,\n      zone: this.rightZone,\n      color: \"white\",\n      fadeTime: 0,\n    };\n    this.rightZone.style.width = \"100px\";\n    if (this.data.mode === \"static\") {\n      this.rightZone.style.height = \"100px\";\n      options.position = { left: \"50%\", bottom: \"50%\" };\n    } else {\n      this.rightZone.style.height = \"400px\";\n    }\n\n    this.lookJoystick = nipplejs__WEBPACK_IMPORTED_MODULE_0__[\"default\"].create(options);\n    this.lookJoystick.on(\"move\", (evt, data) => {\n      this.lookData = data;\n      this.rotating = true;\n    });\n    this.lookJoystick.on(\"end\", (evt, data) => {\n      this.rotating = false;\n    });\n  },\n\n  removeMoveJoystick() {\n    if (this.moveJoystick) {\n      this.moveJoystick.destroy();\n      this.moveJoystick = undefined;\n    }\n\n    this.moveData = undefined;\n\n    if (this.leftZone && this.leftZone.parentNode) {\n      this.leftZone.remove();\n      this.leftZone = undefined;\n    }\n  },\n\n  removeLookJoystick() {\n    if (this.lookJoystick) {\n      this.lookJoystick.destroy();\n      this.lookJoystick = undefined;\n    }\n\n    this.lookData = undefined;\n\n    if (this.rightZone && this.rightZone.parentNode) {\n      this.rightZone.remove();\n      this.rightZone = undefined;\n    }\n  },\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/nipple-controls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/touch-controls.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/touch-controls.js ***!
  \**********************************************************************************************************/
/***/ ((module) => {

eval("/**\n * Touch-to-move-forward controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('touch-controls', {\n  schema: {\n    enabled: { default: true },\n    reverseEnabled: { default: true }\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.bindMethods();\n    this.direction = 0;\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n    const canvasEl = sceneEl.canvas;\n\n    if (!canvasEl) {\n      sceneEl.addEventListener('render-target-loaded', this.addEventListeners.bind(this));\n      return;\n    }\n\n    canvasEl.addEventListener('touchstart', this.onTouchStart);\n    canvasEl.addEventListener('touchend', this.onTouchEnd);\n    const vrModeUI = sceneEl.getAttribute('vr-mode-ui');\n    if (vrModeUI && vrModeUI.cardboardModeEnabled) {\n      sceneEl.addEventListener('enter-vr', this.onEnterVR);\n    }\n  },\n\n  removeEventListeners: function () {\n    const canvasEl = this.el.sceneEl && this.el.sceneEl.canvas;\n    if (!canvasEl) { return; }\n\n    canvasEl.removeEventListener('touchstart', this.onTouchStart);\n    canvasEl.removeEventListener('touchend', this.onTouchEnd);\n    this.el.sceneEl.removeEventListener('enter-vr', this.onEnterVR)\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && !!this.direction;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.direction;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onEnterVR = this.onEnterVR.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    this.direction = -1;\n    if (this.data.reverseEnabled && e.touches && e.touches.length === 2) {\n      this.direction = 1;\n    }\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    this.direction = 0;\n    e.preventDefault();\n  },\n\n  onEnterVR: function () {\n    // This is to make the Cardboard button on Chrome Android working\n    const xrSession = this.el.sceneEl.xrSession;\n    if (!xrSession) { return; }\n    xrSession.addEventListener('selectstart', this.onTouchStart);\n    xrSession.addEventListener('selectend', this.onTouchEnd);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvY29udHJvbHMvdG91Y2gtY29udHJvbHMuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsZUFBZTtBQUM5QixzQkFBc0I7QUFDdEIsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EscUJBQXFCOztBQUVyQjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQSxzQkFBc0I7QUFDdEI7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYV9wb3N0X3NjYXJjaXR5Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2FmcmFtZS1leHRyYXNANy41LjEvbm9kZV9tb2R1bGVzL2FmcmFtZS1leHRyYXMvc3JjL2NvbnRyb2xzL3RvdWNoLWNvbnRyb2xzLmpzP2QzMTIiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBUb3VjaC10by1tb3ZlLWZvcndhcmQgY29udHJvbHMgZm9yIG1vYmlsZS5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBBRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ3RvdWNoLWNvbnRyb2xzJywge1xuICBzY2hlbWE6IHtcbiAgICBlbmFibGVkOiB7IGRlZmF1bHQ6IHRydWUgfSxcbiAgICByZXZlcnNlRW5hYmxlZDogeyBkZWZhdWx0OiB0cnVlIH1cbiAgfSxcblxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5kVmVsb2NpdHkgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICAgIHRoaXMuYmluZE1ldGhvZHMoKTtcbiAgICB0aGlzLmRpcmVjdGlvbiA9IDA7XG4gIH0sXG5cbiAgcGxheTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMoKTtcbiAgfSxcblxuICBwYXVzZTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMucmVtb3ZlRXZlbnRMaXN0ZW5lcnMoKTtcbiAgICB0aGlzLmRWZWxvY2l0eS5zZXQoMCwgMCwgMCk7XG4gIH0sXG5cbiAgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5wYXVzZSgpO1xuICB9LFxuXG4gIGFkZEV2ZW50TGlzdGVuZXJzOiBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3Qgc2NlbmVFbCA9IHRoaXMuZWwuc2NlbmVFbDtcbiAgICBjb25zdCBjYW52YXNFbCA9IHNjZW5lRWwuY2FudmFzO1xuXG4gICAgaWYgKCFjYW52YXNFbCkge1xuICAgICAgc2NlbmVFbC5hZGRFdmVudExpc3RlbmVyKCdyZW5kZXItdGFyZ2V0LWxvYWRlZCcsIHRoaXMuYWRkRXZlbnRMaXN0ZW5lcnMuYmluZCh0aGlzKSk7XG4gICAgICByZXR1cm47XG4gICAgfVxuXG4gICAgY2FudmFzRWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2hzdGFydCcsIHRoaXMub25Ub3VjaFN0YXJ0KTtcbiAgICBjYW52YXNFbC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsIHRoaXMub25Ub3VjaEVuZCk7XG4gICAgY29uc3QgdnJNb2RlVUkgPSBzY2VuZUVsLmdldEF0dHJpYnV0ZSgndnItbW9kZS11aScpO1xuICAgIGlmICh2ck1vZGVVSSAmJiB2ck1vZGVVSS5jYXJkYm9hcmRNb2RlRW5hYmxlZCkge1xuICAgICAgc2NlbmVFbC5hZGRFdmVudExpc3RlbmVyKCdlbnRlci12cicsIHRoaXMub25FbnRlclZSKTtcbiAgICB9XG4gIH0sXG5cbiAgcmVtb3ZlRXZlbnRMaXN0ZW5lcnM6IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBjYW52YXNFbCA9IHRoaXMuZWwuc2NlbmVFbCAmJiB0aGlzLmVsLnNjZW5lRWwuY2FudmFzO1xuICAgIGlmICghY2FudmFzRWwpIHsgcmV0dXJuOyB9XG5cbiAgICBjYW52YXNFbC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaHN0YXJ0JywgdGhpcy5vblRvdWNoU3RhcnQpO1xuICAgIGNhbnZhc0VsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RvdWNoZW5kJywgdGhpcy5vblRvdWNoRW5kKTtcbiAgICB0aGlzLmVsLnNjZW5lRWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignZW50ZXItdnInLCB0aGlzLm9uRW50ZXJWUilcbiAgfSxcblxuICBpc1ZlbG9jaXR5QWN0aXZlOiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMuZGF0YS5lbmFibGVkICYmICEhdGhpcy5kaXJlY3Rpb247XG4gIH0sXG5cbiAgZ2V0VmVsb2NpdHlEZWx0YTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZFZlbG9jaXR5LnogPSB0aGlzLmRpcmVjdGlvbjtcbiAgICByZXR1cm4gdGhpcy5kVmVsb2NpdHkuY2xvbmUoKTtcbiAgfSxcblxuICBiaW5kTWV0aG9kczogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMub25Ub3VjaFN0YXJ0ID0gdGhpcy5vblRvdWNoU3RhcnQuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uVG91Y2hFbmQgPSB0aGlzLm9uVG91Y2hFbmQuYmluZCh0aGlzKTtcbiAgICB0aGlzLm9uRW50ZXJWUiA9IHRoaXMub25FbnRlclZSLmJpbmQodGhpcyk7XG4gIH0sXG5cbiAgb25Ub3VjaFN0YXJ0OiBmdW5jdGlvbiAoZSkge1xuICAgIHRoaXMuZGlyZWN0aW9uID0gLTE7XG4gICAgaWYgKHRoaXMuZGF0YS5yZXZlcnNlRW5hYmxlZCAmJiBlLnRvdWNoZXMgJiYgZS50b3VjaGVzLmxlbmd0aCA9PT0gMikge1xuICAgICAgdGhpcy5kaXJlY3Rpb24gPSAxO1xuICAgIH1cbiAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gIH0sXG5cbiAgb25Ub3VjaEVuZDogZnVuY3Rpb24gKGUpIHtcbiAgICB0aGlzLmRpcmVjdGlvbiA9IDA7XG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICB9LFxuXG4gIG9uRW50ZXJWUjogZnVuY3Rpb24gKCkge1xuICAgIC8vIFRoaXMgaXMgdG8gbWFrZSB0aGUgQ2FyZGJvYXJkIGJ1dHRvbiBvbiBDaHJvbWUgQW5kcm9pZCB3b3JraW5nXG4gICAgY29uc3QgeHJTZXNzaW9uID0gdGhpcy5lbC5zY2VuZUVsLnhyU2Vzc2lvbjtcbiAgICBpZiAoIXhyU2Vzc2lvbikgeyByZXR1cm47IH1cbiAgICB4clNlc3Npb24uYWRkRXZlbnRMaXN0ZW5lcignc2VsZWN0c3RhcnQnLCB0aGlzLm9uVG91Y2hTdGFydCk7XG4gICAgeHJTZXNzaW9uLmFkZEV2ZW50TGlzdGVuZXIoJ3NlbGVjdGVuZCcsIHRoaXMub25Ub3VjaEVuZCk7XG4gIH1cbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/touch-controls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/trackpad-controls.js":
/*!*************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/trackpad-controls.js ***!
  \*************************************************************************************************************/
/***/ ((module) => {

eval("/**\n * 3dof (Gear VR, Daydream) controls for mobile.\n */\nmodule.exports = AFRAME.registerComponent('trackpad-controls', {\n  schema: {\n    enabled: { default: true },\n    enableNegX: { default: true },\n    enablePosX: { default: true },\n    enableNegZ: { default: true },\n    enablePosZ: { default: true },\n    mode: { default: 'touch', oneOf: ['swipe', 'touch', 'press'] }\n\n  },\n\n  init: function () {\n    this.dVelocity = new THREE.Vector3();\n    this.zVel      = 0;\n    this.xVel      = 0;\n    this.bindMethods();\n  },\n\n  play: function () {\n    this.addEventListeners();\n  },\n\n  pause: function () {\n    this.removeEventListeners();\n    this.dVelocity.set(0, 0, 0);\n  },\n\n  remove: function () {\n    this.pause();\n  },\n\n  addEventListeners: function () {\n    const data = this.data;\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.addEventListener('axismove', this.onAxisMove);\n\n    switch (data.mode) {\n      case 'swipe':\n      case 'touch':\n        sceneEl.addEventListener('trackpadtouchstart', this.onTouchStart);\n        sceneEl.addEventListener('trackpadtouchend', this.onTouchEnd);\n        break;\n\n      case 'press':\n        sceneEl.addEventListener('trackpaddown', this.onTouchStart);\n        sceneEl.addEventListener('trackpadup', this.onTouchEnd);\n        break;\n    }\n\n  },\n\n  removeEventListeners: function () {\n    const sceneEl = this.el.sceneEl;\n\n    sceneEl.removeEventListener('axismove', this.onAxisMove);\n    sceneEl.removeEventListener('trackpadtouchstart', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadtouchend', this.onTouchEnd);\n    sceneEl.removeEventListener('trackpaddown', this.onTouchStart);\n    sceneEl.removeEventListener('trackpadup', this.onTouchEnd);\n  },\n\n  isVelocityActive: function () {\n    return this.data.enabled && this.isMoving;\n  },\n\n  getVelocityDelta: function () {\n    this.dVelocity.z = this.isMoving ? -this.zVel : 1;\n    this.dVelocity.x = this.isMoving ? this.xVel : 1;\n    return this.dVelocity.clone();\n  },\n\n  bindMethods: function () {\n    this.onTouchStart = this.onTouchStart.bind(this);\n    this.onTouchEnd = this.onTouchEnd.bind(this);\n    this.onAxisMove = this.onAxisMove.bind(this);\n  },\n\n  onTouchStart: function (e) {\n    switch(this.data.mode){\n      case 'swipe':\n        this.canRecordAxis = true;\n        this.startingAxisData = [];\n        break;\n      case 'touch':\n        this.isMoving = true;\n        break;\n      case 'press':\n        this.isMoving = true;\n        break;\n    }\n\n    e.preventDefault();\n  },\n\n  onTouchEnd: function (e) {\n    if(this.data.mode == 'swipe') {\n        this.startingAxisData = [];\n    }\n\n    this.isMoving = false;\n    e.preventDefault();\n  },\n\n  onAxisMove: function(e){\n    switch (this.data.mode) {\n      case 'swipe':\n        return this.handleSwipeAxis(e);\n      case 'touch':\n      case 'press':\n        return this.handleTouchAxis(e);\n    }\n  },\n\n  handleSwipeAxis: function(e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n\n    if(this.startingAxisData.length === 0 && this.canRecordAxis){\n      this.canRecordAxis = false;\n      this.startingAxisData[0] = axisData[0];\n      this.startingAxisData[1] = axisData[1];\n    }\n\n    if(this.startingAxisData.length > 0){\n      let velX = 0;\n      let velZ = 0;\n\n      if (data.enableNegX && axisData[0] < this.startingAxisData[0]) {\n        velX = -1;\n      }\n\n      if (data.enablePosX && axisData[0] > this.startingAxisData[0]) {\n        velX = 1;\n      }\n\n      if (data.enablePosZ && axisData[1] > this.startingAxisData[1]) {\n        velZ = -1;\n      }\n\n      if (data.enableNegZ && axisData[1] < this.startingAxisData[1]) {\n        velZ = 1;\n      }\n\n      const absChangeZ  = Math.abs(this.startingAxisData[1] - axisData[1]);\n      const absChangeX  = Math.abs(this.startingAxisData[0] - axisData[0]);\n\n      if (absChangeX > absChangeZ) {\n        this.zVel = 0;\n        this.xVel = velX;\n        this.isMoving = true;\n      } else {\n        this.xVel = 0;\n        this.zVel = velZ;\n        this.isMoving = true;\n      }\n\n    }\n  },\n\n  handleTouchAxis: function(e) {\n    const data = this.data;\n    const axisData = e.detail.axis;\n\n    let velX = 0;\n    let velZ = 0;\n\n    if (data.enableNegX && axisData[0] < 0) {\n      velX = -1;\n    }\n\n    if (data.enablePosX && axisData[0] > 0) {\n      velX = 1;\n    }\n\n    if (data.enablePosZ && axisData[1] > 0) {\n      velZ = -1;\n    }\n\n    if (data.enableNegZ && axisData[1] < 0) {\n      velZ = 1;\n    }\n\n    if (Math.abs(axisData[0]) > Math.abs(axisData[1])) {\n      this.zVel = 0;\n      this.xVel = velX;\n    } else {\n      this.xVel = 0;\n      this.zVel = velZ;\n    }\n\n  }\n\n});\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/controls/trackpad-controls.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/animation-mixer.js":
/*!**********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/animation-mixer.js ***!
  \**********************************************************************************************************/
/***/ ((module) => {

eval("const LoopMode = {\n  once: THREE.LoopOnce,\n  repeat: THREE.LoopRepeat,\n  pingpong: THREE.LoopPingPong\n};\n\n/**\n * animation-mixer\n *\n * Player for animation clips. Intended to be compatible with any model format that supports\n * skeletal or morph animations through THREE.AnimationMixer.\n * See: https://threejs.org/docs/?q=animation#Reference/Animation/AnimationMixer\n */\nmodule.exports = AFRAME.registerComponent('animation-mixer', {\n  schema: {\n    clip: { default: '*' },\n    useRegExp: {default: false},\n    duration: { default: 0 },\n    clampWhenFinished: { default: false, type: 'boolean' },\n    crossFadeDuration: { default: 0 },\n    loop: { default: 'repeat', oneOf: Object.keys(LoopMode) },\n    repetitions: { default: Infinity, min: 0 },\n    timeScale: { default: 1 },\n    startAt: { default: 0 }\n  },\n\n  init: function () {\n    /** @type {THREE.Mesh} */\n    this.model = null;\n    /** @type {THREE.AnimationMixer} */\n    this.mixer = null;\n    /** @type {Array<THREE.AnimationAction>} */\n    this.activeActions = [];\n\n    const model = this.el.getObject3D('mesh');\n\n    if (model) {\n      this.load(model);\n    } else {\n      this.el.addEventListener('model-loaded', (e) => {\n        this.load(e.detail.model);\n      });\n    }\n  },\n\n  load: function (model) {\n    const el = this.el;\n    this.model = model;\n    this.mixer = new THREE.AnimationMixer(model);\n    this.mixer.addEventListener('loop', (e) => {\n      el.emit('animation-loop', { action: e.action, loopDelta: e.loopDelta });\n    });\n    this.mixer.addEventListener('finished', (e) => {\n      el.emit('animation-finished', { action: e.action, direction: e.direction });\n    });\n    if (this.data.clip) this.update({});\n  },\n\n  remove: function () {\n    if (this.mixer) this.mixer.stopAllAction();\n  },\n\n  update: function (prevData) {\n    if (!prevData) return;\n\n    const data = this.data;\n    const changes = AFRAME.utils.diff(data, prevData);\n\n    // If selected clips have changed, restart animation.\n    if ('clip' in changes) {\n      this.stopAction();\n      if (data.clip) this.playAction();\n      return;\n    }\n\n    // Otherwise, modify running actions.\n    this.activeActions.forEach((action) => {\n      if ('duration' in changes && data.duration) {\n        action.setDuration(data.duration);\n      }\n      if ('clampWhenFinished' in changes) {\n        action.clampWhenFinished = data.clampWhenFinished;\n      }\n      if ('loop' in changes || 'repetitions' in changes) {\n        action.setLoop(LoopMode[data.loop], data.repetitions);\n      }\n      if ('timeScale' in changes) {\n        action.setEffectiveTimeScale(data.timeScale);\n      }\n    });\n  },\n\n  stopAction: function () {\n    const data = this.data;\n    for (let i = 0; i < this.activeActions.length; i++) {\n      data.crossFadeDuration\n        ? this.activeActions[i].fadeOut(data.crossFadeDuration)\n        : this.activeActions[i].stop();\n    }\n    this.activeActions.length = 0;\n  },\n\n  playAction: function () {\n    if (!this.mixer) return;\n\n    const model = this.model,\n      data = this.data,\n      clips = model.animations || (model.geometry || {}).animations || [];\n\n    if (!clips.length) return;\n\n    const re = data.useRegExp ? data.clip : wildcardToRegExp(data.clip);\n\n    for (let clip, i = 0; (clip = clips[i]); i++) {\n      if (clip.name.match(re)) {\n        const action = this.mixer.clipAction(clip, model);\n\n        action.enabled = true;\n        action.clampWhenFinished = data.clampWhenFinished;\n        if (data.duration) action.setDuration(data.duration);\n        if (data.timeScale !== 1) action.setEffectiveTimeScale(data.timeScale);\n        // animation-mixer.startAt and AnimationAction.startAt have very different meanings.\n        // animation-mixer.startAt indicates which frame in the animation to start at, in msecs.\n        // AnimationAction.startAt indicates when to start the animation (from the 1st frame),\n        // measured in global mixer time, in seconds.\n        action.startAt(this.mixer.time - data.startAt / 1000);\n        action\n          .setLoop(LoopMode[data.loop], data.repetitions)\n          .fadeIn(data.crossFadeDuration)\n          .play();\n        this.activeActions.push(action);\n      }\n    }\n  },\n\n  tick: function (t, dt) {\n    if (this.mixer && !isNaN(dt)) this.mixer.update(dt / 1000);\n  }\n});\n\n/**\n * Creates a RegExp from the given string, converting asterisks to .* expressions,\n * and escaping all other characters.\n */\nfunction wildcardToRegExp(s) {\n  return new RegExp('^' + s.split(/\\*+/).map(regExpEscape).join('.*') + '$');\n}\n\n/**\n * RegExp-escapes all characters in the given string.\n */\nfunction regExpEscape(s) {\n  return s.replace(/[|\\\\{}()[\\]^$+*?.]/g, '\\\\$&');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/animation-mixer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/collada-model-legacy.js":
/*!***************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/collada-model-legacy.js ***!
  \***************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("THREE.ColladaLoader = __webpack_require__(/*! ../../lib/ColladaLoader */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/ColladaLoader.js\");\n\n/**\n * collada-model-legacy\n *\n * Loader for COLLADA (.dae) format.\n */\nmodule.exports.Component = AFRAME.registerComponent('collada-model-legacy', {\n  schema: {type: 'asset'},\n\n  init: function () {\n    this.model = null;\n    this.loader = new THREE.ColladaLoader();\n  },\n\n  update: function () {\n    var self = this;\n    var el = this.el;\n    var src = this.data;\n    var rendererSystem = this.el.sceneEl.systems.renderer;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loader.load(src, function (colladaModel) {\n      self.model = colladaModel.scene;\n      self.model.traverse(function (object) {\n        if (object.isMesh) {\n          var material = object.material;\n          if (material.color) rendererSystem.applyColorCorrection(material.color);\n          if (material.map) rendererSystem.applyColorCorrection(material.map);\n          if (material.emissive) rendererSystem.applyColorCorrection(material.emissive);\n          if (material.emissiveMap) rendererSystem.applyColorCorrection(material.emissiveMap);\n        }\n      });\n      el.setObject3D('mesh', self.model);\n      el.emit('model-loaded', {format: 'collada', model: self.model});\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbG9hZGVycy9jb2xsYWRhLW1vZGVsLWxlZ2FjeS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxzQkFBc0IsbUJBQU8sQ0FBQywrSEFBeUI7O0FBRXZEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEIsV0FBVyxjQUFjOztBQUV6QjtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCOztBQUVoQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDtBQUNBLCtCQUErQixxQ0FBcUM7QUFDcEUsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9sb2FkZXJzL2NvbGxhZGEtbW9kZWwtbGVnYWN5LmpzPzM3MGMiXSwic291cmNlc0NvbnRlbnQiOlsiVEhSRUUuQ29sbGFkYUxvYWRlciA9IHJlcXVpcmUoJy4uLy4uL2xpYi9Db2xsYWRhTG9hZGVyJyk7XG5cbi8qKlxuICogY29sbGFkYS1tb2RlbC1sZWdhY3lcbiAqXG4gKiBMb2FkZXIgZm9yIENPTExBREEgKC5kYWUpIGZvcm1hdC5cbiAqL1xubW9kdWxlLmV4cG9ydHMuQ29tcG9uZW50ID0gQUZSQU1FLnJlZ2lzdGVyQ29tcG9uZW50KCdjb2xsYWRhLW1vZGVsLWxlZ2FjeScsIHtcbiAgc2NoZW1hOiB7dHlwZTogJ2Fzc2V0J30sXG5cbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMubW9kZWwgPSBudWxsO1xuICAgIHRoaXMubG9hZGVyID0gbmV3IFRIUkVFLkNvbGxhZGFMb2FkZXIoKTtcbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgdmFyIGVsID0gdGhpcy5lbDtcbiAgICB2YXIgc3JjID0gdGhpcy5kYXRhO1xuICAgIHZhciByZW5kZXJlclN5c3RlbSA9IHRoaXMuZWwuc2NlbmVFbC5zeXN0ZW1zLnJlbmRlcmVyO1xuXG4gICAgaWYgKCFzcmMpIHsgcmV0dXJuOyB9XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuXG4gICAgdGhpcy5sb2FkZXIubG9hZChzcmMsIGZ1bmN0aW9uIChjb2xsYWRhTW9kZWwpIHtcbiAgICAgIHNlbGYubW9kZWwgPSBjb2xsYWRhTW9kZWwuc2NlbmU7XG4gICAgICBzZWxmLm1vZGVsLnRyYXZlcnNlKGZ1bmN0aW9uIChvYmplY3QpIHtcbiAgICAgICAgaWYgKG9iamVjdC5pc01lc2gpIHtcbiAgICAgICAgICB2YXIgbWF0ZXJpYWwgPSBvYmplY3QubWF0ZXJpYWw7XG4gICAgICAgICAgaWYgKG1hdGVyaWFsLmNvbG9yKSByZW5kZXJlclN5c3RlbS5hcHBseUNvbG9yQ29ycmVjdGlvbihtYXRlcmlhbC5jb2xvcik7XG4gICAgICAgICAgaWYgKG1hdGVyaWFsLm1hcCkgcmVuZGVyZXJTeXN0ZW0uYXBwbHlDb2xvckNvcnJlY3Rpb24obWF0ZXJpYWwubWFwKTtcbiAgICAgICAgICBpZiAobWF0ZXJpYWwuZW1pc3NpdmUpIHJlbmRlcmVyU3lzdGVtLmFwcGx5Q29sb3JDb3JyZWN0aW9uKG1hdGVyaWFsLmVtaXNzaXZlKTtcbiAgICAgICAgICBpZiAobWF0ZXJpYWwuZW1pc3NpdmVNYXApIHJlbmRlcmVyU3lzdGVtLmFwcGx5Q29sb3JDb3JyZWN0aW9uKG1hdGVyaWFsLmVtaXNzaXZlTWFwKTtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgICBlbC5zZXRPYmplY3QzRCgnbWVzaCcsIHNlbGYubW9kZWwpO1xuICAgICAgZWwuZW1pdCgnbW9kZWwtbG9hZGVkJywge2Zvcm1hdDogJ2NvbGxhZGEnLCBtb2RlbDogc2VsZi5tb2RlbH0pO1xuICAgIH0pO1xuICB9LFxuXG4gIHJlbW92ZTogZnVuY3Rpb24gKCkge1xuICAgIGlmICghdGhpcy5tb2RlbCkgeyByZXR1cm47IH1cbiAgICB0aGlzLmVsLnJlbW92ZU9iamVjdDNEKCdtZXNoJyk7XG4gIH1cbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/collada-model-legacy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/fbx-model.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/fbx-model.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var three_addons_loaders_FBXLoader_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! three/addons/loaders/FBXLoader.js */ \"(ssr)/./node_modules/.pnpm/three@0.164.1/node_modules/three/examples/jsm/loaders/FBXLoader.js\");\n\nTHREE.FBXLoader = three_addons_loaders_FBXLoader_js__WEBPACK_IMPORTED_MODULE_0__.FBXLoader;\n\n/**\n * fbx-model\n *\n * Loader for FBX format.\n */\nAFRAME.registerComponent('fbx-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    const loader = new THREE.FBXLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, this.load.bind(this));\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'fbx', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbG9hZGVycy9mYngtbW9kZWwuanMiLCJtYXBwaW5ncyI6Ijs7QUFBOEQ7QUFDOUQsa0JBQWtCLHdFQUFTOztBQUUzQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixlQUFlO0FBQ2xDLG1CQUFtQjtBQUNuQixHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDRCQUE0QjtBQUM5RCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9sb2FkZXJzL2ZieC1tb2RlbC5qcz8zNDA0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZCWExvYWRlciB9IGZyb20gJ3RocmVlL2FkZG9ucy9sb2FkZXJzL0ZCWExvYWRlci5qcyc7XG5USFJFRS5GQlhMb2FkZXIgPSBGQlhMb2FkZXI7XG5cbi8qKlxuICogZmJ4LW1vZGVsXG4gKlxuICogTG9hZGVyIGZvciBGQlggZm9ybWF0LlxuICovXG5BRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ2ZieC1tb2RlbCcsIHtcbiAgc2NoZW1hOiB7XG4gICAgc3JjOiAgICAgICAgIHsgdHlwZTogJ2Fzc2V0JyB9LFxuICAgIGNyb3Nzb3JpZ2luOiB7IGRlZmF1bHQ6ICcnIH1cbiAgfSxcblxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5tb2RlbCA9IG51bGw7XG4gIH0sXG5cbiAgdXBkYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICBpZiAoIWRhdGEuc3JjKSByZXR1cm47XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuICAgIGNvbnN0IGxvYWRlciA9IG5ldyBUSFJFRS5GQlhMb2FkZXIoKTtcbiAgICBpZiAoZGF0YS5jcm9zc29yaWdpbikgbG9hZGVyLnNldENyb3NzT3JpZ2luKGRhdGEuY3Jvc3NvcmlnaW4pO1xuICAgIGxvYWRlci5sb2FkKGRhdGEuc3JjLCB0aGlzLmxvYWQuYmluZCh0aGlzKSk7XG4gIH0sXG5cbiAgbG9hZDogZnVuY3Rpb24gKG1vZGVsKSB7XG4gICAgdGhpcy5tb2RlbCA9IG1vZGVsO1xuICAgIHRoaXMuZWwuc2V0T2JqZWN0M0QoJ21lc2gnLCBtb2RlbCk7XG4gICAgdGhpcy5lbC5lbWl0KCdtb2RlbC1sb2FkZWQnLCB7Zm9ybWF0OiAnZmJ4JywgbW9kZWw6IG1vZGVsfSk7XG4gIH0sXG5cbiAgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKHRoaXMubW9kZWwpIHRoaXMuZWwucmVtb3ZlT2JqZWN0M0QoJ21lc2gnKTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/fbx-model.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/gltf-model-legacy.js":
/*!************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/gltf-model-legacy.js ***!
  \************************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const fetchScript = __webpack_require__(/*! ../../lib/fetch-script */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/lib/fetch-script.js\")();\n\nconst LOADER_SRC = 'https://cdn.jsdelivr.net/gh/mrdoob/three.js@r86/examples/js/loaders/GLTFLoader.js';\n\nconst loadLoader = (function () {\n  let promise;\n  return function () {\n    promise = promise || fetchScript(LOADER_SRC);\n    return promise;\n  };\n}());\n\n/**\n * Legacy loader for glTF 1.0 models.\n * Asynchronously loads THREE.GLTFLoader from jsdelivr.\n */\nmodule.exports = AFRAME.registerComponent('gltf-model-legacy', {\n  schema: {type: 'model'},\n\n  init: function () {\n    this.model = null;\n    this.loader = null;\n    this.loaderPromise = loadLoader().then(() => {\n      this.loader = new THREE.GLTFLoader();\n      this.loader.setCrossOrigin('Anonymous');\n    });\n  },\n\n  update: function () {\n    const self = this;\n    const el = this.el;\n    const src = this.data;\n\n    if (!src) { return; }\n\n    this.remove();\n\n    this.loaderPromise.then(() => {\n      this.loader.load(src, function gltfLoaded (gltfModel) {\n        self.model = gltfModel.scene;\n        self.model.animations = gltfModel.animations;\n        el.setObject3D('mesh', self.model);\n        el.emit('model-loaded', {format: 'gltf', model: self.model});\n      });\n    });\n  },\n\n  remove: function () {\n    if (!this.model) { return; }\n    this.el.removeObject3D('mesh');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbG9hZGVycy9nbHRmLW1vZGVsLWxlZ2FjeS5qcyIsIm1hcHBpbmdzIjoiQUFBQSxvQkFBb0IsbUJBQU8sQ0FBQyw2SEFBd0I7O0FBRXBEOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFdBQVcsY0FBYzs7QUFFekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsZ0JBQWdCOztBQUVoQjs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUNBQWlDLGtDQUFrQztBQUNuRSxPQUFPO0FBQ1AsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQSx1QkFBdUI7QUFDdkI7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9sb2FkZXJzL2dsdGYtbW9kZWwtbGVnYWN5LmpzP2JlZmUiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgZmV0Y2hTY3JpcHQgPSByZXF1aXJlKCcuLi8uLi9saWIvZmV0Y2gtc2NyaXB0JykoKTtcblxuY29uc3QgTE9BREVSX1NSQyA9ICdodHRwczovL2Nkbi5qc2RlbGl2ci5uZXQvZ2gvbXJkb29iL3RocmVlLmpzQHI4Ni9leGFtcGxlcy9qcy9sb2FkZXJzL0dMVEZMb2FkZXIuanMnO1xuXG5jb25zdCBsb2FkTG9hZGVyID0gKGZ1bmN0aW9uICgpIHtcbiAgbGV0IHByb21pc2U7XG4gIHJldHVybiBmdW5jdGlvbiAoKSB7XG4gICAgcHJvbWlzZSA9IHByb21pc2UgfHwgZmV0Y2hTY3JpcHQoTE9BREVSX1NSQyk7XG4gICAgcmV0dXJuIHByb21pc2U7XG4gIH07XG59KCkpO1xuXG4vKipcbiAqIExlZ2FjeSBsb2FkZXIgZm9yIGdsVEYgMS4wIG1vZGVscy5cbiAqIEFzeW5jaHJvbm91c2x5IGxvYWRzIFRIUkVFLkdMVEZMb2FkZXIgZnJvbSBqc2RlbGl2ci5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBBRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ2dsdGYtbW9kZWwtbGVnYWN5Jywge1xuICBzY2hlbWE6IHt0eXBlOiAnbW9kZWwnfSxcblxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5tb2RlbCA9IG51bGw7XG4gICAgdGhpcy5sb2FkZXIgPSBudWxsO1xuICAgIHRoaXMubG9hZGVyUHJvbWlzZSA9IGxvYWRMb2FkZXIoKS50aGVuKCgpID0+IHtcbiAgICAgIHRoaXMubG9hZGVyID0gbmV3IFRIUkVFLkdMVEZMb2FkZXIoKTtcbiAgICAgIHRoaXMubG9hZGVyLnNldENyb3NzT3JpZ2luKCdBbm9ueW1vdXMnKTtcbiAgICB9KTtcbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uICgpIHtcbiAgICBjb25zdCBzZWxmID0gdGhpcztcbiAgICBjb25zdCBlbCA9IHRoaXMuZWw7XG4gICAgY29uc3Qgc3JjID0gdGhpcy5kYXRhO1xuXG4gICAgaWYgKCFzcmMpIHsgcmV0dXJuOyB9XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuXG4gICAgdGhpcy5sb2FkZXJQcm9taXNlLnRoZW4oKCkgPT4ge1xuICAgICAgdGhpcy5sb2FkZXIubG9hZChzcmMsIGZ1bmN0aW9uIGdsdGZMb2FkZWQgKGdsdGZNb2RlbCkge1xuICAgICAgICBzZWxmLm1vZGVsID0gZ2x0Zk1vZGVsLnNjZW5lO1xuICAgICAgICBzZWxmLm1vZGVsLmFuaW1hdGlvbnMgPSBnbHRmTW9kZWwuYW5pbWF0aW9ucztcbiAgICAgICAgZWwuc2V0T2JqZWN0M0QoJ21lc2gnLCBzZWxmLm1vZGVsKTtcbiAgICAgICAgZWwuZW1pdCgnbW9kZWwtbG9hZGVkJywge2Zvcm1hdDogJ2dsdGYnLCBtb2RlbDogc2VsZi5tb2RlbH0pO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sXG5cbiAgcmVtb3ZlOiBmdW5jdGlvbiAoKSB7XG4gICAgaWYgKCF0aGlzLm1vZGVsKSB7IHJldHVybjsgfVxuICAgIHRoaXMuZWwucmVtb3ZlT2JqZWN0M0QoJ21lc2gnKTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/gltf-model-legacy.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/index.js":
/*!************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/index.js ***!
  \************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./animation-mixer */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/animation-mixer.js\");\n__webpack_require__(/*! ./collada-model-legacy */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/collada-model-legacy.js\");\n__webpack_require__(/*! ./fbx-model */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/fbx-model.js\");\n__webpack_require__(/*! ./gltf-model-legacy */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/gltf-model-legacy.js\");\n__webpack_require__(/*! ./object-model */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/object-model.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbG9hZGVycy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBTyxDQUFDLG1JQUFtQjtBQUMzQixtQkFBTyxDQUFDLDZJQUF3QjtBQUNoQyxtQkFBTyxDQUFDLHVIQUFhO0FBQ3JCLG1CQUFPLENBQUMsdUlBQXFCO0FBQzdCLG1CQUFPLENBQUMsNkhBQWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hX3Bvc3Rfc2NhcmNpdHkvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbG9hZGVycy9pbmRleC5qcz8xMzdjIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vYW5pbWF0aW9uLW1peGVyJyk7XG5yZXF1aXJlKCcuL2NvbGxhZGEtbW9kZWwtbGVnYWN5Jyk7XG5yZXF1aXJlKCcuL2ZieC1tb2RlbCcpO1xucmVxdWlyZSgnLi9nbHRmLW1vZGVsLWxlZ2FjeScpO1xucmVxdWlyZSgnLi9vYmplY3QtbW9kZWwnKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/object-model.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/object-model.js ***!
  \*******************************************************************************************************/
/***/ ((module) => {

eval("/**\n * object-model\n *\n * Loader for THREE.js JSON format. Somewhat confusingly, there are two different THREE.js formats,\n * both having the .json extension. This loader supports only THREE.ObjectLoader, which typically\n * includes multiple meshes or an entire scene.\n *\n * Check the console for errors, if in doubt. You may need to use `json-model` or\n * `blend-character-model` for some .js and .json files.\n *\n * See: https://clara.io/learn/user-guide/data_exchange/threejs_export\n */\nmodule.exports = AFRAME.registerComponent('object-model', {\n  schema: {\n    src:         { type: 'asset' },\n    crossorigin: { default: '' }\n  },\n\n  init: function () {\n    this.model = null;\n  },\n\n  update: function () {\n    let loader;\n    const data = this.data;\n    if (!data.src) return;\n\n    this.remove();\n    loader = new THREE.ObjectLoader();\n    if (data.crossorigin) loader.setCrossOrigin(data.crossorigin);\n    loader.load(data.src, (object) => {\n\n      // Enable skinning, if applicable.\n      object.traverse((o) => {\n        if (o instanceof THREE.SkinnedMesh && o.material) {\n          o.material.skinning = !!((o.geometry && o.geometry.bones) || []).length;\n        }\n      });\n\n      this.load(object);\n    });\n  },\n\n  load: function (model) {\n    this.model = model;\n    this.el.setObject3D('mesh', model);\n    this.el.emit('model-loaded', {format: 'json', model: model});\n  },\n\n  remove: function () {\n    if (this.model) this.el.removeObject3D('mesh');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbG9hZGVycy9vYmplY3QtbW9kZWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixlQUFlO0FBQ2xDLG1CQUFtQjtBQUNuQixHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPOztBQUVQO0FBQ0EsS0FBSztBQUNMLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLDZCQUE2QjtBQUMvRCxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9sb2FkZXJzL29iamVjdC1tb2RlbC5qcz81MDJhIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogb2JqZWN0LW1vZGVsXG4gKlxuICogTG9hZGVyIGZvciBUSFJFRS5qcyBKU09OIGZvcm1hdC4gU29tZXdoYXQgY29uZnVzaW5nbHksIHRoZXJlIGFyZSB0d28gZGlmZmVyZW50IFRIUkVFLmpzIGZvcm1hdHMsXG4gKiBib3RoIGhhdmluZyB0aGUgLmpzb24gZXh0ZW5zaW9uLiBUaGlzIGxvYWRlciBzdXBwb3J0cyBvbmx5IFRIUkVFLk9iamVjdExvYWRlciwgd2hpY2ggdHlwaWNhbGx5XG4gKiBpbmNsdWRlcyBtdWx0aXBsZSBtZXNoZXMgb3IgYW4gZW50aXJlIHNjZW5lLlxuICpcbiAqIENoZWNrIHRoZSBjb25zb2xlIGZvciBlcnJvcnMsIGlmIGluIGRvdWJ0LiBZb3UgbWF5IG5lZWQgdG8gdXNlIGBqc29uLW1vZGVsYCBvclxuICogYGJsZW5kLWNoYXJhY3Rlci1tb2RlbGAgZm9yIHNvbWUgLmpzIGFuZCAuanNvbiBmaWxlcy5cbiAqXG4gKiBTZWU6IGh0dHBzOi8vY2xhcmEuaW8vbGVhcm4vdXNlci1ndWlkZS9kYXRhX2V4Y2hhbmdlL3RocmVlanNfZXhwb3J0XG4gKi9cbm1vZHVsZS5leHBvcnRzID0gQUZSQU1FLnJlZ2lzdGVyQ29tcG9uZW50KCdvYmplY3QtbW9kZWwnLCB7XG4gIHNjaGVtYToge1xuICAgIHNyYzogICAgICAgICB7IHR5cGU6ICdhc3NldCcgfSxcbiAgICBjcm9zc29yaWdpbjogeyBkZWZhdWx0OiAnJyB9XG4gIH0sXG5cbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMubW9kZWwgPSBudWxsO1xuICB9LFxuXG4gIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIGxldCBsb2FkZXI7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICBpZiAoIWRhdGEuc3JjKSByZXR1cm47XG5cbiAgICB0aGlzLnJlbW92ZSgpO1xuICAgIGxvYWRlciA9IG5ldyBUSFJFRS5PYmplY3RMb2FkZXIoKTtcbiAgICBpZiAoZGF0YS5jcm9zc29yaWdpbikgbG9hZGVyLnNldENyb3NzT3JpZ2luKGRhdGEuY3Jvc3NvcmlnaW4pO1xuICAgIGxvYWRlci5sb2FkKGRhdGEuc3JjLCAob2JqZWN0KSA9PiB7XG5cbiAgICAgIC8vIEVuYWJsZSBza2lubmluZywgaWYgYXBwbGljYWJsZS5cbiAgICAgIG9iamVjdC50cmF2ZXJzZSgobykgPT4ge1xuICAgICAgICBpZiAobyBpbnN0YW5jZW9mIFRIUkVFLlNraW5uZWRNZXNoICYmIG8ubWF0ZXJpYWwpIHtcbiAgICAgICAgICBvLm1hdGVyaWFsLnNraW5uaW5nID0gISEoKG8uZ2VvbWV0cnkgJiYgby5nZW9tZXRyeS5ib25lcykgfHwgW10pLmxlbmd0aDtcbiAgICAgICAgfVxuICAgICAgfSk7XG5cbiAgICAgIHRoaXMubG9hZChvYmplY3QpO1xuICAgIH0pO1xuICB9LFxuXG4gIGxvYWQ6IGZ1bmN0aW9uIChtb2RlbCkge1xuICAgIHRoaXMubW9kZWwgPSBtb2RlbDtcbiAgICB0aGlzLmVsLnNldE9iamVjdDNEKCdtZXNoJywgbW9kZWwpO1xuICAgIHRoaXMuZWwuZW1pdCgnbW9kZWwtbG9hZGVkJywge2Zvcm1hdDogJ2pzb24nLCBtb2RlbDogbW9kZWx9KTtcbiAgfSxcblxuICByZW1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5tb2RlbCkgdGhpcy5lbC5yZW1vdmVPYmplY3QzRCgnbWVzaCcpO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/loaders/object-model.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/checkpoint.js":
/*!**************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/checkpoint.js ***!
  \**************************************************************************************************/
/***/ ((module) => {

eval("module.exports = AFRAME.registerComponent('checkpoint', {\n  schema: {\n    offset: {default: {x: 0, y: 0, z: 0}, type: 'vec3'}\n  },\n\n  init: function () {\n    this.active = false;\n    this.targetEl = null;\n    this.fire = this.fire.bind(this);\n    this.offset = new THREE.Vector3();\n  },\n\n  update: function () {\n    this.offset.copy(this.data.offset);\n  },\n\n  play: function () { this.el.addEventListener('click', this.fire); },\n  pause: function () { this.el.removeEventListener('click', this.fire); },\n  remove: function () { this.pause(); },\n\n  fire: function () {\n    const targetEl = this.el.sceneEl.querySelector('[checkpoint-controls]');\n    if (!targetEl) {\n      throw new Error('No `checkpoint-controls` component found.');\n    }\n    targetEl.components['checkpoint-controls'].setCheckpoint(this.el);\n  },\n\n  getOffset: function () {\n    return this.offset.copy(this.data.offset);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbWlzYy9jaGVja3BvaW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxhQUFhLFVBQVUsaUJBQWlCO0FBQ3hDLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUgsc0JBQXNCLCtDQUErQztBQUNyRSx1QkFBdUIsa0RBQWtEO0FBQ3pFLHdCQUF3QixlQUFlOztBQUV2QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9taXNjL2NoZWNrcG9pbnQuanM/YWIzYyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgnY2hlY2twb2ludCcsIHtcbiAgc2NoZW1hOiB7XG4gICAgb2Zmc2V0OiB7ZGVmYXVsdDoge3g6IDAsIHk6IDAsIHo6IDB9LCB0eXBlOiAndmVjMyd9XG4gIH0sXG5cbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuYWN0aXZlID0gZmFsc2U7XG4gICAgdGhpcy50YXJnZXRFbCA9IG51bGw7XG4gICAgdGhpcy5maXJlID0gdGhpcy5maXJlLmJpbmQodGhpcyk7XG4gICAgdGhpcy5vZmZzZXQgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICB9LFxuXG4gIHVwZGF0ZTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMub2Zmc2V0LmNvcHkodGhpcy5kYXRhLm9mZnNldCk7XG4gIH0sXG5cbiAgcGxheTogZnVuY3Rpb24gKCkgeyB0aGlzLmVsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5maXJlKTsgfSxcbiAgcGF1c2U6IGZ1bmN0aW9uICgpIHsgdGhpcy5lbC5yZW1vdmVFdmVudExpc3RlbmVyKCdjbGljaycsIHRoaXMuZmlyZSk7IH0sXG4gIHJlbW92ZTogZnVuY3Rpb24gKCkgeyB0aGlzLnBhdXNlKCk7IH0sXG5cbiAgZmlyZTogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IHRhcmdldEVsID0gdGhpcy5lbC5zY2VuZUVsLnF1ZXJ5U2VsZWN0b3IoJ1tjaGVja3BvaW50LWNvbnRyb2xzXScpO1xuICAgIGlmICghdGFyZ2V0RWwpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcignTm8gYGNoZWNrcG9pbnQtY29udHJvbHNgIGNvbXBvbmVudCBmb3VuZC4nKTtcbiAgICB9XG4gICAgdGFyZ2V0RWwuY29tcG9uZW50c1snY2hlY2twb2ludC1jb250cm9scyddLnNldENoZWNrcG9pbnQodGhpcy5lbCk7XG4gIH0sXG5cbiAgZ2V0T2Zmc2V0OiBmdW5jdGlvbiAoKSB7XG4gICAgcmV0dXJuIHRoaXMub2Zmc2V0LmNvcHkodGhpcy5kYXRhLm9mZnNldCk7XG4gIH1cbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/checkpoint.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/cube-env-map.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/cube-env-map.js ***!
  \****************************************************************************************************/
/***/ ((module) => {

eval("/**\n * @param  {Array<THREE.Material>|THREE.Material} material\n * @return {Array<THREE.Material>}\n */\nfunction ensureMaterialArray (material) {\n  if (!material) {\n    return [];\n  } else if (Array.isArray(material)) {\n    return material;\n  } else if (material.materials) {\n    return material.materials;\n  } else {\n    return [material];\n  }\n}\n\n/**\n * @param  {THREE.Object3D} mesh\n * @param  {Array<string>} materialNames\n * @param  {THREE.Texture} envMap\n * @param  {number} reflectivity  [description]\n */\nfunction applyEnvMap (mesh, materialNames, envMap, reflectivity) {\n  if (!mesh) return;\n\n  materialNames = materialNames || [];\n\n  mesh.traverse((node) => {\n\n    if (!node.isMesh) return;\n\n    const meshMaterials = ensureMaterialArray(node.material);\n\n    meshMaterials.forEach((material) => {\n\n      if (material && !('envMap' in material)) return;\n      if (materialNames.length && materialNames.indexOf(material.name) === -1) return;\n\n      material.envMap = envMap;\n      material.reflectivity = reflectivity;\n      material.needsUpdate = true;\n\n    });\n\n  });\n}\n\n/**\n * Specifies an envMap on an entity, without replacing any existing material\n * properties.\n */\nmodule.exports = AFRAME.registerComponent('cube-env-map', {\n  multiple: true,\n\n  schema: {\n    path: {default: ''},\n    extension: {default: 'jpg', oneOf: ['jpg', 'png']},\n    enableBackground: {default: false},\n    reflectivity: {default: 1, min: 0, max: 1},\n    materials: {default: []}\n  },\n\n  init: function () {\n    const data = this.data;\n\n    this.texture = new THREE.CubeTextureLoader().load([\n      data.path + 'posx.' + data.extension, data.path + 'negx.' + data.extension,\n      data.path + 'posy.' + data.extension, data.path + 'negy.' + data.extension,\n      data.path + 'posz.' + data.extension, data.path + 'negz.' + data.extension\n    ]);\n    this.texture.format = THREE.RGBAFormat;\n\n    this.object3dsetHandler = () => {\n      const mesh = this.el.getObject3D('mesh');\n      const data = this.data;\n      applyEnvMap(mesh, data.materials, this.texture, data.reflectivity);\n    };\n\n    this.object3dsetHandler();\n    this.el.addEventListener('object3dset', this.object3dsetHandler);\n    \n  },\n\n  update: function (oldData) {\n    const data = this.data;\n    const mesh = this.el.getObject3D('mesh');\n\n    let addedMaterialNames = [];\n    let removedMaterialNames = [];\n\n    if (data.materials.length) {\n      if (oldData.materials) {\n        addedMaterialNames = data.materials.filter((name) => !oldData.materials.includes(name));\n        removedMaterialNames = oldData.materials.filter((name) => !data.materials.includes(name));\n      } else {\n        addedMaterialNames = data.materials;\n      }\n    }\n    if (addedMaterialNames.length) {\n      applyEnvMap(mesh, addedMaterialNames, this.texture, data.reflectivity);\n    }\n    if (removedMaterialNames.length) {\n      applyEnvMap(mesh, removedMaterialNames, null, 1);\n    }\n\n    if (oldData.materials && data.reflectivity !== oldData.reflectivity) {\n      const maintainedMaterialNames = data.materials\n        .filter((name) => oldData.materials.includes(name));\n      if (maintainedMaterialNames.length) {\n        applyEnvMap(mesh, maintainedMaterialNames, this.texture, data.reflectivity);\n      }\n    }\n\n    if (this.data.enableBackground && !oldData.enableBackground) {\n      this.setBackground(this.texture);\n    } else if (!this.data.enableBackground && oldData.enableBackground) {\n      this.setBackground(null);\n    }\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.object3dsetHandler);\n    const mesh = this.el.getObject3D('mesh');\n    const data = this.data;\n\n    applyEnvMap(mesh, data.materials, null, 1);\n    if (data.enableBackground) this.setBackground(null);\n  },\n\n  setBackground: function (texture) {\n    this.el.sceneEl.object3D.background = texture;\n  }\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbWlzYy9jdWJlLWVudi1tYXAuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQSxZQUFZLHNDQUFzQztBQUNsRCxZQUFZO0FBQ1o7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQSxJQUFJO0FBQ0o7QUFDQTtBQUNBOztBQUVBO0FBQ0EsWUFBWSxnQkFBZ0I7QUFDNUIsWUFBWSxlQUFlO0FBQzNCLFlBQVksZUFBZTtBQUMzQixZQUFZLFFBQVE7QUFDcEI7QUFDQTtBQUNBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBLEtBQUs7O0FBRUwsR0FBRztBQUNIOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBLFdBQVcsWUFBWTtBQUN2QixnQkFBZ0Isc0NBQXNDO0FBQ3RELHVCQUF1QixlQUFlO0FBQ3RDLG1CQUFtQiwyQkFBMkI7QUFDOUMsZ0JBQWdCO0FBQ2hCLEdBQUc7O0FBRUg7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsTUFBTTtBQUNOO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9taXNjL2N1YmUtZW52LW1hcC5qcz9mMDc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQHBhcmFtICB7QXJyYXk8VEhSRUUuTWF0ZXJpYWw+fFRIUkVFLk1hdGVyaWFsfSBtYXRlcmlhbFxuICogQHJldHVybiB7QXJyYXk8VEhSRUUuTWF0ZXJpYWw+fVxuICovXG5mdW5jdGlvbiBlbnN1cmVNYXRlcmlhbEFycmF5IChtYXRlcmlhbCkge1xuICBpZiAoIW1hdGVyaWFsKSB7XG4gICAgcmV0dXJuIFtdO1xuICB9IGVsc2UgaWYgKEFycmF5LmlzQXJyYXkobWF0ZXJpYWwpKSB7XG4gICAgcmV0dXJuIG1hdGVyaWFsO1xuICB9IGVsc2UgaWYgKG1hdGVyaWFsLm1hdGVyaWFscykge1xuICAgIHJldHVybiBtYXRlcmlhbC5tYXRlcmlhbHM7XG4gIH0gZWxzZSB7XG4gICAgcmV0dXJuIFttYXRlcmlhbF07XG4gIH1cbn1cblxuLyoqXG4gKiBAcGFyYW0gIHtUSFJFRS5PYmplY3QzRH0gbWVzaFxuICogQHBhcmFtICB7QXJyYXk8c3RyaW5nPn0gbWF0ZXJpYWxOYW1lc1xuICogQHBhcmFtICB7VEhSRUUuVGV4dHVyZX0gZW52TWFwXG4gKiBAcGFyYW0gIHtudW1iZXJ9IHJlZmxlY3Rpdml0eSAgW2Rlc2NyaXB0aW9uXVxuICovXG5mdW5jdGlvbiBhcHBseUVudk1hcCAobWVzaCwgbWF0ZXJpYWxOYW1lcywgZW52TWFwLCByZWZsZWN0aXZpdHkpIHtcbiAgaWYgKCFtZXNoKSByZXR1cm47XG5cbiAgbWF0ZXJpYWxOYW1lcyA9IG1hdGVyaWFsTmFtZXMgfHwgW107XG5cbiAgbWVzaC50cmF2ZXJzZSgobm9kZSkgPT4ge1xuXG4gICAgaWYgKCFub2RlLmlzTWVzaCkgcmV0dXJuO1xuXG4gICAgY29uc3QgbWVzaE1hdGVyaWFscyA9IGVuc3VyZU1hdGVyaWFsQXJyYXkobm9kZS5tYXRlcmlhbCk7XG5cbiAgICBtZXNoTWF0ZXJpYWxzLmZvckVhY2goKG1hdGVyaWFsKSA9PiB7XG5cbiAgICAgIGlmIChtYXRlcmlhbCAmJiAhKCdlbnZNYXAnIGluIG1hdGVyaWFsKSkgcmV0dXJuO1xuICAgICAgaWYgKG1hdGVyaWFsTmFtZXMubGVuZ3RoICYmIG1hdGVyaWFsTmFtZXMuaW5kZXhPZihtYXRlcmlhbC5uYW1lKSA9PT0gLTEpIHJldHVybjtcblxuICAgICAgbWF0ZXJpYWwuZW52TWFwID0gZW52TWFwO1xuICAgICAgbWF0ZXJpYWwucmVmbGVjdGl2aXR5ID0gcmVmbGVjdGl2aXR5O1xuICAgICAgbWF0ZXJpYWwubmVlZHNVcGRhdGUgPSB0cnVlO1xuXG4gICAgfSk7XG5cbiAgfSk7XG59XG5cbi8qKlxuICogU3BlY2lmaWVzIGFuIGVudk1hcCBvbiBhbiBlbnRpdHksIHdpdGhvdXQgcmVwbGFjaW5nIGFueSBleGlzdGluZyBtYXRlcmlhbFxuICogcHJvcGVydGllcy5cbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBBRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ2N1YmUtZW52LW1hcCcsIHtcbiAgbXVsdGlwbGU6IHRydWUsXG5cbiAgc2NoZW1hOiB7XG4gICAgcGF0aDoge2RlZmF1bHQ6ICcnfSxcbiAgICBleHRlbnNpb246IHtkZWZhdWx0OiAnanBnJywgb25lT2Y6IFsnanBnJywgJ3BuZyddfSxcbiAgICBlbmFibGVCYWNrZ3JvdW5kOiB7ZGVmYXVsdDogZmFsc2V9LFxuICAgIHJlZmxlY3Rpdml0eToge2RlZmF1bHQ6IDEsIG1pbjogMCwgbWF4OiAxfSxcbiAgICBtYXRlcmlhbHM6IHtkZWZhdWx0OiBbXX1cbiAgfSxcblxuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YTtcblxuICAgIHRoaXMudGV4dHVyZSA9IG5ldyBUSFJFRS5DdWJlVGV4dHVyZUxvYWRlcigpLmxvYWQoW1xuICAgICAgZGF0YS5wYXRoICsgJ3Bvc3guJyArIGRhdGEuZXh0ZW5zaW9uLCBkYXRhLnBhdGggKyAnbmVneC4nICsgZGF0YS5leHRlbnNpb24sXG4gICAgICBkYXRhLnBhdGggKyAncG9zeS4nICsgZGF0YS5leHRlbnNpb24sIGRhdGEucGF0aCArICduZWd5LicgKyBkYXRhLmV4dGVuc2lvbixcbiAgICAgIGRhdGEucGF0aCArICdwb3N6LicgKyBkYXRhLmV4dGVuc2lvbiwgZGF0YS5wYXRoICsgJ25lZ3ouJyArIGRhdGEuZXh0ZW5zaW9uXG4gICAgXSk7XG4gICAgdGhpcy50ZXh0dXJlLmZvcm1hdCA9IFRIUkVFLlJHQkFGb3JtYXQ7XG5cbiAgICB0aGlzLm9iamVjdDNkc2V0SGFuZGxlciA9ICgpID0+IHtcbiAgICAgIGNvbnN0IG1lc2ggPSB0aGlzLmVsLmdldE9iamVjdDNEKCdtZXNoJyk7XG4gICAgICBjb25zdCBkYXRhID0gdGhpcy5kYXRhO1xuICAgICAgYXBwbHlFbnZNYXAobWVzaCwgZGF0YS5tYXRlcmlhbHMsIHRoaXMudGV4dHVyZSwgZGF0YS5yZWZsZWN0aXZpdHkpO1xuICAgIH07XG5cbiAgICB0aGlzLm9iamVjdDNkc2V0SGFuZGxlcigpO1xuICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignb2JqZWN0M2RzZXQnLCB0aGlzLm9iamVjdDNkc2V0SGFuZGxlcik7XG4gICAgXG4gIH0sXG5cbiAgdXBkYXRlOiBmdW5jdGlvbiAob2xkRGF0YSkge1xuICAgIGNvbnN0IGRhdGEgPSB0aGlzLmRhdGE7XG4gICAgY29uc3QgbWVzaCA9IHRoaXMuZWwuZ2V0T2JqZWN0M0QoJ21lc2gnKTtcblxuICAgIGxldCBhZGRlZE1hdGVyaWFsTmFtZXMgPSBbXTtcbiAgICBsZXQgcmVtb3ZlZE1hdGVyaWFsTmFtZXMgPSBbXTtcblxuICAgIGlmIChkYXRhLm1hdGVyaWFscy5sZW5ndGgpIHtcbiAgICAgIGlmIChvbGREYXRhLm1hdGVyaWFscykge1xuICAgICAgICBhZGRlZE1hdGVyaWFsTmFtZXMgPSBkYXRhLm1hdGVyaWFscy5maWx0ZXIoKG5hbWUpID0+ICFvbGREYXRhLm1hdGVyaWFscy5pbmNsdWRlcyhuYW1lKSk7XG4gICAgICAgIHJlbW92ZWRNYXRlcmlhbE5hbWVzID0gb2xkRGF0YS5tYXRlcmlhbHMuZmlsdGVyKChuYW1lKSA9PiAhZGF0YS5tYXRlcmlhbHMuaW5jbHVkZXMobmFtZSkpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgYWRkZWRNYXRlcmlhbE5hbWVzID0gZGF0YS5tYXRlcmlhbHM7XG4gICAgICB9XG4gICAgfVxuICAgIGlmIChhZGRlZE1hdGVyaWFsTmFtZXMubGVuZ3RoKSB7XG4gICAgICBhcHBseUVudk1hcChtZXNoLCBhZGRlZE1hdGVyaWFsTmFtZXMsIHRoaXMudGV4dHVyZSwgZGF0YS5yZWZsZWN0aXZpdHkpO1xuICAgIH1cbiAgICBpZiAocmVtb3ZlZE1hdGVyaWFsTmFtZXMubGVuZ3RoKSB7XG4gICAgICBhcHBseUVudk1hcChtZXNoLCByZW1vdmVkTWF0ZXJpYWxOYW1lcywgbnVsbCwgMSk7XG4gICAgfVxuXG4gICAgaWYgKG9sZERhdGEubWF0ZXJpYWxzICYmIGRhdGEucmVmbGVjdGl2aXR5ICE9PSBvbGREYXRhLnJlZmxlY3Rpdml0eSkge1xuICAgICAgY29uc3QgbWFpbnRhaW5lZE1hdGVyaWFsTmFtZXMgPSBkYXRhLm1hdGVyaWFsc1xuICAgICAgICAuZmlsdGVyKChuYW1lKSA9PiBvbGREYXRhLm1hdGVyaWFscy5pbmNsdWRlcyhuYW1lKSk7XG4gICAgICBpZiAobWFpbnRhaW5lZE1hdGVyaWFsTmFtZXMubGVuZ3RoKSB7XG4gICAgICAgIGFwcGx5RW52TWFwKG1lc2gsIG1haW50YWluZWRNYXRlcmlhbE5hbWVzLCB0aGlzLnRleHR1cmUsIGRhdGEucmVmbGVjdGl2aXR5KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBpZiAodGhpcy5kYXRhLmVuYWJsZUJhY2tncm91bmQgJiYgIW9sZERhdGEuZW5hYmxlQmFja2dyb3VuZCkge1xuICAgICAgdGhpcy5zZXRCYWNrZ3JvdW5kKHRoaXMudGV4dHVyZSk7XG4gICAgfSBlbHNlIGlmICghdGhpcy5kYXRhLmVuYWJsZUJhY2tncm91bmQgJiYgb2xkRGF0YS5lbmFibGVCYWNrZ3JvdW5kKSB7XG4gICAgICB0aGlzLnNldEJhY2tncm91bmQobnVsbCk7XG4gICAgfVxuICB9LFxuXG4gIHJlbW92ZTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignb2JqZWN0M2RzZXQnLCB0aGlzLm9iamVjdDNkc2V0SGFuZGxlcik7XG4gICAgY29uc3QgbWVzaCA9IHRoaXMuZWwuZ2V0T2JqZWN0M0QoJ21lc2gnKTtcbiAgICBjb25zdCBkYXRhID0gdGhpcy5kYXRhO1xuXG4gICAgYXBwbHlFbnZNYXAobWVzaCwgZGF0YS5tYXRlcmlhbHMsIG51bGwsIDEpO1xuICAgIGlmIChkYXRhLmVuYWJsZUJhY2tncm91bmQpIHRoaXMuc2V0QmFja2dyb3VuZChudWxsKTtcbiAgfSxcblxuICBzZXRCYWNrZ3JvdW5kOiBmdW5jdGlvbiAodGV4dHVyZSkge1xuICAgIHRoaXMuZWwuc2NlbmVFbC5vYmplY3QzRC5iYWNrZ3JvdW5kID0gdGV4dHVyZTtcbiAgfVxufSk7Il0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/cube-env-map.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/grab.js":
/*!********************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/grab.js ***!
  \********************************************************************************************/
/***/ ((module) => {

eval("/* global CANNON */\n\n/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Handles events coming from the hand-controls.\n * Determines if the entity is grabbed or released.\n * Updates its position to move along the controller.\n */\nmodule.exports = AFRAME.registerComponent('grab', {\n  init: function () {\n    this.system = this.el.sceneEl.systems.physics;\n\n    this.GRABBED_STATE = 'grabbed';\n\n    this.grabbing = false;\n    this.hitEl =      /** @type {AFRAME.Element}    */ null;\n    this.physics =    /** @type {AFRAME.System}     */ this.el.sceneEl.systems.physics;\n    this.constraint = /** @type {CANNON.Constraint} */ null;\n\n    // Bind event handlers\n    this.onHit = this.onHit.bind(this);\n    this.onGripOpen = this.onGripOpen.bind(this);\n    this.onGripClose = this.onGripClose.bind(this);\n  },\n\n  play: function () {\n    const el = this.el;\n    el.addEventListener('hit', this.onHit);\n    el.addEventListener('gripdown', this.onGripClose);\n    el.addEventListener('gripup', this.onGripOpen);\n    el.addEventListener('trackpaddown', this.onGripClose);\n    el.addEventListener('trackpadup', this.onGripOpen);\n    el.addEventListener('triggerdown', this.onGripClose);\n    el.addEventListener('triggerup', this.onGripOpen);\n  },\n\n  pause: function () {\n    const el = this.el;\n    el.removeEventListener('hit', this.onHit);\n    el.removeEventListener('gripdown', this.onGripClose);\n    el.removeEventListener('gripup', this.onGripOpen);\n    el.removeEventListener('trackpaddown', this.onGripClose);\n    el.removeEventListener('trackpadup', this.onGripOpen);\n    el.removeEventListener('triggerdown', this.onGripClose);\n    el.removeEventListener('triggerup', this.onGripOpen);\n  },\n\n  onGripClose: function () {\n    this.grabbing = true;\n  },\n\n  onGripOpen: function () {\n    const hitEl = this.hitEl;\n    this.grabbing = false;\n    if (!hitEl) { return; }\n    hitEl.removeState(this.GRABBED_STATE);\n    this.hitEl = undefined;\n    this.system.removeConstraint(this.constraint);\n    this.constraint = null;\n  },\n\n  onHit: function (evt) {\n    const hitEl = evt.detail.el;\n    // If the element is already grabbed (it could be grabbed by another controller).\n    // If the hand is not grabbing the element does not stick.\n    // If we're already grabbing something you can't grab again.\n    if (hitEl.is(this.GRABBED_STATE) || !this.grabbing || this.hitEl) { return; }\n    hitEl.addState(this.GRABBED_STATE);\n    this.hitEl = hitEl;\n    this.constraint = new CANNON.LockConstraint(this.el.body, hitEl.body);\n    this.system.addConstraint(this.constraint);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbWlzYy9ncmFiLmpzIiwibWFwcGluZ3MiOiJBQUFBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0EsaUNBQWlDLG1CQUFtQjtBQUNwRCxpQ0FBaUMsbUJBQW1CO0FBQ3BELGlDQUFpQyxtQkFBbUI7O0FBRXBEO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFO0FBQ3hFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hX3Bvc3Rfc2NhcmNpdHkvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbWlzYy9ncmFiLmpzPzdjYmEiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZ2xvYmFsIENBTk5PTiAqL1xuXG4vKipcbiAqIEJhc2VkIG9uIGFmcmFtZS9leGFtcGxlcy9zaG93Y2FzZS90cmFja2VkLWNvbnRyb2xzLlxuICpcbiAqIEhhbmRsZXMgZXZlbnRzIGNvbWluZyBmcm9tIHRoZSBoYW5kLWNvbnRyb2xzLlxuICogRGV0ZXJtaW5lcyBpZiB0aGUgZW50aXR5IGlzIGdyYWJiZWQgb3IgcmVsZWFzZWQuXG4gKiBVcGRhdGVzIGl0cyBwb3NpdGlvbiB0byBtb3ZlIGFsb25nIHRoZSBjb250cm9sbGVyLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IEFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgnZ3JhYicsIHtcbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuc3lzdGVtID0gdGhpcy5lbC5zY2VuZUVsLnN5c3RlbXMucGh5c2ljcztcblxuICAgIHRoaXMuR1JBQkJFRF9TVEFURSA9ICdncmFiYmVkJztcblxuICAgIHRoaXMuZ3JhYmJpbmcgPSBmYWxzZTtcbiAgICB0aGlzLmhpdEVsID0gICAgICAvKiogQHR5cGUge0FGUkFNRS5FbGVtZW50fSAgICAqLyBudWxsO1xuICAgIHRoaXMucGh5c2ljcyA9ICAgIC8qKiBAdHlwZSB7QUZSQU1FLlN5c3RlbX0gICAgICovIHRoaXMuZWwuc2NlbmVFbC5zeXN0ZW1zLnBoeXNpY3M7XG4gICAgdGhpcy5jb25zdHJhaW50ID0gLyoqIEB0eXBlIHtDQU5OT04uQ29uc3RyYWludH0gKi8gbnVsbDtcblxuICAgIC8vIEJpbmQgZXZlbnQgaGFuZGxlcnNcbiAgICB0aGlzLm9uSGl0ID0gdGhpcy5vbkhpdC5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25HcmlwT3BlbiA9IHRoaXMub25HcmlwT3Blbi5iaW5kKHRoaXMpO1xuICAgIHRoaXMub25HcmlwQ2xvc2UgPSB0aGlzLm9uR3JpcENsb3NlLmJpbmQodGhpcyk7XG4gIH0sXG5cbiAgcGxheTogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGVsID0gdGhpcy5lbDtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdoaXQnLCB0aGlzLm9uSGl0KTtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCdncmlwZG93bicsIHRoaXMub25HcmlwQ2xvc2UpO1xuICAgIGVsLmFkZEV2ZW50TGlzdGVuZXIoJ2dyaXB1cCcsIHRoaXMub25HcmlwT3Blbik7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigndHJhY2twYWRkb3duJywgdGhpcy5vbkdyaXBDbG9zZSk7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigndHJhY2twYWR1cCcsIHRoaXMub25HcmlwT3Blbik7XG4gICAgZWwuYWRkRXZlbnRMaXN0ZW5lcigndHJpZ2dlcmRvd24nLCB0aGlzLm9uR3JpcENsb3NlKTtcbiAgICBlbC5hZGRFdmVudExpc3RlbmVyKCd0cmlnZ2VydXAnLCB0aGlzLm9uR3JpcE9wZW4pO1xuICB9LFxuXG4gIHBhdXNlOiBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgZWwgPSB0aGlzLmVsO1xuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2hpdCcsIHRoaXMub25IaXQpO1xuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2dyaXBkb3duJywgdGhpcy5vbkdyaXBDbG9zZSk7XG4gICAgZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignZ3JpcHVwJywgdGhpcy5vbkdyaXBPcGVuKTtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFja3BhZGRvd24nLCB0aGlzLm9uR3JpcENsb3NlKTtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmFja3BhZHVwJywgdGhpcy5vbkdyaXBPcGVuKTtcbiAgICBlbC5yZW1vdmVFdmVudExpc3RlbmVyKCd0cmlnZ2VyZG93bicsIHRoaXMub25HcmlwQ2xvc2UpO1xuICAgIGVsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ3RyaWdnZXJ1cCcsIHRoaXMub25HcmlwT3Blbik7XG4gIH0sXG5cbiAgb25HcmlwQ2xvc2U6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmdyYWJiaW5nID0gdHJ1ZTtcbiAgfSxcblxuICBvbkdyaXBPcGVuOiBmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgaGl0RWwgPSB0aGlzLmhpdEVsO1xuICAgIHRoaXMuZ3JhYmJpbmcgPSBmYWxzZTtcbiAgICBpZiAoIWhpdEVsKSB7IHJldHVybjsgfVxuICAgIGhpdEVsLnJlbW92ZVN0YXRlKHRoaXMuR1JBQkJFRF9TVEFURSk7XG4gICAgdGhpcy5oaXRFbCA9IHVuZGVmaW5lZDtcbiAgICB0aGlzLnN5c3RlbS5yZW1vdmVDb25zdHJhaW50KHRoaXMuY29uc3RyYWludCk7XG4gICAgdGhpcy5jb25zdHJhaW50ID0gbnVsbDtcbiAgfSxcblxuICBvbkhpdDogZnVuY3Rpb24gKGV2dCkge1xuICAgIGNvbnN0IGhpdEVsID0gZXZ0LmRldGFpbC5lbDtcbiAgICAvLyBJZiB0aGUgZWxlbWVudCBpcyBhbHJlYWR5IGdyYWJiZWQgKGl0IGNvdWxkIGJlIGdyYWJiZWQgYnkgYW5vdGhlciBjb250cm9sbGVyKS5cbiAgICAvLyBJZiB0aGUgaGFuZCBpcyBub3QgZ3JhYmJpbmcgdGhlIGVsZW1lbnQgZG9lcyBub3Qgc3RpY2suXG4gICAgLy8gSWYgd2UncmUgYWxyZWFkeSBncmFiYmluZyBzb21ldGhpbmcgeW91IGNhbid0IGdyYWIgYWdhaW4uXG4gICAgaWYgKGhpdEVsLmlzKHRoaXMuR1JBQkJFRF9TVEFURSkgfHwgIXRoaXMuZ3JhYmJpbmcgfHwgdGhpcy5oaXRFbCkgeyByZXR1cm47IH1cbiAgICBoaXRFbC5hZGRTdGF0ZSh0aGlzLkdSQUJCRURfU1RBVEUpO1xuICAgIHRoaXMuaGl0RWwgPSBoaXRFbDtcbiAgICB0aGlzLmNvbnN0cmFpbnQgPSBuZXcgQ0FOTk9OLkxvY2tDb25zdHJhaW50KHRoaXMuZWwuYm9keSwgaGl0RWwuYm9keSk7XG4gICAgdGhpcy5zeXN0ZW0uYWRkQ29uc3RyYWludCh0aGlzLmNvbnN0cmFpbnQpO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/grab.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/index.js":
/*!*********************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/index.js ***!
  \*********************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./checkpoint */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/checkpoint.js\");\n__webpack_require__(/*! ./cube-env-map */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/cube-env-map.js\");\n__webpack_require__(/*! ./grab */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/grab.js\");\n__webpack_require__(/*! ./normal-material */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/normal-material.js\");\n__webpack_require__(/*! ./sphere-collider */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/sphere-collider.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbWlzYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBTyxDQUFDLHNIQUFjO0FBQ3RCLG1CQUFPLENBQUMsMEhBQWdCO0FBQ3hCLG1CQUFPLENBQUMsMEdBQVE7QUFDaEIsbUJBQU8sQ0FBQyxnSUFBbUI7QUFDM0IsbUJBQU8sQ0FBQyxnSUFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9taXNjL2luZGV4LmpzPzIzNzgiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnLi9jaGVja3BvaW50Jyk7XG5yZXF1aXJlKCcuL2N1YmUtZW52LW1hcCcpO1xucmVxdWlyZSgnLi9ncmFiJyk7XG5yZXF1aXJlKCcuL25vcm1hbC1tYXRlcmlhbCcpO1xucmVxdWlyZSgnLi9zcGhlcmUtY29sbGlkZXInKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/normal-material.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/normal-material.js ***!
  \*******************************************************************************************************/
/***/ ((module) => {

eval("/**\n * Recursively applies a MeshNormalMaterial to the entity, such that\n * face colors are determined by their orientation. Helpful for\n * debugging geometry\n */\nmodule.exports = AFRAME.registerComponent('normal-material', {\n  init: function () {\n    this.material = new THREE.MeshNormalMaterial({flatShading: true});\n    this.applyMaterial = this.applyMaterial.bind(this);\n    this.el.addEventListener('object3dset', this.applyMaterial);\n    this.applyMaterial();\n  },\n\n  remove: function () {\n    this.el.removeEventListener('object3dset', this.applyMaterial);\n  },\n\n  applyMaterial: function () {\n    this.el.object3D.traverse((node) => {\n      if (node.isMesh) node.material = this.material;\n    });\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvbWlzYy9ub3JtYWwtbWF0ZXJpYWwuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrREFBa0Qsa0JBQWtCO0FBQ3BFO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYV9wb3N0X3NjYXJjaXR5Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2FmcmFtZS1leHRyYXNANy41LjEvbm9kZV9tb2R1bGVzL2FmcmFtZS1leHRyYXMvc3JjL21pc2Mvbm9ybWFsLW1hdGVyaWFsLmpzPzFjOWMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBSZWN1cnNpdmVseSBhcHBsaWVzIGEgTWVzaE5vcm1hbE1hdGVyaWFsIHRvIHRoZSBlbnRpdHksIHN1Y2ggdGhhdFxuICogZmFjZSBjb2xvcnMgYXJlIGRldGVybWluZWQgYnkgdGhlaXIgb3JpZW50YXRpb24uIEhlbHBmdWwgZm9yXG4gKiBkZWJ1Z2dpbmcgZ2VvbWV0cnlcbiAqL1xubW9kdWxlLmV4cG9ydHMgPSBBRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ25vcm1hbC1tYXRlcmlhbCcsIHtcbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMubWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaE5vcm1hbE1hdGVyaWFsKHtmbGF0U2hhZGluZzogdHJ1ZX0pO1xuICAgIHRoaXMuYXBwbHlNYXRlcmlhbCA9IHRoaXMuYXBwbHlNYXRlcmlhbC5iaW5kKHRoaXMpO1xuICAgIHRoaXMuZWwuYWRkRXZlbnRMaXN0ZW5lcignb2JqZWN0M2RzZXQnLCB0aGlzLmFwcGx5TWF0ZXJpYWwpO1xuICAgIHRoaXMuYXBwbHlNYXRlcmlhbCgpO1xuICB9LFxuXG4gIHJlbW92ZTogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuZWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignb2JqZWN0M2RzZXQnLCB0aGlzLmFwcGx5TWF0ZXJpYWwpO1xuICB9LFxuXG4gIGFwcGx5TWF0ZXJpYWw6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmVsLm9iamVjdDNELnRyYXZlcnNlKChub2RlKSA9PiB7XG4gICAgICBpZiAobm9kZS5pc01lc2gpIG5vZGUubWF0ZXJpYWwgPSB0aGlzLm1hdGVyaWFsO1xuICAgIH0pO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/normal-material.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/sphere-collider.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/sphere-collider.js ***!
  \*******************************************************************************************************/
/***/ ((module) => {

eval("/**\n * Based on aframe/examples/showcase/tracked-controls.\n *\n * Implement bounding sphere collision detection for entities with a mesh.\n * Sets the specified state on the intersected entities.\n *\n * @property {string} objects - Selector of the entities to test for collision.\n * @property {string} state - State to set on collided entities.\n *\n */\nmodule.exports = AFRAME.registerComponent('sphere-collider', {\n  schema: {\n    enabled: {default: true},\n    interval: {default: 80},\n    objects: {default: ''},\n    state: {default: 'collided'},\n    radius: {default: 0.05},\n    watch: {default: true}\n  },\n\n  init: function () {\n    /** @type {MutationObserver} */\n    this.observer = null;\n    /** @type {Array<Element>} Elements to watch for collisions. */\n    this.els = [];\n    /** @type {Array<Element>} Elements currently in collision state. */\n    this.collisions = [];\n    this.prevCheckTime = undefined;\n\n    this.eventDetail = {};\n    this.handleHit = this.handleHit.bind(this);\n    this.handleHitEnd = this.handleHitEnd.bind(this);\n  },\n\n  play: function () {\n    const sceneEl = this.el.sceneEl;\n\n    if (this.data.watch) {\n      this.observer = new MutationObserver(this.update.bind(this, null));\n      this.observer.observe(sceneEl, {childList: true, subtree: true});\n    }\n  },\n\n  pause: function () {\n    if (this.observer) {\n      this.observer.disconnect();\n      this.observer = null;\n    }\n  },\n\n  /**\n   * Update list of entities to test for collision.\n   */\n  update: function () {\n    const data = this.data;\n    let objectEls;\n\n    // Push entities into list of els to intersect.\n    if (data.objects) {\n      objectEls = this.el.sceneEl.querySelectorAll(data.objects);\n    } else {\n      // If objects not defined, intersect with everything.\n      objectEls = this.el.sceneEl.children;\n    }\n    // Convert from NodeList to Array\n    this.els = Array.prototype.slice.call(objectEls);\n  },\n\n  tick: (function () {\n    const position = new THREE.Vector3(),\n        meshPosition = new THREE.Vector3(),\n        colliderScale = new THREE.Vector3(),\n        size = new THREE.Vector3(),\n        box = new THREE.Box3(),\n        collisions = [],\n        distanceMap = new Map();\n    return function (time) {\n      if (!this.data.enabled) { return; }\n\n      // Only check for intersection if interval time has passed.\n      const prevCheckTime = this.prevCheckTime;\n      if (prevCheckTime && (time - prevCheckTime < this.data.interval)) { return; }\n      // Update check time.\n      this.prevCheckTime = time;\n\n      const el = this.el,\n          data = this.data,\n          mesh = el.getObject3D('mesh');\n      let colliderRadius;\n\n      if (!mesh) { return; }\n\n      collisions.length = 0;\n      distanceMap.clear();\n      el.object3D.getWorldPosition(position);\n      el.object3D.getWorldScale(colliderScale);\n      colliderRadius = data.radius * scaleFactor(colliderScale);\n      // Update collision list.\n      this.els.forEach(intersect);\n\n      // Emit events and add collision states, in order of distance.\n      collisions\n        .sort((a, b) => distanceMap.get(a) > distanceMap.get(b) ? 1 : -1)\n        .forEach(this.handleHit);\n\n      // Remove collision state from other elements.\n      this.collisions\n        .filter((el) => !distanceMap.has(el))\n        .forEach(this.handleHitEnd);\n\n      // Store new collisions\n      copyArray(this.collisions, collisions);\n\n      // Bounding sphere collision detection\n      function intersect (el) {\n        let radius, mesh, distance, extent;\n\n        if (!el.isEntity) { return; }\n\n        mesh = el.getObject3D('mesh');\n\n        if (!mesh) { return; }\n\n        box.setFromObject(mesh).getSize(size);\n        extent = Math.max(size.x, size.y, size.z) / 2;\n        radius = Math.sqrt(2 * extent * extent);\n        box.getCenter(meshPosition);\n\n        if (!radius) { return; }\n\n        distance = position.distanceTo(meshPosition);\n        if (distance < radius + colliderRadius) {\n          collisions.push(el);\n          distanceMap.set(el, distance);\n        }\n      }\n      // use max of scale factors to maintain bounding sphere collision\n      function scaleFactor (scaleVec) {\n        return Math.max(scaleVec.x, scaleVec.y, scaleVec.z);\n      }\n    };\n  })(),\n\n  handleHit: function (targetEl) {\n    targetEl.emit('hit');\n    targetEl.addState(this.data.state);\n    this.eventDetail.el = targetEl;\n    this.el.emit('hit', this.eventDetail);\n  },\n  handleHitEnd: function (targetEl) {\n    targetEl.emit('hitend');\n    targetEl.removeState(this.data.state);\n    this.eventDetail.el = targetEl;\n    this.el.emit('hitend', this.eventDetail);\n  }\n});\n\nfunction copyArray (dest, source) {\n  dest.length = 0;\n  for (let i = 0; i < source.length; i++) { dest[i] = source[i]; }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/misc/sphere-collider.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/index.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/index.js ***!
  \****************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./nav-mesh */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-mesh.js\");\n__webpack_require__(/*! ./nav-agent */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-agent.js\");\n__webpack_require__(/*! ./system */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/system.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcGF0aGZpbmRpbmcvaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQUEsbUJBQU8sQ0FBQyx5SEFBWTtBQUNwQixtQkFBTyxDQUFDLDJIQUFhO0FBQ3JCLG1CQUFPLENBQUMscUhBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9wYXRoZmluZGluZy9pbmRleC5qcz81OGNlIl0sInNvdXJjZXNDb250ZW50IjpbInJlcXVpcmUoJy4vbmF2LW1lc2gnKTtcbnJlcXVpcmUoJy4vbmF2LWFnZW50Jyk7XG5yZXF1aXJlKCcuL3N5c3RlbScpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/index.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-agent.js":
/*!********************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-agent.js ***!
  \********************************************************************************************************/
/***/ ((module) => {

eval("module.exports = AFRAME.registerComponent('nav-agent', {\n  schema: {\n    destination: {type: 'vec3'},\n    active: {default: false},\n    speed: {default: 2}\n  },\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.system.addAgent(this);\n    this.group = null;\n    this.path = [];\n    this.raycaster = new THREE.Raycaster();\n  },\n  remove: function () {\n    this.system.removeAgent(this);\n  },\n  update: function () {\n    this.path.length = 0;\n  },\n  updateNavLocation: function () {\n    this.group = null;\n    this.path = [];\n  },\n  tick: (function () {\n    const vDest = new THREE.Vector3();\n    const vDelta = new THREE.Vector3();\n    const vNext = new THREE.Vector3();\n\n    return function (t, dt) {\n      const el = this.el;\n      const data = this.data;\n      const raycaster = this.raycaster;\n      const speed = data.speed * dt / 1000;\n\n      if (!data.active) return;\n\n      // Use PatrolJS pathfinding system to get shortest path to target.\n      if (!this.path.length) {\n        const position = this.el.object3D.position;\n        this.group = this.group || this.system.getGroup(position);\n        this.path = this.system.getPath(position, vDest.copy(data.destination), this.group) || [];\n        el.emit('navigation-start');\n      }\n\n      // If no path is found, exit.\n      if (!this.path.length) {\n        console.warn('[nav] Unable to find path to %o.', data.destination);\n        this.el.setAttribute('nav-agent', {active: false});\n        el.emit('navigation-end');\n        return;\n      }\n\n      // Current segment is a vector from current position to next waypoint.\n      const vCurrent = el.object3D.position;\n      const vWaypoint = this.path[0];\n      vDelta.subVectors(vWaypoint, vCurrent);\n\n      const distance = vDelta.length();\n      let gazeTarget;\n\n      if (distance < speed) {\n        // If <1 step from current waypoint, discard it and move toward next.\n        this.path.shift();\n\n        // After discarding the last waypoint, exit pathfinding.\n        if (!this.path.length) {\n          this.el.setAttribute('nav-agent', {active: false});\n          el.emit('navigation-end');\n          return;\n        }\n\n        vNext.copy(vCurrent);\n        gazeTarget = this.path[0];\n      } else {\n        // If still far away from next waypoint, find next position for\n        // the current frame.\n        vNext.copy(vDelta.setLength(speed)).add(vCurrent);\n        gazeTarget = vWaypoint;\n      }\n\n      // Look at the next waypoint.\n      gazeTarget.y = vCurrent.y;\n      el.object3D.lookAt(gazeTarget);\n\n      // Raycast against the nav mesh, to keep the agent moving along the\n      // ground, not traveling in a straight line from higher to lower waypoints.\n      raycaster.ray.origin.copy(vNext);\n      raycaster.ray.origin.y += 1.5;\n      raycaster.ray.direction = {x:0, y:-1, z:0};\n      const intersections = raycaster.intersectObject(this.system.getNavMesh());\n\n      if (!intersections.length) {\n        // Raycasting failed. Step toward the waypoint and hope for the best.\n        vCurrent.copy(vNext);\n      } else {\n        // Re-project next position onto nav mesh.\n        vDelta.subVectors(intersections[0].point, vCurrent);\n        vCurrent.add(vDelta.setLength(speed));\n      }\n\n    };\n  }())\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcGF0aGZpbmRpbmcvbmF2LWFnZW50LmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQSxrQkFBa0IsYUFBYTtBQUMvQixhQUFhLGVBQWU7QUFDNUIsWUFBWTtBQUNaLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHO0FBQ0g7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0EsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLDJDQUEyQyxjQUFjO0FBQ3pEO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsNkNBQTZDLGNBQWM7QUFDM0Q7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSxRQUFRO0FBQ1I7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQ0FBaUM7QUFDakM7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsUUFBUTtBQUNSO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0EsR0FBRztBQUNILENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9wYXRoZmluZGluZy9uYXYtYWdlbnQuanM/YmNhNyJdLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IEFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgnbmF2LWFnZW50Jywge1xuICBzY2hlbWE6IHtcbiAgICBkZXN0aW5hdGlvbjoge3R5cGU6ICd2ZWMzJ30sXG4gICAgYWN0aXZlOiB7ZGVmYXVsdDogZmFsc2V9LFxuICAgIHNwZWVkOiB7ZGVmYXVsdDogMn1cbiAgfSxcbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuc3lzdGVtID0gdGhpcy5lbC5zY2VuZUVsLnN5c3RlbXMubmF2O1xuICAgIHRoaXMuc3lzdGVtLmFkZEFnZW50KHRoaXMpO1xuICAgIHRoaXMuZ3JvdXAgPSBudWxsO1xuICAgIHRoaXMucGF0aCA9IFtdO1xuICAgIHRoaXMucmF5Y2FzdGVyID0gbmV3IFRIUkVFLlJheWNhc3RlcigpO1xuICB9LFxuICByZW1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLnN5c3RlbS5yZW1vdmVBZ2VudCh0aGlzKTtcbiAgfSxcbiAgdXBkYXRlOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5wYXRoLmxlbmd0aCA9IDA7XG4gIH0sXG4gIHVwZGF0ZU5hdkxvY2F0aW9uOiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5ncm91cCA9IG51bGw7XG4gICAgdGhpcy5wYXRoID0gW107XG4gIH0sXG4gIHRpY2s6IChmdW5jdGlvbiAoKSB7XG4gICAgY29uc3QgdkRlc3QgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuICAgIGNvbnN0IHZEZWx0YSA9IG5ldyBUSFJFRS5WZWN0b3IzKCk7XG4gICAgY29uc3Qgdk5leHQgPSBuZXcgVEhSRUUuVmVjdG9yMygpO1xuXG4gICAgcmV0dXJuIGZ1bmN0aW9uICh0LCBkdCkge1xuICAgICAgY29uc3QgZWwgPSB0aGlzLmVsO1xuICAgICAgY29uc3QgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICAgIGNvbnN0IHJheWNhc3RlciA9IHRoaXMucmF5Y2FzdGVyO1xuICAgICAgY29uc3Qgc3BlZWQgPSBkYXRhLnNwZWVkICogZHQgLyAxMDAwO1xuXG4gICAgICBpZiAoIWRhdGEuYWN0aXZlKSByZXR1cm47XG5cbiAgICAgIC8vIFVzZSBQYXRyb2xKUyBwYXRoZmluZGluZyBzeXN0ZW0gdG8gZ2V0IHNob3J0ZXN0IHBhdGggdG8gdGFyZ2V0LlxuICAgICAgaWYgKCF0aGlzLnBhdGgubGVuZ3RoKSB7XG4gICAgICAgIGNvbnN0IHBvc2l0aW9uID0gdGhpcy5lbC5vYmplY3QzRC5wb3NpdGlvbjtcbiAgICAgICAgdGhpcy5ncm91cCA9IHRoaXMuZ3JvdXAgfHwgdGhpcy5zeXN0ZW0uZ2V0R3JvdXAocG9zaXRpb24pO1xuICAgICAgICB0aGlzLnBhdGggPSB0aGlzLnN5c3RlbS5nZXRQYXRoKHBvc2l0aW9uLCB2RGVzdC5jb3B5KGRhdGEuZGVzdGluYXRpb24pLCB0aGlzLmdyb3VwKSB8fCBbXTtcbiAgICAgICAgZWwuZW1pdCgnbmF2aWdhdGlvbi1zdGFydCcpO1xuICAgICAgfVxuXG4gICAgICAvLyBJZiBubyBwYXRoIGlzIGZvdW5kLCBleGl0LlxuICAgICAgaWYgKCF0aGlzLnBhdGgubGVuZ3RoKSB7XG4gICAgICAgIGNvbnNvbGUud2FybignW25hdl0gVW5hYmxlIHRvIGZpbmQgcGF0aCB0byAlby4nLCBkYXRhLmRlc3RpbmF0aW9uKTtcbiAgICAgICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoJ25hdi1hZ2VudCcsIHthY3RpdmU6IGZhbHNlfSk7XG4gICAgICAgIGVsLmVtaXQoJ25hdmlnYXRpb24tZW5kJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgLy8gQ3VycmVudCBzZWdtZW50IGlzIGEgdmVjdG9yIGZyb20gY3VycmVudCBwb3NpdGlvbiB0byBuZXh0IHdheXBvaW50LlxuICAgICAgY29uc3QgdkN1cnJlbnQgPSBlbC5vYmplY3QzRC5wb3NpdGlvbjtcbiAgICAgIGNvbnN0IHZXYXlwb2ludCA9IHRoaXMucGF0aFswXTtcbiAgICAgIHZEZWx0YS5zdWJWZWN0b3JzKHZXYXlwb2ludCwgdkN1cnJlbnQpO1xuXG4gICAgICBjb25zdCBkaXN0YW5jZSA9IHZEZWx0YS5sZW5ndGgoKTtcbiAgICAgIGxldCBnYXplVGFyZ2V0O1xuXG4gICAgICBpZiAoZGlzdGFuY2UgPCBzcGVlZCkge1xuICAgICAgICAvLyBJZiA8MSBzdGVwIGZyb20gY3VycmVudCB3YXlwb2ludCwgZGlzY2FyZCBpdCBhbmQgbW92ZSB0b3dhcmQgbmV4dC5cbiAgICAgICAgdGhpcy5wYXRoLnNoaWZ0KCk7XG5cbiAgICAgICAgLy8gQWZ0ZXIgZGlzY2FyZGluZyB0aGUgbGFzdCB3YXlwb2ludCwgZXhpdCBwYXRoZmluZGluZy5cbiAgICAgICAgaWYgKCF0aGlzLnBhdGgubGVuZ3RoKSB7XG4gICAgICAgICAgdGhpcy5lbC5zZXRBdHRyaWJ1dGUoJ25hdi1hZ2VudCcsIHthY3RpdmU6IGZhbHNlfSk7XG4gICAgICAgICAgZWwuZW1pdCgnbmF2aWdhdGlvbi1lbmQnKTtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB2TmV4dC5jb3B5KHZDdXJyZW50KTtcbiAgICAgICAgZ2F6ZVRhcmdldCA9IHRoaXMucGF0aFswXTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIC8vIElmIHN0aWxsIGZhciBhd2F5IGZyb20gbmV4dCB3YXlwb2ludCwgZmluZCBuZXh0IHBvc2l0aW9uIGZvclxuICAgICAgICAvLyB0aGUgY3VycmVudCBmcmFtZS5cbiAgICAgICAgdk5leHQuY29weSh2RGVsdGEuc2V0TGVuZ3RoKHNwZWVkKSkuYWRkKHZDdXJyZW50KTtcbiAgICAgICAgZ2F6ZVRhcmdldCA9IHZXYXlwb2ludDtcbiAgICAgIH1cblxuICAgICAgLy8gTG9vayBhdCB0aGUgbmV4dCB3YXlwb2ludC5cbiAgICAgIGdhemVUYXJnZXQueSA9IHZDdXJyZW50Lnk7XG4gICAgICBlbC5vYmplY3QzRC5sb29rQXQoZ2F6ZVRhcmdldCk7XG5cbiAgICAgIC8vIFJheWNhc3QgYWdhaW5zdCB0aGUgbmF2IG1lc2gsIHRvIGtlZXAgdGhlIGFnZW50IG1vdmluZyBhbG9uZyB0aGVcbiAgICAgIC8vIGdyb3VuZCwgbm90IHRyYXZlbGluZyBpbiBhIHN0cmFpZ2h0IGxpbmUgZnJvbSBoaWdoZXIgdG8gbG93ZXIgd2F5cG9pbnRzLlxuICAgICAgcmF5Y2FzdGVyLnJheS5vcmlnaW4uY29weSh2TmV4dCk7XG4gICAgICByYXljYXN0ZXIucmF5Lm9yaWdpbi55ICs9IDEuNTtcbiAgICAgIHJheWNhc3Rlci5yYXkuZGlyZWN0aW9uID0ge3g6MCwgeTotMSwgejowfTtcbiAgICAgIGNvbnN0IGludGVyc2VjdGlvbnMgPSByYXljYXN0ZXIuaW50ZXJzZWN0T2JqZWN0KHRoaXMuc3lzdGVtLmdldE5hdk1lc2goKSk7XG5cbiAgICAgIGlmICghaW50ZXJzZWN0aW9ucy5sZW5ndGgpIHtcbiAgICAgICAgLy8gUmF5Y2FzdGluZyBmYWlsZWQuIFN0ZXAgdG93YXJkIHRoZSB3YXlwb2ludCBhbmQgaG9wZSBmb3IgdGhlIGJlc3QuXG4gICAgICAgIHZDdXJyZW50LmNvcHkodk5leHQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgLy8gUmUtcHJvamVjdCBuZXh0IHBvc2l0aW9uIG9udG8gbmF2IG1lc2guXG4gICAgICAgIHZEZWx0YS5zdWJWZWN0b3JzKGludGVyc2VjdGlvbnNbMF0ucG9pbnQsIHZDdXJyZW50KTtcbiAgICAgICAgdkN1cnJlbnQuYWRkKHZEZWx0YS5zZXRMZW5ndGgoc3BlZWQpKTtcbiAgICAgIH1cblxuICAgIH07XG4gIH0oKSlcbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-agent.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-mesh.js":
/*!*******************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-mesh.js ***!
  \*******************************************************************************************************/
/***/ ((module) => {

eval("/**\n * nav-mesh\n *\n * Waits for a mesh to be loaded on the current entity, then sets it as the\n * nav mesh in the pathfinding system.\n */\nmodule.exports = AFRAME.registerComponent('nav-mesh', {\n  schema: {\n    nodeName: {type: 'string'}\n  },\n\n  init: function () {\n    this.system = this.el.sceneEl.systems.nav;\n    this.hasLoadedNavMesh = false;\n    this.nodeName = this.data.nodeName;\n    this.el.addEventListener('object3dset', this.loadNavMesh.bind(this));\n  },\n\n  play: function () {\n    if (!this.hasLoadedNavMesh) this.loadNavMesh();\n  },\n\n  loadNavMesh: function () {\n    var self = this;\n    const object = this.el.getObject3D('mesh');\n    const scene = this.el.sceneEl.object3D;\n\n    if (!object) return;\n\n    let navMesh;\n    object.traverse((node) => {\n      if (node.isMesh &&\n          (!self.nodeName || node.name === self.nodeName)) navMesh = node;\n    });\n\n    if (!navMesh) return;\n\n    const navMeshGeometry = navMesh.geometry.clone();\n    navMesh.updateWorldMatrix(true, false);\n    navMeshGeometry.applyMatrix4(navMesh.matrixWorld);\n    this.system.setNavMeshGeometry(navMeshGeometry);\n    this.hasLoadedNavMesh = true;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcGF0aGZpbmRpbmcvbmF2LW1lc2guanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWU7QUFDZixHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSzs7QUFFTDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc21hX3Bvc3Rfc2NhcmNpdHkvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcGF0aGZpbmRpbmcvbmF2LW1lc2guanM/YWE5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIG5hdi1tZXNoXG4gKlxuICogV2FpdHMgZm9yIGEgbWVzaCB0byBiZSBsb2FkZWQgb24gdGhlIGN1cnJlbnQgZW50aXR5LCB0aGVuIHNldHMgaXQgYXMgdGhlXG4gKiBuYXYgbWVzaCBpbiB0aGUgcGF0aGZpbmRpbmcgc3lzdGVtLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IEFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgnbmF2LW1lc2gnLCB7XG4gIHNjaGVtYToge1xuICAgIG5vZGVOYW1lOiB7dHlwZTogJ3N0cmluZyd9XG4gIH0sXG5cbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIHRoaXMuc3lzdGVtID0gdGhpcy5lbC5zY2VuZUVsLnN5c3RlbXMubmF2O1xuICAgIHRoaXMuaGFzTG9hZGVkTmF2TWVzaCA9IGZhbHNlO1xuICAgIHRoaXMubm9kZU5hbWUgPSB0aGlzLmRhdGEubm9kZU5hbWU7XG4gICAgdGhpcy5lbC5hZGRFdmVudExpc3RlbmVyKCdvYmplY3QzZHNldCcsIHRoaXMubG9hZE5hdk1lc2guYmluZCh0aGlzKSk7XG4gIH0sXG5cbiAgcGxheTogZnVuY3Rpb24gKCkge1xuICAgIGlmICghdGhpcy5oYXNMb2FkZWROYXZNZXNoKSB0aGlzLmxvYWROYXZNZXNoKCk7XG4gIH0sXG5cbiAgbG9hZE5hdk1lc2g6IGZ1bmN0aW9uICgpIHtcbiAgICB2YXIgc2VsZiA9IHRoaXM7XG4gICAgY29uc3Qgb2JqZWN0ID0gdGhpcy5lbC5nZXRPYmplY3QzRCgnbWVzaCcpO1xuICAgIGNvbnN0IHNjZW5lID0gdGhpcy5lbC5zY2VuZUVsLm9iamVjdDNEO1xuXG4gICAgaWYgKCFvYmplY3QpIHJldHVybjtcblxuICAgIGxldCBuYXZNZXNoO1xuICAgIG9iamVjdC50cmF2ZXJzZSgobm9kZSkgPT4ge1xuICAgICAgaWYgKG5vZGUuaXNNZXNoICYmXG4gICAgICAgICAgKCFzZWxmLm5vZGVOYW1lIHx8IG5vZGUubmFtZSA9PT0gc2VsZi5ub2RlTmFtZSkpIG5hdk1lc2ggPSBub2RlO1xuICAgIH0pO1xuXG4gICAgaWYgKCFuYXZNZXNoKSByZXR1cm47XG5cbiAgICBjb25zdCBuYXZNZXNoR2VvbWV0cnkgPSBuYXZNZXNoLmdlb21ldHJ5LmNsb25lKCk7XG4gICAgbmF2TWVzaC51cGRhdGVXb3JsZE1hdHJpeCh0cnVlLCBmYWxzZSk7XG4gICAgbmF2TWVzaEdlb21ldHJ5LmFwcGx5TWF0cml4NChuYXZNZXNoLm1hdHJpeFdvcmxkKTtcbiAgICB0aGlzLnN5c3RlbS5zZXROYXZNZXNoR2VvbWV0cnkobmF2TWVzaEdlb21ldHJ5KTtcbiAgICB0aGlzLmhhc0xvYWRlZE5hdk1lc2ggPSB0cnVlO1xuICB9XG59KTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/nav-mesh.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/system.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/system.js ***!
  \*****************************************************************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

eval("const { Pathfinding } = __webpack_require__(/*! three-pathfinding */ \"(ssr)/./node_modules/.pnpm/three-pathfinding@1.3.0_three@0.164.1/node_modules/three-pathfinding/dist/three-pathfinding.module.js\");\n\nconst pathfinder = new Pathfinding();\nconst ZONE = 'level';\n\n/**\n * nav\n *\n * Pathfinding system, using PatrolJS.\n */\nmodule.exports = AFRAME.registerSystem('nav', {\n  init: function () {\n    this.navMesh = null;\n    this.agents = new Set();\n  },\n\n  /**\n   * @param {THREE.Geometry} geometry\n   */\n  setNavMeshGeometry: function (geometry) {\n    this.navMesh = new THREE.Mesh(geometry);\n    pathfinder.setZoneData(ZONE, Pathfinding.createZone(geometry));\n    Array.from(this.agents).forEach((agent) => agent.updateNavLocation());\n  },\n\n  /**\n   * @return {THREE.Mesh}\n   */\n  getNavMesh: function () {\n    return this.navMesh;\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  addAgent: function (ctrl) {\n    this.agents.add(ctrl);\n  },\n\n  /**\n   * @param {NavAgent} ctrl\n   */\n  removeAgent: function (ctrl) {\n    this.agents.delete(ctrl);\n  },\n\n  /**\n   * @param  {THREE.Vector3} start\n   * @param  {THREE.Vector3} end\n   * @param  {number} groupID\n   * @return {Array<THREE.Vector3>}\n   */\n  getPath: function (start, end, groupID) {\n    return this.navMesh\n      ? pathfinder.findPath(start, end, ZONE, groupID)\n      : null;\n  },\n\n  /**\n   * @param {THREE.Vector3} position\n   * @return {number}\n   */\n  getGroup: function (position) {\n    return this.navMesh\n      ? pathfinder.getGroup(ZONE, position)\n      : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} position\n   * @param  {number} groupID\n   * @return {Node}\n   */\n  getNode: function (position, groupID) {\n    return this.navMesh\n      ? pathfinder.getClosestNode(position, ZONE, groupID, true)\n      : null;\n  },\n\n  /**\n   * @param  {THREE.Vector3} start Starting position.\n   * @param  {THREE.Vector3} end Desired ending position.\n   * @param  {number} groupID\n   * @param  {Node} node\n   * @param  {THREE.Vector3} endTarget (Output) Adjusted step end position.\n   * @return {Node} Current node, after step is taken.\n   */\n  clampStep: function (start, end, groupID, node, endTarget) {\n    if (!this.navMesh) {\n      endTarget.copy(end);\n      return null;\n    } else if (!node) {\n      endTarget.copy(end);\n      return this.getNode(end, groupID);\n    }\n    return pathfinder.clampStep(start, end, node, ZONE, groupID, endTarget);\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcGF0aGZpbmRpbmcvc3lzdGVtLmpzIiwibWFwcGluZ3MiOiJBQUFBLFFBQVEsY0FBYyxFQUFFLG1CQUFPLENBQUMsMkpBQW1COztBQUVuRDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLGdCQUFnQjtBQUM3QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0EsYUFBYSxVQUFVO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxhQUFhLFVBQVU7QUFDdkI7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGNBQWMsZUFBZTtBQUM3QixjQUFjLGVBQWU7QUFDN0IsY0FBYyxRQUFRO0FBQ3RCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGFBQWEsZUFBZTtBQUM1QixjQUFjO0FBQ2Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7O0FBRUg7QUFDQSxjQUFjLGVBQWU7QUFDN0IsY0FBYyxRQUFRO0FBQ3RCLGNBQWM7QUFDZDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBLGNBQWMsZUFBZTtBQUM3QixjQUFjLGVBQWU7QUFDN0IsY0FBYyxRQUFRO0FBQ3RCLGNBQWMsTUFBTTtBQUNwQixjQUFjLGVBQWU7QUFDN0IsY0FBYyxNQUFNO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ047QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9wYXRoZmluZGluZy9zeXN0ZW0uanM/NDQ5ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCB7IFBhdGhmaW5kaW5nIH0gPSByZXF1aXJlKCd0aHJlZS1wYXRoZmluZGluZycpO1xuXG5jb25zdCBwYXRoZmluZGVyID0gbmV3IFBhdGhmaW5kaW5nKCk7XG5jb25zdCBaT05FID0gJ2xldmVsJztcblxuLyoqXG4gKiBuYXZcbiAqXG4gKiBQYXRoZmluZGluZyBzeXN0ZW0sIHVzaW5nIFBhdHJvbEpTLlxuICovXG5tb2R1bGUuZXhwb3J0cyA9IEFGUkFNRS5yZWdpc3RlclN5c3RlbSgnbmF2Jywge1xuICBpbml0OiBmdW5jdGlvbiAoKSB7XG4gICAgdGhpcy5uYXZNZXNoID0gbnVsbDtcbiAgICB0aGlzLmFnZW50cyA9IG5ldyBTZXQoKTtcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtIHtUSFJFRS5HZW9tZXRyeX0gZ2VvbWV0cnlcbiAgICovXG4gIHNldE5hdk1lc2hHZW9tZXRyeTogZnVuY3Rpb24gKGdlb21ldHJ5KSB7XG4gICAgdGhpcy5uYXZNZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnkpO1xuICAgIHBhdGhmaW5kZXIuc2V0Wm9uZURhdGEoWk9ORSwgUGF0aGZpbmRpbmcuY3JlYXRlWm9uZShnZW9tZXRyeSkpO1xuICAgIEFycmF5LmZyb20odGhpcy5hZ2VudHMpLmZvckVhY2goKGFnZW50KSA9PiBhZ2VudC51cGRhdGVOYXZMb2NhdGlvbigpKTtcbiAgfSxcblxuICAvKipcbiAgICogQHJldHVybiB7VEhSRUUuTWVzaH1cbiAgICovXG4gIGdldE5hdk1lc2g6IGZ1bmN0aW9uICgpIHtcbiAgICByZXR1cm4gdGhpcy5uYXZNZXNoO1xuICB9LFxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge05hdkFnZW50fSBjdHJsXG4gICAqL1xuICBhZGRBZ2VudDogZnVuY3Rpb24gKGN0cmwpIHtcbiAgICB0aGlzLmFnZW50cy5hZGQoY3RybCk7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7TmF2QWdlbnR9IGN0cmxcbiAgICovXG4gIHJlbW92ZUFnZW50OiBmdW5jdGlvbiAoY3RybCkge1xuICAgIHRoaXMuYWdlbnRzLmRlbGV0ZShjdHJsKTtcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtICB7VEhSRUUuVmVjdG9yM30gc3RhcnRcbiAgICogQHBhcmFtICB7VEhSRUUuVmVjdG9yM30gZW5kXG4gICAqIEBwYXJhbSAge251bWJlcn0gZ3JvdXBJRFxuICAgKiBAcmV0dXJuIHtBcnJheTxUSFJFRS5WZWN0b3IzPn1cbiAgICovXG4gIGdldFBhdGg6IGZ1bmN0aW9uIChzdGFydCwgZW5kLCBncm91cElEKSB7XG4gICAgcmV0dXJuIHRoaXMubmF2TWVzaFxuICAgICAgPyBwYXRoZmluZGVyLmZpbmRQYXRoKHN0YXJ0LCBlbmQsIFpPTkUsIGdyb3VwSUQpXG4gICAgICA6IG51bGw7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSB7VEhSRUUuVmVjdG9yM30gcG9zaXRpb25cbiAgICogQHJldHVybiB7bnVtYmVyfVxuICAgKi9cbiAgZ2V0R3JvdXA6IGZ1bmN0aW9uIChwb3NpdGlvbikge1xuICAgIHJldHVybiB0aGlzLm5hdk1lc2hcbiAgICAgID8gcGF0aGZpbmRlci5nZXRHcm91cChaT05FLCBwb3NpdGlvbilcbiAgICAgIDogbnVsbDtcbiAgfSxcblxuICAvKipcbiAgICogQHBhcmFtICB7VEhSRUUuVmVjdG9yM30gcG9zaXRpb25cbiAgICogQHBhcmFtICB7bnVtYmVyfSBncm91cElEXG4gICAqIEByZXR1cm4ge05vZGV9XG4gICAqL1xuICBnZXROb2RlOiBmdW5jdGlvbiAocG9zaXRpb24sIGdyb3VwSUQpIHtcbiAgICByZXR1cm4gdGhpcy5uYXZNZXNoXG4gICAgICA/IHBhdGhmaW5kZXIuZ2V0Q2xvc2VzdE5vZGUocG9zaXRpb24sIFpPTkUsIGdyb3VwSUQsIHRydWUpXG4gICAgICA6IG51bGw7XG4gIH0sXG5cbiAgLyoqXG4gICAqIEBwYXJhbSAge1RIUkVFLlZlY3RvcjN9IHN0YXJ0IFN0YXJ0aW5nIHBvc2l0aW9uLlxuICAgKiBAcGFyYW0gIHtUSFJFRS5WZWN0b3IzfSBlbmQgRGVzaXJlZCBlbmRpbmcgcG9zaXRpb24uXG4gICAqIEBwYXJhbSAge251bWJlcn0gZ3JvdXBJRFxuICAgKiBAcGFyYW0gIHtOb2RlfSBub2RlXG4gICAqIEBwYXJhbSAge1RIUkVFLlZlY3RvcjN9IGVuZFRhcmdldCAoT3V0cHV0KSBBZGp1c3RlZCBzdGVwIGVuZCBwb3NpdGlvbi5cbiAgICogQHJldHVybiB7Tm9kZX0gQ3VycmVudCBub2RlLCBhZnRlciBzdGVwIGlzIHRha2VuLlxuICAgKi9cbiAgY2xhbXBTdGVwOiBmdW5jdGlvbiAoc3RhcnQsIGVuZCwgZ3JvdXBJRCwgbm9kZSwgZW5kVGFyZ2V0KSB7XG4gICAgaWYgKCF0aGlzLm5hdk1lc2gpIHtcbiAgICAgIGVuZFRhcmdldC5jb3B5KGVuZCk7XG4gICAgICByZXR1cm4gbnVsbDtcbiAgICB9IGVsc2UgaWYgKCFub2RlKSB7XG4gICAgICBlbmRUYXJnZXQuY29weShlbmQpO1xuICAgICAgcmV0dXJuIHRoaXMuZ2V0Tm9kZShlbmQsIGdyb3VwSUQpO1xuICAgIH1cbiAgICByZXR1cm4gcGF0aGZpbmRlci5jbGFtcFN0ZXAoc3RhcnQsIGVuZCwgbm9kZSwgWk9ORSwgZ3JvdXBJRCwgZW5kVGFyZ2V0KTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/pathfinding/system.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-grid.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-grid.js ***!
  \****************************************************************************************************/
/***/ ((module) => {

eval("/**\n * Flat grid.\n *\n * Defaults to 75x75.\n */\nmodule.exports = AFRAME.registerPrimitive('a-grid', {\n  defaultComponents: {\n    geometry: {\n      primitive: 'plane',\n      width: 75,\n      height: 75\n    },\n    rotation: {x: -90, y: 0, z: 0},\n    material: {\n      src: 'url(https://cdn.jsdelivr.net/gh/donmccurdy/aframe-extras@v1.16.3/assets/grid.png)',\n      repeat: '75 75'\n    }\n  },\n  mappings: {\n    width: 'geometry.width',\n    height: 'geometry.height',\n    src: 'material.src'\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcHJpbWl0aXZlcy9hLWdyaWQuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxlQUFlLG1CQUFtQjtBQUNsQztBQUNBO0FBQ0E7QUFDQTtBQUNBLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYV9wb3N0X3NjYXJjaXR5Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2FmcmFtZS1leHRyYXNANy41LjEvbm9kZV9tb2R1bGVzL2FmcmFtZS1leHRyYXMvc3JjL3ByaW1pdGl2ZXMvYS1ncmlkLmpzPzQ2NzEiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBGbGF0IGdyaWQuXG4gKlxuICogRGVmYXVsdHMgdG8gNzV4NzUuXG4gKi9cbm1vZHVsZS5leHBvcnRzID0gQUZSQU1FLnJlZ2lzdGVyUHJpbWl0aXZlKCdhLWdyaWQnLCB7XG4gIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgZ2VvbWV0cnk6IHtcbiAgICAgIHByaW1pdGl2ZTogJ3BsYW5lJyxcbiAgICAgIHdpZHRoOiA3NSxcbiAgICAgIGhlaWdodDogNzVcbiAgICB9LFxuICAgIHJvdGF0aW9uOiB7eDogLTkwLCB5OiAwLCB6OiAwfSxcbiAgICBtYXRlcmlhbDoge1xuICAgICAgc3JjOiAndXJsKGh0dHBzOi8vY2RuLmpzZGVsaXZyLm5ldC9naC9kb25tY2N1cmR5L2FmcmFtZS1leHRyYXNAdjEuMTYuMy9hc3NldHMvZ3JpZC5wbmcpJyxcbiAgICAgIHJlcGVhdDogJzc1IDc1J1xuICAgIH1cbiAgfSxcbiAgbWFwcGluZ3M6IHtcbiAgICB3aWR0aDogJ2dlb21ldHJ5LndpZHRoJyxcbiAgICBoZWlnaHQ6ICdnZW9tZXRyeS5oZWlnaHQnLFxuICAgIHNyYzogJ21hdGVyaWFsLnNyYydcbiAgfVxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-grid.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-ocean.js":
/*!*****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-ocean.js ***!
  \*****************************************************************************************************/
/***/ ((module) => {

eval("/**\n * Flat-shaded ocean primitive.\n *\n * Based on a Codrops tutorial:\n * http://tympanus.net/codrops/2016/04/26/the-aviator-animating-basic-3d-scene-threejs/\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-ocean', {\n  defaultComponents: {\n    ocean: {},\n    rotation: {x: -90, y: 0, z: 0}\n  },\n  mappings: {\n    width: 'ocean.width',\n    depth: 'ocean.depth',\n    density: 'ocean.density',\n    amplitude: 'ocean.amplitude',\n    amplitudeVariance: 'ocean.amplitudeVariance',\n    speed: 'ocean.speed',\n    speedVariance: 'ocean.speedVariance',\n    color: 'ocean.color',\n    opacity: 'ocean.opacity'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('ocean', {\n  schema: {\n    // Dimensions of the ocean area.\n    width: {default: 10, min: 0},\n    depth: {default: 10, min: 0},\n\n    // Density of waves.\n    density: {default: 10},\n\n    // Wave amplitude and variance.\n    amplitude: {default: 0.1},\n    amplitudeVariance: {default: 0.3},\n\n    // Wave speed and variance.\n    speed: {default: 1},\n    speedVariance: {default: 2},\n\n    // Material.\n    color: {default: '#7AD2F7', type: 'color'},\n    opacity: {default: 0.8}\n  },\n\n  /**\n   * Use play() instead of init(), because component mappings – unavailable as dependencies – are\n   * not guaranteed to have parsed when this component is initialized.\n   */\n  play: function () {\n    const el = this.el;\n    const data = this.data;\n    let material = el.components.material;\n\n    const geometry = new THREE.PlaneGeometry(data.width, data.depth, data.density, data.density);\n    this.waves = [];\n    const posAttribute = geometry.getAttribute('position');\n    for (let i = 0; i < posAttribute.count; i++) {\n      this.waves.push({\n        z: posAttribute.getZ(i),\n        ang: Math.random() * Math.PI * 2,\n        amp: data.amplitude + Math.random() * data.amplitudeVariance,\n        speed: (data.speed + Math.random() * data.speedVariance) / 1000 // radians / frame\n      });\n    }\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial({\n        color: data.color,\n        transparent: data.opacity < 1,\n        opacity: data.opacity,\n        flatShading: true,\n      });\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    el.setObject3D('mesh', this.mesh);\n  },\n\n  remove: function () {\n    this.el.removeObject3D('mesh');\n  },\n\n  tick: function (t, dt) {\n    if (!dt) return;\n\n    const posAttribute = this.mesh.geometry.getAttribute('position');\n    for (let i = 0; i < posAttribute.count; i++){\n      const vprops = this.waves[i];\n      const value = vprops.z + Math.sin(vprops.ang) * vprops.amp;\n      posAttribute.setZ(i, value);\n      vprops.ang += vprops.speed * dt;\n    }\n    posAttribute.needsUpdate = true;\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcHJpbWl0aXZlcy9hLW9jZWFuLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBLGFBQWE7QUFDYixlQUFlO0FBQ2YsR0FBRztBQUNIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxDQUFDOztBQUVELHdCQUF3QjtBQUN4QjtBQUNBO0FBQ0EsWUFBWSxvQkFBb0I7QUFDaEMsWUFBWSxvQkFBb0I7O0FBRWhDO0FBQ0EsY0FBYyxZQUFZOztBQUUxQjtBQUNBLGdCQUFnQixhQUFhO0FBQzdCLHdCQUF3QixhQUFhOztBQUVyQztBQUNBLFlBQVksV0FBVztBQUN2QixvQkFBb0IsV0FBVzs7QUFFL0I7QUFDQSxZQUFZLGtDQUFrQztBQUM5QyxjQUFjO0FBQ2QsR0FBRzs7QUFFSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBLG9CQUFvQix3QkFBd0I7QUFDNUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLE9BQU87QUFDUDs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0Esb0JBQW9CLHdCQUF3QjtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9wcmltaXRpdmVzL2Etb2NlYW4uanM/ZmUxOCJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEZsYXQtc2hhZGVkIG9jZWFuIHByaW1pdGl2ZS5cbiAqXG4gKiBCYXNlZCBvbiBhIENvZHJvcHMgdHV0b3JpYWw6XG4gKiBodHRwOi8vdHltcGFudXMubmV0L2NvZHJvcHMvMjAxNi8wNC8yNi90aGUtYXZpYXRvci1hbmltYXRpbmctYmFzaWMtM2Qtc2NlbmUtdGhyZWVqcy9cbiAqL1xubW9kdWxlLmV4cG9ydHMuUHJpbWl0aXZlID0gQUZSQU1FLnJlZ2lzdGVyUHJpbWl0aXZlKCdhLW9jZWFuJywge1xuICBkZWZhdWx0Q29tcG9uZW50czoge1xuICAgIG9jZWFuOiB7fSxcbiAgICByb3RhdGlvbjoge3g6IC05MCwgeTogMCwgejogMH1cbiAgfSxcbiAgbWFwcGluZ3M6IHtcbiAgICB3aWR0aDogJ29jZWFuLndpZHRoJyxcbiAgICBkZXB0aDogJ29jZWFuLmRlcHRoJyxcbiAgICBkZW5zaXR5OiAnb2NlYW4uZGVuc2l0eScsXG4gICAgYW1wbGl0dWRlOiAnb2NlYW4uYW1wbGl0dWRlJyxcbiAgICBhbXBsaXR1ZGVWYXJpYW5jZTogJ29jZWFuLmFtcGxpdHVkZVZhcmlhbmNlJyxcbiAgICBzcGVlZDogJ29jZWFuLnNwZWVkJyxcbiAgICBzcGVlZFZhcmlhbmNlOiAnb2NlYW4uc3BlZWRWYXJpYW5jZScsXG4gICAgY29sb3I6ICdvY2Vhbi5jb2xvcicsXG4gICAgb3BhY2l0eTogJ29jZWFuLm9wYWNpdHknXG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cy5Db21wb25lbnQgPSBBRlJBTUUucmVnaXN0ZXJDb21wb25lbnQoJ29jZWFuJywge1xuICBzY2hlbWE6IHtcbiAgICAvLyBEaW1lbnNpb25zIG9mIHRoZSBvY2VhbiBhcmVhLlxuICAgIHdpZHRoOiB7ZGVmYXVsdDogMTAsIG1pbjogMH0sXG4gICAgZGVwdGg6IHtkZWZhdWx0OiAxMCwgbWluOiAwfSxcblxuICAgIC8vIERlbnNpdHkgb2Ygd2F2ZXMuXG4gICAgZGVuc2l0eToge2RlZmF1bHQ6IDEwfSxcblxuICAgIC8vIFdhdmUgYW1wbGl0dWRlIGFuZCB2YXJpYW5jZS5cbiAgICBhbXBsaXR1ZGU6IHtkZWZhdWx0OiAwLjF9LFxuICAgIGFtcGxpdHVkZVZhcmlhbmNlOiB7ZGVmYXVsdDogMC4zfSxcblxuICAgIC8vIFdhdmUgc3BlZWQgYW5kIHZhcmlhbmNlLlxuICAgIHNwZWVkOiB7ZGVmYXVsdDogMX0sXG4gICAgc3BlZWRWYXJpYW5jZToge2RlZmF1bHQ6IDJ9LFxuXG4gICAgLy8gTWF0ZXJpYWwuXG4gICAgY29sb3I6IHtkZWZhdWx0OiAnIzdBRDJGNycsIHR5cGU6ICdjb2xvcid9LFxuICAgIG9wYWNpdHk6IHtkZWZhdWx0OiAwLjh9XG4gIH0sXG5cbiAgLyoqXG4gICAqIFVzZSBwbGF5KCkgaW5zdGVhZCBvZiBpbml0KCksIGJlY2F1c2UgY29tcG9uZW50IG1hcHBpbmdzIOKAkyB1bmF2YWlsYWJsZSBhcyBkZXBlbmRlbmNpZXMg4oCTIGFyZVxuICAgKiBub3QgZ3VhcmFudGVlZCB0byBoYXZlIHBhcnNlZCB3aGVuIHRoaXMgY29tcG9uZW50IGlzIGluaXRpYWxpemVkLlxuICAgKi9cbiAgcGxheTogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGVsID0gdGhpcy5lbDtcbiAgICBjb25zdCBkYXRhID0gdGhpcy5kYXRhO1xuICAgIGxldCBtYXRlcmlhbCA9IGVsLmNvbXBvbmVudHMubWF0ZXJpYWw7XG5cbiAgICBjb25zdCBnZW9tZXRyeSA9IG5ldyBUSFJFRS5QbGFuZUdlb21ldHJ5KGRhdGEud2lkdGgsIGRhdGEuZGVwdGgsIGRhdGEuZGVuc2l0eSwgZGF0YS5kZW5zaXR5KTtcbiAgICB0aGlzLndhdmVzID0gW107XG4gICAgY29uc3QgcG9zQXR0cmlidXRlID0gZ2VvbWV0cnkuZ2V0QXR0cmlidXRlKCdwb3NpdGlvbicpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9zQXR0cmlidXRlLmNvdW50OyBpKyspIHtcbiAgICAgIHRoaXMud2F2ZXMucHVzaCh7XG4gICAgICAgIHo6IHBvc0F0dHJpYnV0ZS5nZXRaKGkpLFxuICAgICAgICBhbmc6IE1hdGgucmFuZG9tKCkgKiBNYXRoLlBJICogMixcbiAgICAgICAgYW1wOiBkYXRhLmFtcGxpdHVkZSArIE1hdGgucmFuZG9tKCkgKiBkYXRhLmFtcGxpdHVkZVZhcmlhbmNlLFxuICAgICAgICBzcGVlZDogKGRhdGEuc3BlZWQgKyBNYXRoLnJhbmRvbSgpICogZGF0YS5zcGVlZFZhcmlhbmNlKSAvIDEwMDAgLy8gcmFkaWFucyAvIGZyYW1lXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZiAoIW1hdGVyaWFsKSB7XG4gICAgICBtYXRlcmlhbCA9IHt9O1xuICAgICAgbWF0ZXJpYWwubWF0ZXJpYWwgPSBuZXcgVEhSRUUuTWVzaFBob25nTWF0ZXJpYWwoe1xuICAgICAgICBjb2xvcjogZGF0YS5jb2xvcixcbiAgICAgICAgdHJhbnNwYXJlbnQ6IGRhdGEub3BhY2l0eSA8IDEsXG4gICAgICAgIG9wYWNpdHk6IGRhdGEub3BhY2l0eSxcbiAgICAgICAgZmxhdFNoYWRpbmc6IHRydWUsXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB0aGlzLm1lc2ggPSBuZXcgVEhSRUUuTWVzaChnZW9tZXRyeSwgbWF0ZXJpYWwubWF0ZXJpYWwpO1xuICAgIGVsLnNldE9iamVjdDNEKCdtZXNoJywgdGhpcy5tZXNoKTtcbiAgfSxcblxuICByZW1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICB0aGlzLmVsLnJlbW92ZU9iamVjdDNEKCdtZXNoJyk7XG4gIH0sXG5cbiAgdGljazogZnVuY3Rpb24gKHQsIGR0KSB7XG4gICAgaWYgKCFkdCkgcmV0dXJuO1xuXG4gICAgY29uc3QgcG9zQXR0cmlidXRlID0gdGhpcy5tZXNoLmdlb21ldHJ5LmdldEF0dHJpYnV0ZSgncG9zaXRpb24nKTtcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBvc0F0dHJpYnV0ZS5jb3VudDsgaSsrKXtcbiAgICAgIGNvbnN0IHZwcm9wcyA9IHRoaXMud2F2ZXNbaV07XG4gICAgICBjb25zdCB2YWx1ZSA9IHZwcm9wcy56ICsgTWF0aC5zaW4odnByb3BzLmFuZykgKiB2cHJvcHMuYW1wO1xuICAgICAgcG9zQXR0cmlidXRlLnNldFooaSwgdmFsdWUpO1xuICAgICAgdnByb3BzLmFuZyArPSB2cHJvcHMuc3BlZWQgKiBkdDtcbiAgICB9XG4gICAgcG9zQXR0cmlidXRlLm5lZWRzVXBkYXRlID0gdHJ1ZTtcbiAgfVxufSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-ocean.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-tube.js":
/*!****************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-tube.js ***!
  \****************************************************************************************************/
/***/ ((module) => {

eval("/**\n * Tube following a custom path.\n *\n * Usage:\n *\n * ```html\n * <a-tube path=\"5 0 5, 5 0 -5, -5 0 -5\" radius=\"0.5\"></a-tube>\n * ```\n */\nmodule.exports.Primitive = AFRAME.registerPrimitive('a-tube', {\n  defaultComponents: {\n    tube:           {},\n  },\n  mappings: {\n    path:           'tube.path',\n    segments:       'tube.segments',\n    radius:         'tube.radius',\n    'radial-segments': 'tube.radialSegments',\n    closed:         'tube.closed'\n  }\n});\n\nmodule.exports.Component = AFRAME.registerComponent('tube', {\n  schema: {\n    path:           {default: []},\n    segments:       {default: 64},\n    radius:         {default: 1},\n    radialSegments: {default: 8},\n    closed:         {default: false}\n  },\n\n  init: function () {\n    const el = this.el,\n        data = this.data;\n    let material = el.components.material;\n\n    if (!data.path.length) {\n      console.error('[a-tube] `path` property expected but not found.');\n      return;\n    }\n\n    const curve = new THREE.CatmullRomCurve3(data.path.map(function (point) {\n      point = point.split(' ');\n      return new THREE.Vector3(Number(point[0]), Number(point[1]), Number(point[2]));\n    }));\n    const geometry = new THREE.TubeGeometry(\n      curve, data.segments, data.radius, data.radialSegments, data.closed\n    );\n\n    if (!material) {\n      material = {};\n      material.material = new THREE.MeshPhongMaterial();\n    }\n\n    this.mesh = new THREE.Mesh(geometry, material.material);\n    this.el.setObject3D('mesh', this.mesh);\n  },\n\n  update: function (prevData) {\n    if (!Object.keys(prevData).length) return;\n\n    this.remove();\n    this.init();\n  },\n\n  remove: function () {\n    if (this.mesh) this.el.removeObject3D('mesh');\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcHJpbWl0aXZlcy9hLXR1YmUuanMiLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0JBQXdCO0FBQ3hCO0FBQ0Esc0JBQXNCO0FBQ3RCLEdBQUc7QUFDSDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7O0FBRUQsd0JBQXdCO0FBQ3hCO0FBQ0EscUJBQXFCLFlBQVk7QUFDakMscUJBQXFCLFlBQVk7QUFDakMscUJBQXFCLFdBQVc7QUFDaEMscUJBQXFCLFdBQVc7QUFDaEMscUJBQXFCO0FBQ3JCLEdBQUc7O0FBRUg7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0EsR0FBRzs7QUFFSDtBQUNBOztBQUVBO0FBQ0E7QUFDQSxHQUFHOztBQUVIO0FBQ0E7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFfcG9zdF9zY2FyY2l0eS8uL25vZGVfbW9kdWxlcy8ucG5wbS9hZnJhbWUtZXh0cmFzQDcuNS4xL25vZGVfbW9kdWxlcy9hZnJhbWUtZXh0cmFzL3NyYy9wcmltaXRpdmVzL2EtdHViZS5qcz83ZTEwIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogVHViZSBmb2xsb3dpbmcgYSBjdXN0b20gcGF0aC5cbiAqXG4gKiBVc2FnZTpcbiAqXG4gKiBgYGBodG1sXG4gKiA8YS10dWJlIHBhdGg9XCI1IDAgNSwgNSAwIC01LCAtNSAwIC01XCIgcmFkaXVzPVwiMC41XCI+PC9hLXR1YmU+XG4gKiBgYGBcbiAqL1xubW9kdWxlLmV4cG9ydHMuUHJpbWl0aXZlID0gQUZSQU1FLnJlZ2lzdGVyUHJpbWl0aXZlKCdhLXR1YmUnLCB7XG4gIGRlZmF1bHRDb21wb25lbnRzOiB7XG4gICAgdHViZTogICAgICAgICAgIHt9LFxuICB9LFxuICBtYXBwaW5nczoge1xuICAgIHBhdGg6ICAgICAgICAgICAndHViZS5wYXRoJyxcbiAgICBzZWdtZW50czogICAgICAgJ3R1YmUuc2VnbWVudHMnLFxuICAgIHJhZGl1czogICAgICAgICAndHViZS5yYWRpdXMnLFxuICAgICdyYWRpYWwtc2VnbWVudHMnOiAndHViZS5yYWRpYWxTZWdtZW50cycsXG4gICAgY2xvc2VkOiAgICAgICAgICd0dWJlLmNsb3NlZCdcbiAgfVxufSk7XG5cbm1vZHVsZS5leHBvcnRzLkNvbXBvbmVudCA9IEFGUkFNRS5yZWdpc3RlckNvbXBvbmVudCgndHViZScsIHtcbiAgc2NoZW1hOiB7XG4gICAgcGF0aDogICAgICAgICAgIHtkZWZhdWx0OiBbXX0sXG4gICAgc2VnbWVudHM6ICAgICAgIHtkZWZhdWx0OiA2NH0sXG4gICAgcmFkaXVzOiAgICAgICAgIHtkZWZhdWx0OiAxfSxcbiAgICByYWRpYWxTZWdtZW50czoge2RlZmF1bHQ6IDh9LFxuICAgIGNsb3NlZDogICAgICAgICB7ZGVmYXVsdDogZmFsc2V9XG4gIH0sXG5cbiAgaW5pdDogZnVuY3Rpb24gKCkge1xuICAgIGNvbnN0IGVsID0gdGhpcy5lbCxcbiAgICAgICAgZGF0YSA9IHRoaXMuZGF0YTtcbiAgICBsZXQgbWF0ZXJpYWwgPSBlbC5jb21wb25lbnRzLm1hdGVyaWFsO1xuXG4gICAgaWYgKCFkYXRhLnBhdGgubGVuZ3RoKSB7XG4gICAgICBjb25zb2xlLmVycm9yKCdbYS10dWJlXSBgcGF0aGAgcHJvcGVydHkgZXhwZWN0ZWQgYnV0IG5vdCBmb3VuZC4nKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBjb25zdCBjdXJ2ZSA9IG5ldyBUSFJFRS5DYXRtdWxsUm9tQ3VydmUzKGRhdGEucGF0aC5tYXAoZnVuY3Rpb24gKHBvaW50KSB7XG4gICAgICBwb2ludCA9IHBvaW50LnNwbGl0KCcgJyk7XG4gICAgICByZXR1cm4gbmV3IFRIUkVFLlZlY3RvcjMoTnVtYmVyKHBvaW50WzBdKSwgTnVtYmVyKHBvaW50WzFdKSwgTnVtYmVyKHBvaW50WzJdKSk7XG4gICAgfSkpO1xuICAgIGNvbnN0IGdlb21ldHJ5ID0gbmV3IFRIUkVFLlR1YmVHZW9tZXRyeShcbiAgICAgIGN1cnZlLCBkYXRhLnNlZ21lbnRzLCBkYXRhLnJhZGl1cywgZGF0YS5yYWRpYWxTZWdtZW50cywgZGF0YS5jbG9zZWRcbiAgICApO1xuXG4gICAgaWYgKCFtYXRlcmlhbCkge1xuICAgICAgbWF0ZXJpYWwgPSB7fTtcbiAgICAgIG1hdGVyaWFsLm1hdGVyaWFsID0gbmV3IFRIUkVFLk1lc2hQaG9uZ01hdGVyaWFsKCk7XG4gICAgfVxuXG4gICAgdGhpcy5tZXNoID0gbmV3IFRIUkVFLk1lc2goZ2VvbWV0cnksIG1hdGVyaWFsLm1hdGVyaWFsKTtcbiAgICB0aGlzLmVsLnNldE9iamVjdDNEKCdtZXNoJywgdGhpcy5tZXNoKTtcbiAgfSxcblxuICB1cGRhdGU6IGZ1bmN0aW9uIChwcmV2RGF0YSkge1xuICAgIGlmICghT2JqZWN0LmtleXMocHJldkRhdGEpLmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgdGhpcy5yZW1vdmUoKTtcbiAgICB0aGlzLmluaXQoKTtcbiAgfSxcblxuICByZW1vdmU6IGZ1bmN0aW9uICgpIHtcbiAgICBpZiAodGhpcy5tZXNoKSB0aGlzLmVsLnJlbW92ZU9iamVjdDNEKCdtZXNoJyk7XG4gIH1cbn0pO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-tube.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/index.js":
/*!***************************************************************************************************!*\
  !*** ./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/index.js ***!
  \***************************************************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("__webpack_require__(/*! ./a-grid */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-grid.js\");\n__webpack_require__(/*! ./a-ocean */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-ocean.js\");\n__webpack_require__(/*! ./a-tube */ \"(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/a-tube.js\");\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vYWZyYW1lLWV4dHJhc0A3LjUuMS9ub2RlX21vZHVsZXMvYWZyYW1lLWV4dHJhcy9zcmMvcHJpbWl0aXZlcy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBQSxtQkFBTyxDQUFDLG9IQUFVO0FBQ2xCLG1CQUFPLENBQUMsc0hBQVc7QUFDbkIsbUJBQU8sQ0FBQyxvSEFBVSIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYV9wb3N0X3NjYXJjaXR5Ly4vbm9kZV9tb2R1bGVzLy5wbnBtL2FmcmFtZS1leHRyYXNANy41LjEvbm9kZV9tb2R1bGVzL2FmcmFtZS1leHRyYXMvc3JjL3ByaW1pdGl2ZXMvaW5kZXguanM/NWEwMiJdLCJzb3VyY2VzQ29udGVudCI6WyJyZXF1aXJlKCcuL2EtZ3JpZCcpO1xucmVxdWlyZSgnLi9hLW9jZWFuJyk7XG5yZXF1aXJlKCcuL2EtdHViZScpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/aframe-extras@7.5.1/node_modules/aframe-extras/src/primitives/index.js\n");

/***/ })

};
;